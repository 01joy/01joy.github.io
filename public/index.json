[{"content":"博客数据恢复中，敬请期待！\n测试图片： 测试代码：\n// Necessary header files for input output functions #include \u0026lt;iostream\u0026gt; using namespace std; // main() function: where the execution of // C++ program begins int main() { // This statement prints \u0026#34;Hello World\u0026#34; cout \u0026lt;\u0026lt; \u0026#34;Hello World\u0026#34;; return 0; } 测试数学公式： This is an inline \\(a^*=x-b^*\\) equation.\nThese are block equations:\n\\[a^*=x-b^*\\]\\[ a^*=x-b^* \\]\\[ a^*=x-b^* \\]These are also block equations:\n$$a^*=x-b^*$$$$ a^*=x-b^* $$$$ a^*=x-b^* $$","permalink":"http://localhost:1313/posts/2025-08-15-announcement/","summary":"\u003cp\u003e博客数据恢复中，敬请期待！\u003c/p\u003e\n\u003cp\u003e测试图片：\n\u003cimg alt=\"这是图片\" loading=\"lazy\" src=\"/posts/2025-08-15-announcement/myimg.png\"\u003e\u003c/p\u003e\n\u003cp\u003e测试代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Necessary header files for input output functions\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eusing\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enamespace\u003c/span\u003e std;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// main() function: where the execution of\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// C++ program begins\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// This statement prints \u0026#34;Hello World\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    cout \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello World\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e测试数学公式：\nThis is an inline \\(a^*=x-b^*\\) equation.\u003c/p\u003e\n\u003cp\u003eThese are block equations:\u003c/p\u003e\n\\[a^*=x-b^*\\]\\[ a^*=x-b^* \\]\\[\na^*=x-b^*\n\\]\u003cp\u003eThese are also block equations:\u003c/p\u003e\n$$a^*=x-b^*$$$$ a^*=x-b^* $$$$\na^*=x-b^*\n$$","title":"公告"},{"content":"这是我的个人博客，数据恢复中\u0026hellip;\n欢迎评论，如需私信请联系: bitjoy@163.com\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003e这是我的个人博客，数据恢复中\u0026hellip;\u003c/p\u003e\n\u003cp\u003e欢迎评论，如需私信请联系: \u003ca href=\"mailto:bitjoy@163.com\"\u003ebitjoy@163.com\u003c/a\u003e\u003c/p\u003e","title":"关于"},{"content":"一、第一次使用Github的步骤： 在这个页面中填写Repo名称 不要勾选Initialize this repository with a README 点击Create repository 在本地使用Git命令行工具进入到和第1步填写Repo相同名称的文件夹中（此文件夹中已包含你要push到Github上的内容），执行以下几个命令： git init touch README.md #optional git add . git commit -m \u0026#39;your comment\u0026#39; git remote add origin https://github.com/UserName/RepoName git push origin master 如果你在第2步中勾选了Initialize this repository with a README，那么在第4步中省略touch README.md并且在git add .之前，执行第5行代码，然后git pull origin master将远端（remote）的内容pull到本地 关于Git命令中的fetch和pull的区别，请看这篇博文 关于Git bash和Github的连接，请看这篇博文 二、Git命令中fetch和pull的区别（转载） Git中从远程的分支获取最新的版本到本地有这样2个命令：\ngit fetch：相当于是从远程获取最新版本到本地，不会自动merge git fetch origin master git log -p master..origin/master git merge origin/master 以上命令的含义：首先从远程的origin的master主分支下载最新的版本到origin/master分支上，然后比较本地的master分支和origin/master分支的差别，最后进行合并。\n上述过程其实可以用以下更清晰的方式来进行：\ngit fetch origin master:tmp git diff tmp git merge tmp 从远程获取最新的版本到本地的test分支上，之后再进行比较合并。\ngit pull：相当于是从远程获取最新版本并merge到本地 git pull origin master 上述命令其实相当于git fetch + git merge。\n在实际使用中，git fetch更安全一些，因为在merge前，我们可以查看更新情况，然后再决定是否合并。\n","permalink":"http://localhost:1313/posts/2014-11-11-git-notes/","summary":"\u003ch1 id=\"一第一次使用github的步骤\"\u003e一、第一次使用Github的步骤：\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003e在\u003ca href=\"https://github.com/new\"\u003e这个页面\u003c/a\u003e中填写Repo名称\u003c/li\u003e\n\u003cli\u003e不要勾选Initialize this repository with a README\u003c/li\u003e\n\u003cli\u003e点击Create repository\u003c/li\u003e\n\u003cli\u003e在本地使用Git命令行工具进入到和第1步填写Repo相同名称的文件夹中（此文件夹中已包含你要push到Github上的内容），执行以下几个命令：\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit init\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etouch README.md \u003cspan style=\"color:#75715e\"\u003e#optional\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit add .\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit commit -m \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;your comment\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit remote add origin https://github.com/UserName/RepoName\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit push origin master\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003e如果你在第2步中勾选了Initialize this repository with a README，那么在第4步中省略touch README.md并且在git add .之前，执行第5行代码，然后git pull origin master将远端（remote）的内容pull到本地\u003c/li\u003e\n\u003cli\u003e关于Git命令中的fetch和pull的区别，请看\u003ca href=\"https://blog.csdn.net/wfdtxz/article/details/8632811\"\u003e这篇博文\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e关于Git bash和Github的连接，请看\u003ca href=\"https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html\"\u003e这篇博文\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch1 id=\"二git命令中fetch和pull的区别转载\"\u003e二、Git命令中fetch和pull的区别（\u003ca href=\"https://blog.csdn.net/wfdtxz/article/details/8632811\"\u003e转载\u003c/a\u003e）\u003c/h1\u003e\n\u003cp\u003eGit中从远程的分支获取最新的版本到本地有这样2个命令：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003egit fetch：相当于是从远程获取最新版本到本地，不会自动merge\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit fetch origin master\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit log -p master..origin/master\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit merge origin/master\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以上命令的含义：首先从远程的origin的master主分支下载最新的版本到origin/master分支上，然后比较本地的master分支和origin/master分支的差别，最后进行合并。\u003c/p\u003e\n\u003cp\u003e上述过程其实可以用以下更清晰的方式来进行：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit fetch origin master:tmp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit diff tmp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit merge tmp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从远程获取最新的版本到本地的test分支上，之后再进行比较合并。\u003c/p\u003e","title":"Git相关笔记"}]