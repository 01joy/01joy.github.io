<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on bitJoy</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on bitJoy</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Thu, 09 Oct 2025 18:17:16 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>论文阅读：Enhancing Embedding Representation Stability in Recommendation Systems with Semantic ID</title>
      <link>http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/</link>
      <pubDate>Thu, 09 Oct 2025 18:17:16 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：Enhancing Embedding Representation Stability in Recommendation Systems with Semantic ID&lt;/li&gt;
&lt;li&gt;作者单位：Meta&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2504.02137&#34;&gt;https://arxiv.org/pdf/2504.02137&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：RecSys 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;搜推广的模型严重依赖于item id embedding的表征质量，但在工业场景下，搜推广的id表征存在如下挑战：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id量级非常大，常常是数十亿甚至是百亿的规模。因此，通常不可能给每个id一个单独的embedding（即文中的individual embedding, IE），IE的成本太高&lt;/li&gt;
&lt;li&gt;id分布非常不均匀，马太效应严重。文中统计：0.1%的头部item占据了25%的曝光量；5.5%的腰部item占据了50%的曝光量；94.4%的尾部item只占据了25%的曝光量&lt;/li&gt;
&lt;li&gt;id分布漂移严重：搜推广场景中item的变化非常频繁，无时无刻不在发生着新id的产生和旧id的退出，而且不同id存活的时间周期也不尽相同，所以id的准入准出策略很难完美适配所有item&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-fig2.png&#34;&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-fig3.png&#34;&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;针对上述问题，常见的做法是对item id采用hash然后查emb的方式（即文中的random hash，RH），将所有id hash到一个固定大小的空间，然后查emb。但是RH方式有如下缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存在hash冲突，把不相关的id hash到一个桶里，导致语义混乱，学习效果不佳&lt;/li&gt;
&lt;li&gt;无法解决id分布漂移的问题，比如hash到同一个桶的A、B两个id，如果B出现频率变高，则会带偏A的分布，影响了A的效果&lt;/li&gt;
&lt;li&gt;无法进行知识共享，例如新出了商品iphone15，iphone15无法共享到老的iphone14的emb知识，iphone15的id emb必须完全重新学习。针对这种情况，作者做了一个更加极端的AA实验，就是copy一个完全相同的商品，只换item id，如果是IE或者RH策略，则新商品由于id emb是随机初始化的，效果不佳，这是id-based的通病&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;基于前缀n-gram的semantic-id表征方法&#34;&gt;基于前缀n-gram的semantic id表征方法&lt;/h1&gt;
&lt;p&gt;针对上述问题，作者沿用了semantic id的思路，首先使用内容理解团队产出的文本、图片等多模态emb，然后基于过去3个月的item多模态emb，训练RQ-VAE模型，并产出所有item的semantic id。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-fig1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述过程都是常规操作，重点在于如何基于semantic id得到item emb表征。假设semantic id是L层，每层的codebook size是K：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最常规的做法：每层都初始化一个K*d的emb table，每层sid查各自的emb table，然后把L层的sid emb加起来。但是本文完全没有提这种方法，也没有和这种方法比较，非常奇怪。
&lt;ul&gt;
&lt;li&gt;为了比较，我个人再详细描述下这种常规做法。比如老item A的sid是(c1,c2,c3)；新来一个item B，它的sid是(c1,c2,c4)。用常规方法，A的emb是c1+c2+c3，B的emb是c1+c2+c4。两者c1、c2是可以共享的，所以常规方法也能起到一定的知识共享的效果，共享项有2项：c1、c2。但是因为&lt;a href=&#34;https://arxiv.org/abs/2407.21488&#34;&gt;RQ-VAE的沙漏问题&lt;/a&gt;，c2很有可能是沙漏瓶颈，信息量不足。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;作者对比了Table 1中的几种方法：&lt;/li&gt;
&lt;li&gt;Trigram和Fourgram差不多，如果L=3用Trigram、L=4用Fourgram的话，本质上是把L个sid映射成了一个无冲突的int。但是这种方法映射出来的int数量太多了，是\(K^L\)。如果K=1024、L=3，则\(K^L\)就已经超过10亿了，这和直接无冲突的IE方法一样了，而且存在新id无法共享老id学到的知识的问题&lt;/li&gt;
&lt;li&gt;All bigrams，就是所有的sid的2-gram。还是上面的例子，A的emb相当于\(c_1c_2+c_2c_3\)，B的emb相当于\(c_1c_2+c_2c_4\)，两者可共享\(c_1c_2\)项，相比于常规方法，虽然共享项数变少了，但粒度更精细了，孰好孰坏未可知。由Table 2可知，All bigrams的效果至少比Trigram和Fourgram好很多了，而且如果层数L越大，可共享项越多&lt;/li&gt;
&lt;li&gt;Prefix-ngram（简称Prefix-SID方法），本文提出的新方法，把所有前缀组合成新id查emb，然后所有emb再求和。还是上面的例子，A的emb相当于\(c_1+c_1c_2+c_1c_2c_3+c_2+c_2c_3+c_3\)，B的emb相当于\(c_1+c_1c_2+c_1c_2c_4+c_2+c_2c_4+c_4\)，两者可共享\(c_1, c_1c_2, c_2\)三项，比之前的所有方法可共享的信息都多，而且如果层数L越大，可共享项越多，因此这种方法的效果最好，训练也最稳定&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-tab1.png&#34;&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-tab2.png&#34;&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;实验结果很丰富，做了很多分析，Prefix-SID方法有如下优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相比于IE和RH方法，Prefix-SID方法对中长尾item的提升尤其显著，因为新id和老id的表征有了知识共享&lt;/li&gt;
&lt;li&gt;对id分布漂移问题更不敏感：由于电商模型训练时消费数据的顺序是和数据的时间一致的，比如一个月的数据，按照1号、2号、&amp;hellip;31号这样的时间先后顺序依次训练，理论上4号的模型在4号的测试集上的效果是最好的。作者做了一个实验，分别用20号和4号的模型都在4号的测试集上进行评测，看看20号的模型指标相比4号降低了多少。作者发现，使用Prefix-SID方法和IE方法，两者的指标降低幅度都差不多，都比较小。首先IE方法由于不存在hash冲突，所以20号的模型仍然能比较好地预测4号的数据；其次，Prefix-SID方法虽然有hash冲突，但是因为冲突的item都是语义相似的，可以进行新老item的知识共享，所以这个冲突反而是好事，对模型效果无影响。但是作者发现RH方法的20号的模型在4号数据上评测指标下降比较多，因为有hash冲突，而且冲突是随机的，20号的分布已经变化很大了，导致在4号数据上效果不佳。Table 4的指标越小越好。
&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-tab4.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;基于Prefix-SID方法虽然也有hash冲突，但是冲突到同一个semantic id的item表征更相似，而RH冲突到同一个桶里的item是完全随机的，相似度差。作者以IE为base，把Prefix-SID和RH都各自都冲突到同一个桶的IE emb提取出来，计算类内相似度和类间相似度，发现基于Prefix-SID的类内相似度方差小，类间距离大，说明Prefix-SID确实能把相似item聚到一起。
&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-09-meta-prefix-ngram-sid-paper-reading/meta-ngram-sid-tab5.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可借鉴
&lt;ul&gt;
&lt;li&gt;基于Prefix-SID方法确实能提高新item和老item的信息共享数量，方法值得借鉴&lt;/li&gt;
&lt;li&gt;论文实验分析很丰富&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可改进
&lt;ul&gt;
&lt;li&gt;基于Prefix-SID方法居然没有和最常规的加和方法比较，是本文最大的不足&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>论文阅读：VL-CLIP: Enhancing Multimodal Recommendations via Visual Grounding and LLM-Augmented CLIP Embeddings</title>
      <link>http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/</link>
      <pubDate>Wed, 08 Oct 2025 23:31:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/VL-CLIP-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：VL-CLIP: Enhancing Multimodal Recommendations via Visual Grounding and LLM-Augmented CLIP Embeddings&lt;/li&gt;
&lt;li&gt;作者单位：沃尔玛&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2507.17080&#34;&gt;https://arxiv.org/pdf/2507.17080&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：RecSys 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;多模态q2i召回通常使用CLIP的对比学习方式进行训练，在电商场景下存在2个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CLIP这种方式通常是对图片整体的表征，缺乏细粒度的目标检测能力，尤其在电商场景，比如fig1，卖衣服场景，传统CLIP只能识别整张图片是一件T恤，难以关注T恤上的图案等细节特征；另外，电商图片往往存在很多附加背景、道具、模特等元素，会影响主体物体的表征&lt;/li&gt;
&lt;li&gt;电商标题、属性等文本描述通常参差不齐，存在错误、堆砌、图文不符等问题，导致CLIP训练时图文对齐效果不佳&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/VL-CLIP-fig1.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;vl-clip解决方案&#34;&gt;VL-CLIP解决方案&lt;/h1&gt;
&lt;p&gt;针对图片的处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将图片和商品类型（product type）输入到开源模型&lt;a href=&#34;https://github.com/IDEA-Research/GroundingDINO&#34;&gt;Grounding DINO&lt;/a&gt;中，让模型进行目标检测，将可信度超过某个阈值且可信度最高的区域抠出来，输入到CLIP的图像encoder中。通过这步预处理，相当于对电商图片进行了关键主体识别和提取，只提取和商品最相关的主体进行图像表征。文中使用的图像编码器是ViT-B/32。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/VL-CLIP-fig2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;针对文本的处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将商品的类型、标题、描述、性别、年龄等文本描述以及图片本身输入到Summarizer多模态大模型，让大模型产出精简、准确的文本描述\(q_0\)&lt;/li&gt;
&lt;li&gt;将\(q_0\)和商品图文信息输入到Evaluator多模态大模型，让大模型对\(q_0\)的质量进行评判，如果\(q_0\)质量很好，则直接输出&amp;lt;STOP&amp;gt;；否则指出\(q_0\)的问题所在，并说明改进方法&lt;/li&gt;
&lt;li&gt;如果第2步输出不是&amp;lt;STOP&amp;gt;，则将第2步的输出再输入到Refiner大模型，让大模型根据第2步的结果继续调整并输出更优的文本描述\(q_i\)&lt;/li&gt;
&lt;li&gt;不断重复第2、3步，直到输出&amp;lt;STOP&amp;gt;，或者最多重复5遍&lt;/li&gt;
&lt;li&gt;将产出的精准的文本描述q输入到CLIP的文本encoder中，文中使用的是BERT系列。产出的emb维度是512&lt;/li&gt;
&lt;li&gt;上述Summarizer、Evaluator、Refiner都是VLM，文中使用的是GPT-4o，三个任务的prompt设计参考论文附录Table 9&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-08-vl-clip-paper-reading/VL-CLIP-fig3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述对图片和文本的处理本质上是去噪，提取图片的主体物品、让文本描述更加精准。&lt;/p&gt;
&lt;p&gt;产出多模态emb之后，后续的操作就是常规的召回流程了，使用HNSW进行ANN召回。&lt;/p&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可借鉴
&lt;ul&gt;
&lt;li&gt;使用Grounding DINO对图片进行主体识别，值得借鉴&lt;/li&gt;
&lt;li&gt;使用VLM对商品标题、描述等文本信息进行去噪，值得借鉴&lt;/li&gt;
&lt;li&gt;但如果商品量级很大的话，这两个步骤估计会很耗时&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可改进
&lt;ul&gt;
&lt;li&gt;如果是q2i场景，直接用query文本是不是更真实，更接近搜索日子的真实数据分布？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>论文阅读：Generative Recommendation with Semantic IDs: A Practitioner’s Handbook</title>
      <link>http://localhost:1313/posts/2025-10-07-grid-paper-reading/</link>
      <pubDate>Tue, 07 Oct 2025 12:09:43 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-07-grid-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-07-grid-paper-reading/GRID-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：Generative Recommendation with Semantic IDs: A Practitioner’s Handbook&lt;/li&gt;
&lt;li&gt;作者单位：Snap&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2507.22224&#34;&gt;https://arxiv.org/pdf/2507.22224&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：CIKM 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是CIKM 2025的一篇resource文章，比较简单。核心内容是开源了一个基于semantic id的生成式推荐框架GRID，可以很方便地做各种消融对比实验。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-07-grid-paper-reading/GRID-fig1.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;主要内容&#34;&gt;主要内容&lt;/h1&gt;
&lt;p&gt;主要结论如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于semantic id生成算法，简单的RQ-KMeans效果反而是最好的，好于R-VQ和RQ-VAE&lt;/li&gt;
&lt;li&gt;生产pretrain emb的LLM模型参数量越大，效果越好，但是提升幅度有限&lt;/li&gt;
&lt;li&gt;生产semantic id的codebook size和网络层数并不是越大越好，常规的3层，每层256个id效果反而最好&lt;/li&gt;
&lt;li&gt;生成式推荐时，是否需要在用户行为序列基础上增加一个user id，实验发现增加user id效果反而变差，不增加user id效果最好&lt;/li&gt;
&lt;li&gt;生成式网络结构encoder-decoder对比decoder-only，发现前者效果更好，因为前者能充分学习到行为序列完整的信息&lt;/li&gt;
&lt;li&gt;对行为流进行滑动窗口数据增强能提升模型的泛化能力&lt;/li&gt;
&lt;li&gt;当semantic id到item存在映射冲突时，随机选一个item的效果和对冲突item追加一个区分标识（digit），两者效果差不多&lt;/li&gt;
&lt;li&gt;在生成式beam search的时候，限制只输出合法semantic id和不增加限制，两者效果差不多&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;p&gt;看这篇文章主要是想看看不同semantic id生产方法的对比，发现RQ-KMeans居然比RQ-VAE更好。个人感觉这两个方法效果应该差不多，后者应该更好点才对。首先，RQ-VAE的量化loss本质上和KMeans聚类是一个意思；其次，RQ-VAE还增加了一个重构loss，感觉产出来的semantic id和原始emb的信息损失应该更少。&lt;/p&gt;
&lt;p&gt;此外，本文的所有实验都是基于亚马逊的公开数据集，数据量肯定不能和真正的工业数据集相提并论，所以文中很多结论有可能只适用于本文的设定，换一个场景估计结论就变了，所以看看就好。&lt;/p&gt;
&lt;p&gt;最后，文中很多结论只写了现象，要是能增加原因分析就好了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>论文阅读：Progressive Semantic Residual Quantization for Multimodal-Joint Interest Modeling in Music Recommendation</title>
      <link>http://localhost:1313/posts/2025-10-06-psrq-paper-reading/</link>
      <pubDate>Mon, 06 Oct 2025 21:01:25 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-06-psrq-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-06-psrq-paper-reading/PSRQ-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：Progressive Semantic Residual Quantization for Multimodal-Joint Interest Modeling in Music Recommendation&lt;/li&gt;
&lt;li&gt;作者单位：网易云音乐&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2508.20359&#34;&gt;https://arxiv.org/pdf/2508.20359&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：CIKM 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;多模态emb在搜推的应用方式，通常是先将多模态emb转换成semantic id，然后把semantic id用到搜推模型中，这种方式有如下两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模态内语义退化&lt;/strong&gt;：多模态emb转换成semantic id通常使用RQ-VAE或者RQ-KMeans的方法，这种方法在不断残差的过程中，后续残差聚类结果已经不能反映初始emb的聚类效果了。其实就是semantic id的沙漏问题，具体可以看&lt;a href=&#34;https://arxiv.org/abs/2407.21488&#34;&gt;这篇文章&lt;/a&gt;，后续有空再分享这个问题。
&lt;ul&gt;
&lt;li&gt;简单来说，如下图所示，初始有DJ、Rock、Lullaby、Choir四个类，但是对残差emb（即RQ-VAE的第二层）聚类的话，初始的四个类的item就打散了，会聚到不同的簇中，也就是RQ-VAE的后续层的聚类效果已经和初始emb的聚类效果很不一样了，这就是文中说的语义退化问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模态间建模差异&lt;/strong&gt;：搜推场景的item通常有多种模态特征，比如文本、图像、音频等，传统方法在多模态融合方面比较简单，不能很好地捕捉多模态之间的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-06-psrq-paper-reading/PSRQ-fig1.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;psrq生产semantic-id&#34;&gt;PSRQ生产semantic id&lt;/h1&gt;
&lt;p&gt;本文是音乐推荐场景，主要用到两种模态：text和audio，分别用百川和MERT提取text和audio的模态emb。&lt;/p&gt;
&lt;p&gt;生产semantic id的方法如下图所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fig2a是传统的RQ-KMeans的方法，每一层都用上一层的残差进行聚类。如上文所述，由于沙漏问题，会导致后续层次的semantic id存在语义退化问题&lt;/li&gt;
&lt;li&gt;fig2b是本文新提出的PSRQ量化方法，在RQ-KMeans基础上，每一层除了有上一层的残差向量，还会concat上初始emb减去残差emb后的向量。&lt;strong&gt;这样就能区分出残差相似，但初始emb不同的item了&lt;/strong&gt;，也就避免了RQ方法的沙漏问题，后续semantic id也能保留初始emb的语义信息。fig1d能看出来第二层semantic id仍然能够反映初始emb的分类效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-06-psrq-paper-reading/PSRQ-fig2.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;semantic-id在下游的应用方法&#34;&gt;Semantic id在下游的应用方法&lt;/h1&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个item有两套多模态emb：text和audio，但是有三套semantic id，除了text和audio各自产一套semantic id之外，还会把text和audio的emb concat起来，再产一套semantic id，相当于多模态融合的semantic id&lt;/li&gt;
&lt;li&gt;semantic id的emb在排序模型中随机初始化，然后端到端训练&lt;/li&gt;
&lt;li&gt;semantic id在用户建模时，使用DIN模型，query用的是多模态融合的semantic id emb，行为流分别用text和audio的semantic id emb。作者说这种方法既能捕捉到单模态细粒度的信息，又能建模跨模态的交互信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-06-psrq-paper-reading/PSRQ-fig3.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可借鉴
&lt;ul&gt;
&lt;li&gt;PSRQ的semantic id生产方法确实很有意思，在每一层都用上原始emb，这样不同簇的item在每一层都能分开，不会出现沙漏问题，使得每一层的semantic id都能保留原始emb的语义聚类信息&lt;/li&gt;
&lt;li&gt;产了多套semantic id，单模态semantic id是常规操作；多模态emb concat后也产一套semantic id，是个创新点&lt;/li&gt;
&lt;li&gt;用户建模时query用多模态semantic id，行为流用单模态semantic id，也是个创新点，虽然论文说这种方法效果最好，但是有点存疑&lt;/li&gt;
&lt;li&gt;论文有个实验结果对比了不同semantic id量化方法的效果，结论是：PSRQ &amp;gt; RQ-KMeans = RQ-VAE &amp;gt; VQ &amp;gt; PQ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可改进
&lt;ul&gt;
&lt;li&gt;pretrain emb和semantic id的生产都没有对齐协同信号&lt;/li&gt;
&lt;li&gt;semantic id在下游应用时直接端到端训练，而没有使用codebook初始化，会不会丢失信息比较多？&lt;/li&gt;
&lt;li&gt;产semantic id的过程中，模态内语义退化的问题，描述了现象，但是没有用定量的指标来说明问题，感觉可以借鉴&lt;a href=&#34;https://bitjoy.net/posts/2025-10-04-mme-sid-paper-reading/&#34;&gt;【论文阅读：Empowering Large Language Model for Sequential Recommendation via Multimodal Embeddings and Semantic IDs】&lt;/a&gt;的方法，定量说明后续层的semantic id的聚类效果或者说区分能力相比初始emb已经相差甚远了&lt;/li&gt;
&lt;li&gt;fig2b中，第一层的codebook的dim=d，后续层的codebook的dim=2d，那么后续层的残差dim也是2d，那么初始emb怎么和后续的残差emb相减呢，维度对不上啊？我理解可能是这样的，后续层聚类的时候用的是concat的dim=2d的emb，但是算聚类中心的时候只用了残差本身的emb，这样就能解释得通了，但是文中对这部分的细节没有解释。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>论文阅读：DAS: Dual-Aligned Semantic IDs Empowered Industrial Recommender System</title>
      <link>http://localhost:1313/posts/2025-10-05-das-paper-reading/</link>
      <pubDate>Sun, 05 Oct 2025 20:26:43 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-05-das-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-05-das-paper-reading/das-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：DAS: Dual-Aligned Semantic IDs Empowered Industrial Recommender System&lt;/li&gt;
&lt;li&gt;作者单位：快手&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2508.10584&#34;&gt;https://arxiv.org/pdf/2508.10584&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：CIKM 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;Semantic id生产时，要么没有和协同信号对齐（fig2(1)），要么是两阶段对齐方式（fig2(2)）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例如&lt;a href=&#34;https://arxiv.org/abs/2405.07314&#34;&gt;LETTER&lt;/a&gt;先生成协同emb，然后和semantic id对齐&lt;/li&gt;
&lt;li&gt;或者例如&lt;a href=&#34;https://arxiv.org/pdf/2411.11739&#34;&gt;QARM&lt;/a&gt;，先协同对齐emb，再生产semantic id&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把协同对齐和生产semantic id分成两个阶段，天然有信息损失，不是最优的。本文的目的就是把生产协同emb，以及semantic id的协同对齐放到一个模型中联合训练完成，尽量减少信息损失（fig2(3)）。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-05-das-paper-reading/das-fig2.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;主模型&#34;&gt;主模型&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-05-das-paper-reading/das-fig3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;主模型如上图所示，中间的ICDM是user和item的双塔模型，用于学习user和item的协同id-based emb；两边分别是生产user和item的semantic id的量化模型。&lt;/p&gt;
&lt;p&gt;中间的ICDM就是经典的召回双塔模型，使用点击样本进行训练，唯一不同的是，在user和item塔都有流行度去偏模块，用于学习user和item的无偏emb，后续user和item的semantic id协同对齐用的也是无偏的emb。&lt;/p&gt;
&lt;p&gt;两边分别是user和item的semantic id量化模型，两者比较类似，以item为例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先把item的各种信息，如title、desc、ocr等信息用文本构造成prompt，输入到LLM，借助LLM的summary和reasoning能力，产出item的详细描述&lt;/li&gt;
&lt;li&gt;然后把LLM产出的描述再输入到一个预训练的embedding模型PLM，文中用的是bge m3模型，得到item emb&lt;/li&gt;
&lt;li&gt;后续就是标准的RQ-VAE过程了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是，上述前两步，分别用到了LLM和PLM两个大模型，而且看图上这两个模型都是freeze的，也就是说并不微调这两个大模型。后续协同对齐用的emb是RQ-VAE重构emb的中间层结果，即图中的item quantized emb。&lt;/p&gt;
&lt;p&gt;semantic id的协同对齐方面，有三大类对齐任务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;U2I对齐：量化user emb和协同item emb对齐、量化item emb和协同user emb对齐&lt;/li&gt;
&lt;li&gt;U2U和I2I对齐：量化user emb和协同user emb对齐、量化item emb和协同item emb对齐&lt;/li&gt;
&lt;li&gt;U2U和I2I的共现对齐：点击相同item的两个量化user emb对齐、同一个user点击的两个item的量化item emb对齐&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于fig3中的协同模型和semantic id模型是联合训练的，总共有3大类loss：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中间的ICDM的双塔召回模型的loss&lt;/li&gt;
&lt;li&gt;两边的产semantic id的loss&lt;/li&gt;
&lt;li&gt;三个模块的对齐loss&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可借鉴
&lt;ul&gt;
&lt;li&gt;把semantic id的生产和协同信号对齐统一成一阶段的模式，信息损失更少&lt;/li&gt;
&lt;li&gt;中间的ICDM模型生产协同emb时进行了去偏，协同对齐的时候用的是去偏的emb，这是其他论文很少提到的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可改进
&lt;ul&gt;
&lt;li&gt;太复杂了！3个模块，3大类loss，每类loss又有很多个小loss，总loss数量加起来有十多个。。。&lt;/li&gt;
&lt;li&gt;任务太多，各种去偏、对齐loss，真的不会互相影响吗？&lt;/li&gt;
&lt;li&gt;中间的ICDM模块有必要吗？我理解ICDM本质是为了训练产出协同emb，但是因为训练样本本身是点击样本，样本本身已经包含了搜推场景的协同信号，也就是ICDM本身没必要存在了，直接用相同的样本训练两边的semantic id量化模型就行了，也能实现在训练semantic id的过程中，完成协同信号的对齐&lt;/li&gt;
&lt;li&gt;生产semantic id的emb来自LLM和PLM，但是这两个大模型都是freeze的，如果把这两个模型也sft，效果会不会更好？其实我原本以为的一阶段就是这样的，这也是我在&lt;a href=&#34;https://bitjoy.net/posts/2025-10-04-mme-sid-paper-reading/&#34;&gt;【论文阅读：Empowering Large Language Model for Sequential Recommendation via Multimodal Embeddings and Semantic IDs】&lt;/a&gt;中提到的一阶段方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>论文阅读：QARM: Quantitative Alignment Multi-Modal Recommendation at Kuaishou</title>
      <link>http://localhost:1313/posts/2025-10-04-qarm-paper-reading/</link>
      <pubDate>Sat, 04 Oct 2025 18:24:40 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-04-qarm-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-qarm-paper-reading/QARM-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：QARM: Quantitative Alignment Multi-Modal Recommendation at Kuaishou&lt;/li&gt;
&lt;li&gt;作者单位：快手&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2411.11739&#34;&gt;https://arxiv.org/pdf/2411.11739&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：CIKM 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;多模态emb在搜推场景应用时通常采用如下图的两阶段方式，先预训练多模态emb，然后作为一个冻结特征放到搜推模型中。这种方式存在2个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;表征不对齐&lt;/strong&gt;：多模态emb预训练的任务通常是图片分类或者文本的MLM，和下游搜推任务不对齐&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表征不更新&lt;/strong&gt;：多模态emb在搜推任务中作为冻结特征，没有更新&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文的方法就是想要解决上述2个问题。
&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-qarm-paper-reading/QARM-fig1.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;对齐搜推任务的多模态emb预训练&#34;&gt;对齐搜推任务的多模态emb预训练&lt;/h1&gt;
&lt;p&gt;为了解决多模态emb表征不对齐的问题，本文提出的多模态emb预训练任务直接对齐搜推场景，使用U2I和I2I召回模型，挖掘出相似item pair，然后通过对比学习微调多模态大模型。&lt;/p&gt;
&lt;p&gt;具体来说，通过U2I和I2I模型，能够拿到item emb；然后用每一个target item emb去行为流中检索出最相似的商品，作为trigger item emb。&amp;lt;trigger, target&amp;gt;构成一对正样本，然后进行对比学习训练。&lt;/p&gt;
&lt;p&gt;通过召回模型构造的训练样本，和搜推场景的协同信号对齐了，解决了开头提到的第一个问题，即表征不对齐的问题。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-qarm-paper-reading/QARM-fig3.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;semantic-id生产方法&#34;&gt;Semantic id生产方法&lt;/h1&gt;
&lt;p&gt;Semantic id的生产方法如上图右半部分所示，有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;VQ&lt;/strong&gt;：直接圈定一定数量（如N）的item emb作为底池，编号1~N，然后任意来一个item emb，通过对底池emb进行KNN搜索，找出top-k相似商品，假设是(a,b,&amp;hellip;,k)，则VQ编码的semantic id就是(a,b,&amp;hellip;,k)。文中取k=25，感觉挺大的。。。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RQ-Kmeans&lt;/strong&gt;：对圈定的N个item emb不断进行Kmeans聚类、求残差、残差继续Kmeans聚类的过程。文中取迭代次数为L=6，但是没说每次聚到多少个类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：文中的RQ-Kmeans方法和RQ-VAE还不一样，RQ-Kmeans没有训练过程，也没有重构loss，纯粹是每次进行聚类，然后选聚类中心作为码本的过程。文中也没有对比过为啥不用RQ-VAE。&lt;/p&gt;
&lt;p&gt;产出两套semantic id之后，直接在下游排序任务中进行端到端更新，解决开头提到的表征不更新的问题。具体建模方法比较常规，不是本文的重点，略讲。&lt;/p&gt;
&lt;h1 id=&#34;评论&#34;&gt;评论&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可借鉴
&lt;ul&gt;
&lt;li&gt;多模态emb预训练任务是i2i的，直接和下游搜推任务对齐&lt;/li&gt;
&lt;li&gt;semantic id有两种产出方式，VQ和RQ-Kmeans，尽可能多地保留原始多模态emb的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可改进
&lt;ul&gt;
&lt;li&gt;多模态emb预训练和下游任务对齐，在2025年不算新鲜事了，常规操作。而且文中i2i的构造过程依赖U2I和I2I召回模型，有外部依赖，不够漂亮&lt;/li&gt;
&lt;li&gt;VQ的方法，k=25这也太长了吧，相当于一个小型行为流了，会导致下游任务的特征处理更复杂&lt;/li&gt;
&lt;li&gt;为什么用RQ-Kmeans而不是RQ-VAE，没有任何说明与对比&lt;/li&gt;
&lt;li&gt;从pretrain emb量化成semantic id的过程中，存在严重的信息丢失，这在&lt;a href=&#34;https://bitjoy.net/posts/2025-10-04-mme-sid-paper-reading/&#34;&gt;Empowering Large Language Model for Sequential Recommendation via Multimodal Embeddings and Semantic IDs&lt;/a&gt;论文中有讨论&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>论文阅读：Empowering Large Language Model for Sequential Recommendation via Multimodal Embeddings and Semantic IDs</title>
      <link>http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/</link>
      <pubDate>Sat, 04 Oct 2025 11:10:11 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/mme-sid-paper-cover.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本信息&#34;&gt;基本信息&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;论文标题：Empowering Large Language Model for Sequential Recommendation via Multimodal Embeddings and Semantic IDs&lt;/li&gt;
&lt;li&gt;作者单位：香港城市大学&amp;amp;腾讯&lt;/li&gt;
&lt;li&gt;论文链接：&lt;a href=&#34;https://arxiv.org/pdf/2509.02017&#34;&gt;https://arxiv.org/pdf/2509.02017&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来源：CIKM 2025&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;motivation论文要解决的问题是什么&#34;&gt;Motivation：论文要解决的问题是什么&lt;/h1&gt;
&lt;p&gt;LLM4SR的基本范式如下，即用LLM直接来做搜推的范式（这种方式在学术界常见，但在工业界不常见）。由于LLM的输入词表范围是有限的（通常比较小），因此其token emb dim通常比较大，比如2048或者4096；而搜推场景的item量级很大，而且在不断更新，因此工业界经典的id-based的搜推模型的item emb dim通常比较小，比如64或128。经典的id-based的搜推模型能比较好地学习到搜推场景的协同信号，为了让LLM模型也能感知这种信息，LLM4SR范式通常会先预训练一个id-based的经典搜推模型，然后将其中的item id emb通过下图的Linear Projection的映射层，映射到LLM token emb的空间，让LLM也能感知搜推的协同信号。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/E4SRec.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述LLM4SR范式存在两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;维度坍缩&lt;/strong&gt;：id-based训出来的id emb dim比较小（如64），LLM token emb dim比较大（如4096），在由id emb通过Linear Projection映射到toen emb的过程中，虽然64映射到4096空间了，但扩维后的矩阵存在低秩问题，即还是只利用了4096中的64维的空间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;论文中，作者分两种情况进行了分析，如果Linear Projection只是一个线性层的话，通过公式推导能得出上述结论；如果Linear Projection包含非线性变换，作者通过实验分析也发现了维度坍缩的现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;灾难遗忘&lt;/strong&gt;：除了使用id-based模型产出的id emb，LLM4SR也常用多模态模型产出item emb表征，然后转换成semantic id输入到LLM4SR中。在这种情况下，产出的semantic id通过会遗忘多模态item emb的信息，导致下游LLM4SR的效果不佳。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;论文中，作者用公式9来衡量semantic id保留pretrain多模态emb的信息量。具体来说，如果行为流中的商品序列是{A,B,C,D}，target item是E。使用pretrain多模态emb能计算出E和A~D的相似度，例如相似度&amp;lt;E,A&amp;gt; &amp;gt; &amp;lt;E,B&amp;gt;。如果将pretrain多模态emb转换成semantic id，然后由semantic id恢复出新的A~E的emb之后，再计算E和A~D的相似度，如果仍然有&amp;lt;E,A&amp;gt; &amp;gt; &amp;lt;E,B&amp;gt;，则认为一致（concordant），否则不一致（disconcordant）。这个分析方法挺好的，通过这个指标能估算出转换成semantic id之后，仍然保留原有pretrain多模态emb对搜推场景的&lt;strong&gt;序&lt;/strong&gt;关系的保留程度。&lt;/li&gt;
&lt;li&gt;作者发现，转换成semantic id之后，信息只保留了37.14%；进一步，如果semantic id是在下游任务中端到端训练的，则信息只保留了5.5%，也就是说94.5%的pretrain emb的序的信息都丢掉了，也就是灾难遗忘。
&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/mme-sid-formula9.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;semantic-id构建方法&#34;&gt;Semantic id构建方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;3套emb来源，一套id-based经典搜推模型产出的包含协同信号的emb，另外两套是LLM2CLIP产出的多模态文本和图片emb。作者提到传统CLIP对长文本处理能力较弱，所以升级到LLM2CLIP，能更好地处理长文本。&lt;/li&gt;
&lt;li&gt;Semantic id构建方法是经典的RQ-VAE的方法，但有如下两个改进点：&lt;/li&gt;
&lt;li&gt;将emb的重构loss由MSE升级成MMD (maximum mean discrepancy)，MSE是计算原始emb和重构emb的欧式距离的误差，而MMD是计算两个分布的diff，实验表明能MMD比MSE能保留更多的pretrain多模态emb信息（即上述公式9），保留44.36%&lt;/li&gt;
&lt;li&gt;对量化后的emb做了对齐，因为LLM2CLIP本身进行了图文模态的对齐，所以文中只新增了id emb分别和文本、图片模态的对齐&lt;/li&gt;
&lt;li&gt;此外，还有一点论文没提但可能和常规RQ-VAE不同之处，就是原始emb在进行RQ-VAE之前，有一个Encoder升维的操作，在重构loss前对应有一个Decoder降维的操作，而semantic id量化恢复emb是Decoder之前的那个。这一升一降，估计也有助于缓解维度坍缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-10-04-mme-sid-paper-reading/mme-sid-fig2.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>公告</title>
      <link>http://localhost:1313/posts/2025-08-15-announcement/</link>
      <pubDate>Fri, 15 Aug 2025 22:03:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/2025-08-15-announcement/</guid>
      <description>&lt;p&gt;博客数据恢复中，敬请期待！&lt;/p&gt;
&lt;p&gt;测试图片：
&lt;img alt=&#34;这是图片&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2025-08-15-announcement/myimg.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Necessary header files for input output functions
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// main() function: where the execution of
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// C++ program begins
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// This statement prints &amp;#34;Hello World&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试数学公式：
This is an inline \(a^*=x-b^*\) equation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Huffman编码压缩算法及其实现</title>
      <link>http://localhost:1313/posts/2016-08-18-the-implementation-of-huffman-code/</link>
      <pubDate>Thu, 18 Aug 2016 09:54:55 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-08-18-the-implementation-of-huffman-code/</guid>
      <description>&lt;p&gt;哈弗曼编码是一个很经典的压缩算法，压缩率能达到50%，甚至更低。它的基本原理包括四个步骤：&lt;/p&gt;
&lt;p&gt;统计文件中每个字符出现的频率。
构建一个哈弗曼树。建树的过程是不断的合并频率最小的两个节点，父亲节点的频率为两个孩子节点的频率之和。如此循环直到合并成一个根节点。叶子节点为不同的字符及其频率。
生成哈弗曼编码。从树根开始对树进行编码，比如进入左孩子的边标记为0，进入右孩子的边标记为1，这里的0和1都是二进制位。这样之后，每个叶子节点都有一个唯一的二进制编码，这就是哈弗曼编码。频率越低的字符哈弗曼编码越长，频率越高的字符哈弗曼编码越短，这样就能起到压缩的效果。
第二遍扫描文件，把字符转换为对应的哈弗曼编码，保存成压缩文件。
解压缩的过程就是解析二进制位，然后查找哈弗曼树，每找到一个叶子节点，就解析出一个字符，直到解析完所有二进制位。下面详细解释我的C++实现。&lt;/p&gt;
&lt;p&gt;首先定义一个哈弗曼编码类，对外只提供压缩Compress和解压缩Decompress两个接口。值得注意的是有一个Node结构体，用于构成哈弗曼树的节点。此外count_node的key是字符频率，value是所在节点，且是multimap类型的，所以count_node会自动按字符频率有小到大排序，在构建哈弗曼树时，每次只需要取count_node的前两个节点进行合并即可。&lt;/p&gt;
&lt;p&gt;[cpp]
class HuffmanCode {
public:
HuffmanCode();&lt;/p&gt;
&lt;p&gt;void Compress(string src, string dest);
void Decompress(string src, string dest);&lt;/p&gt;
&lt;p&gt;virtual ~HuffmanCode();&lt;/p&gt;
&lt;p&gt;private:
void CountLetter(string src);
void ConstructHuffmanTree();
void GenerateHuffmanCode();
void WriteHuffmanCode(ofstream &amp;amp;os);
void Compressing(string src, string dest);&lt;/p&gt;
&lt;p&gt;void InsertIntoHuffmanTree(char letter, string &amp;amp;code, int &amp;amp;k);
void ConstructHuffmanTreeFromFile(ifstream &amp;amp;is);
void Decompressing(ifstream &amp;amp;is, ofstream &amp;amp;os);&lt;/p&gt;
&lt;p&gt;map&amp;lt;char, int&amp;gt; letter_count;
typedef struct Node {
int id;
bool is_leaf;
char letter;
int parent, lchild, rchild;
Node() {
}
Node(int i, bool il, char lt, int p, int lc, int rc) :
id(i), is_leaf(il), letter(lt), parent(p), lchild(lc), rchild(
rc) {
}
};
multimap&amp;lt;int, Node&amp;gt; count_node;
vector&lt;!-- raw HTML omitted --&gt; huffman_tree;
map&amp;lt;char, vector&lt;!-- raw HTML omitted --&gt;&amp;gt; letter_hcode; // hufman code for each letter
};
[/cpp]&lt;/p&gt;</description>
    </item>
    <item>
      <title>还原谷歌PageRank算法真相</title>
      <link>http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/</link>
      <pubDate>Thu, 04 Aug 2016 16:38:33 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/</guid>
      <description>&lt;p&gt;之前写了&lt;a href=&#34;https://bitjoy.net/categories/%E5%92%8C%E6%88%91%E4%B8%80%E8%B5%B7%E6%9E%84%E5%BB%BA%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/&#34;&gt;七篇博客&lt;/a&gt;详细介绍了搜索引擎的工作原理。彼时的搜索引擎主要讲查询和网页的&lt;strong&gt;相关性&lt;/strong&gt;匹配，是动态的、在线的、实时的。相关性匹配有一个问题，网页很容易作弊，比如可以在一个网页中写满诸如“免费”、“美容”之类的垃圾关键词，进而提升查询相关性。但是用户在查询时，一定希望返回的网页比较&lt;strong&gt;权威可信&lt;/strong&gt;，比如同样搜索“苹果电脑”，排名第一的应该是Apple的官网，而不应该是中关村在线之类的第三方网站。&lt;/p&gt;
&lt;p&gt;权威性是一个静态的（或者说变化较慢的）衡量网页重要性的指标。但是应该怎样度量权威性呢，&lt;a href=&#34;https://en.wikipedia.org/wiki/HITS_algorithm&#34;&gt;HITS算法&lt;/a&gt;使用authority来度量，即指向自身的网页数量越多，则自身的authority值越大。谷歌的&lt;a href=&#34;https://en.wikipedia.org/wiki/PageRank&#34;&gt;PageRank算法&lt;/a&gt;是用PageRank值来衡量权威性的。&lt;a href=&#34;http://blog.sina.com.cn/s/blog_72995dcc01013bkb.html&#34;&gt;HITS和PageRank一个比较大的区别是HITS和查询有关，而PageRank和查询无关，所以PageRank可以离线计算。&lt;/a&gt;下面主要介绍PageRank算法。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/press.princeton.edu/images/k8216.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;PageRank’s thesis is that a webpage is important if it is pointed to by other important pages.&lt;/p&gt;
&lt;p&gt;我先不加解释的给出PageRank的公式，然后带领大家一步步推导出这个公式。&lt;/p&gt;
$$\pi^T=\pi^T(\alpha S+(1-\alpha)E)$$&lt;p&gt;我们首先明确目标：PageRank计算的是网页的静态权威度（PR值），也就是如果给定了一个网络结构，则每个网页的PR值就可以通过PageRank算法计算出。假设网页\(P_i\)的PR值为\(r(P_i)\)，则\(r(P_i)\)等于所有指向\(P_i\)的网页的PR值之和，即&lt;/p&gt;
$$\begin{equation}r(P_i)=\sum\limits_{P_j\in B_{P_i}}\frac{r(P_j)}{|P_j|}\end{equation}$$&lt;p&gt;其中\(B_{P_i}\)为指向\(P_i\)的网页集合，\(|P_j|\)为\(P_j\)的出边的数量。这个式子很好理解，包括两方面内容：1）\(\sum\limits_{P_j\in B_{P_i}}\)表示如果指向\(P_i\)的网页数量越多，说明网页\(P_i\)越重要；2）\(\frac{r(P_j)}{|P_j|}\)表示如果\(P_j\)指向的页面数量越少，但有一个指向了\(P_i\)，说明网页\(P_i\)越重要（如果一个大牛写了很多推荐信（\(|P_j|\)大），则这些推荐信的效力就下降了，如果大牛只给你写了推荐信（\(|P_j|=1\)），则这封推荐信的效力一定很高）。&lt;/p&gt;
&lt;p&gt;(1)式有一个问题，初始给定一个网络结构时，并不知道\(r(P_i), r(P_j)\)，如何计算呢？Brin和Page利用递归的思想求解，初始假设所有网页的PR值相等，都为\(\frac{1}{n}\)，其中\(n\)为网络中网页的数量。则第\(k+1\)轮的PR计算公式为：&lt;/p&gt;
$$\begin{equation}r_{k+1}(P_i)=\sum\limits_{P_j\in B_{P_i}}\frac{r_k(P_j)}{|P_j|}\end{equation}$$&lt;p&gt;初始对所有网页\(P_i\)有\(r_0(P_i)=\frac{1}{n}\)，迭代\(k\)步之后，可以计算出所有网页的PR值，然后按PR值从大到小排序，就可以知道每个网页的重要性了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pr-1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/pr-1.png&#34;&gt;
对于上图的小网络，我们可以计算出其每一步的PR值：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pr-2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/pr-2.png&#34;&gt;
可以看到经过2次迭代之后，节点4的PR值最大，从图中也可以看出，节点4的出入边较多，它可能比较重要。&lt;/p&gt;
&lt;p&gt;注意到对于(2)式，当\(i,j\)之间有边时，\(\frac{1}{|P_j|}\)相当于对\(P_j\)出度的归一化，设矩阵\(H\)为图的邻接矩阵的行归一化矩阵，对于上图，为&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pr-3&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/pr-3.png&#34;&gt;
设行向量\(\pi^{(k)T}\)为第\(k\)轮迭代时所有网页的PR值，则式(2)可以转换为如下的矩阵形式：&lt;/p&gt;
$$\begin{equation}\pi^{(k+1)T}=\pi^{(k)T}H\end{equation}$$&lt;p&gt;初始有\(\pi^{(0)T}=\frac{1}{n}e^T\)，\(e^T\)为全1的行向量。我们可以从(3)式观测出几点信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(3)式的每一轮计算涉及到向量和矩阵的乘法，复杂度为\(O(n^2)\)，\(n\)为矩阵\(H\)的大小&lt;/li&gt;
&lt;li&gt;\(H\)是一个稀疏矩阵，因为大部分网页只和很少的网页有链接关系，所以上述向量和矩阵的乘法复杂度还可以降低&lt;/li&gt;
&lt;li&gt;\(H\)有点像马尔科夫链中的随机转移矩阵，但又不完全是，因为如果有dangling nodes，则这一行就是全0，所以\(H\)被称为substochastic matrix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;pr-4&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/pr-4.png&#34;&gt;
上图中的节点3就是一个dangling node，它只有入边，没有出边，也就是说，每一轮迭代，PR值只会流入3号节点，不会从3号节点流出，久而久之，3就像一个水槽(sink)一样，吸走了大部分的PR，导致PR值虚高。&lt;/p&gt;
&lt;p&gt;所以问题随之而来，怎样保证(3)式一定能够收敛到一个平稳概率分布\(\pi^T\)，\(\pi^T\)和\(\pi^{(0)T}\)有关吗，怎样解决dangling nodes问题，等等。此时需要引入一点马尔科夫链理论的知识。&lt;/p&gt;
&lt;p&gt;在马尔科夫理论呢中，如果一个矩阵\(P\)是随机的（stochastic）、不可约的（irreducible）和非周期的（aperiodic），则对于任意的起始向量，都能收敛到一个唯一的平稳正向量。所以如果PageRank矩阵\(H\)满足上述三个条件，则可以用幂法（Power Method）找到一个平稳概率分布\(\pi^T\)。&lt;a href=&#34;https://en.wikipedia.org/wiki/Power_iteration&#34;&gt;幂法&lt;/a&gt;是用来计算最大特征值的特征向量。因为\(H\)的最大特征值为1，所以可以用幂法找到稳态时（\(\pi^T=\pi^TH\)）的概率分布\(\pi^T\)。&lt;/p&gt;
&lt;p&gt;下面我们就将矩阵\(H\)调整为随机的（stochastic）、不可约的（irreducible）和非周期的（aperiodic）。&lt;/p&gt;
&lt;p&gt;行随机矩阵是指行和为1的非负矩阵。如果图中含有dangling nodes，则\(H\)不是随机的，比如上面的例子，第二行为全0。所以第一个调整是对于所有dangling nodes，都加上一个随机跳转向量\(e^T/n\)，含义就是如果进入死胡同（dangling nodes），则随机跳转到网络中的任意一个网页。定义向量\(a\)：&lt;/p&gt;
$$\begin{equation}a_i=\begin{cases}1\quad\text{if page}~i\text{ is a dangling node}\\0\quad\text{otherwise}\end{cases}\end{equation}$$&lt;p&gt;则新的Google矩阵为：&lt;/p&gt;
$$\begin{equation}S=H+a\frac{1}{n}e^T\end{equation}$$&lt;p&gt;新矩阵\(S\)就是一个行随机矩阵了。对于上图的例子，有&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pr-5&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-08-04-googles-pagerank-and-beyond/pr-5.png&#34;&gt;
为了保证矩阵\(S\)满足&lt;a href=&#34;http://mathworld.wolfram.com/ReducibleMatrix.html&#34;&gt;不可约性（irreducible）&lt;/a&gt;和&lt;a href=&#34;https://en.wikipedia.org/wiki/Aperiodic_graph&#34;&gt;非周期性（aperiodic）&lt;/a&gt;，必须使\(S\)对应的图是强连通的且每个节点有自回路。所以再次调整为：&lt;/p&gt;
$$\begin{equation}G=\alpha S+(1-\alpha)\frac{1}{n}ee^T\end{equation}$$&lt;p&gt;令&lt;/p&gt;
$$\begin{equation}E=\frac{1}{n}ee^T\end{equation}$$&lt;p&gt;则得到本博客开头的Google矩阵公式：&lt;/p&gt;
$$\begin{equation}G=\alpha S+(1-\alpha)E\end{equation}$$&lt;p&gt;\(E\)即为随机平均游走矩阵。矩阵\(G\)也很好解释，大家上网的时候以\(\alpha\)的概率沿着某个网页里面的链接一步步深入进去（\(S\)），当沿着链接走累的时候，以\(1-\alpha\)的概率在地址栏输入一个新地址，随机跳走了（\(E\)）。&lt;/p&gt;
&lt;p&gt;此时的矩阵\(G\)满足随机性（stochastic）、不可约性（irreducible）和非周期性（aperiodic），所以可以根据幂法（Power Method）找到一个平稳概率分布\(\pi^T\)，\(\pi^T_i\)就衡量了网页\(P_i\)的重要性或者权威性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>调查问卷的有效性（2）相对误差</title>
      <link>http://localhost:1313/posts/2016-07-23-the-validity-of-the-questionnaire-2/</link>
      <pubDate>Sat, 23 Jul 2016 16:21:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-07-23-the-validity-of-the-questionnaire-2/</guid>
      <description>$$\begin{equation}Pr(|\hat{p}-p|\geq 5\%)\leq 5\%\end{equation}$$&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-07-23-the-validity-of-the-questionnaire-1/&#34;&gt;上一回&lt;/a&gt;我们讲到当\(p\)本身很小的时候，容易被5%（绝对误差）给淹没掉，导致结果的不可信。我们可以引入相对误差，把(1)式转换为如下的不等式&lt;/p&gt;
$$\begin{equation}Pr(|\hat{p}-p|\geq\delta p)\leq\epsilon\end{equation}$$&lt;p&gt;同理，我们可以用&lt;/p&gt;
$$\begin{equation}\hat{p}=\frac{x_1+x_2+…+x_n}{n}\end{equation}$$&lt;p&gt;代替\(\hat{p}\)（建议先看&lt;a href=&#34;https://bitjoy.net/posts/2016-07-23-the-validity-of-the-questionnaire-1/&#34;&gt;上一篇博客&lt;/a&gt;），转换为&lt;/p&gt;
$$\begin{equation}Pr(|X-np|\geq\delta np)\end{equation}$$&lt;p&gt;类似的，\(X=x_1+x_2+…+x_n\)，\(E(X)=\mu=np\)，所以(4)式等价为&lt;/p&gt;
$$\begin{equation}Pr(|X-\mu|\geq\delta\mu)\end{equation}$$&lt;p&gt;这个时候，因为不等号右边和均值\(\mu\)有关，不能再用切比雪夫不等式了，我们需要另外一个武器：&lt;a href=&#34;https://en.wikipedia.org/wiki/Chernoff_bound&#34;&gt;Chernoff bound&lt;/a&gt;。它有两种形式：&lt;/p&gt;
$$\begin{equation}Pr(X\geq (1+\delta)\mu)\leq[\frac{e^\delta}{(1+\delta)^{1+\delta}}]^\mu\leq e^{-\frac{\mu}{3}\delta^2}\quad\forall\delta&gt;0\end{equation}$$$$\begin{equation}Pr(X\leq (1-\delta)\mu)\leq[\frac{e^{-\delta}}{(1-\delta)^{1-\delta}}]^\mu\leq e^{-\frac{\mu}{2}\delta^2}\quad\forall 0&lt;\delta&lt;1\end{equation}$$&lt;p&gt;Chernoff bound的证明需要用到马尔可夫不等式，有一点技巧。以上两种形式可以统一成&lt;/p&gt;
$$\begin{equation}Pr(|X-\mu|\geq\delta\mu)\leq 2e^{-\frac{\mu}{3}\delta^2}\end{equation}$$&lt;p&gt;也是一个很漂亮的不等式。&lt;/p&gt;
&lt;p&gt;利用Chernoff bound求解(5)式：&lt;/p&gt;
$$\begin{equation}Pr(|X-\mu|\geq\delta\mu)\leq 2e^{-\frac{\mu}{3}\delta^2}\\=2e^{-\frac{np}{3}\delta^2}\leq\epsilon\end{equation}$$&lt;p&gt;解得&lt;/p&gt;
$$\begin{equation}n\geq\left\lceil\frac{3ln\frac{2}{\epsilon}}{p\delta^2}\right\rceil\end{equation}$$&lt;p&gt;这个结果看起来就很复杂了。也就是说，如果要设计调查问卷使满足(2)式的精度，抽样的样本数必须满足(10)式。从(10)式可知，当要求的精度越高（即\(\delta\)和\(\epsilon\)越小），所需的样本数越大。并且结果还和真实值\(p\)有关。&lt;/p&gt;</description>
    </item>
    <item>
      <title>调查问卷的有效性（1）绝对误差</title>
      <link>http://localhost:1313/posts/2016-07-23-the-validity-of-the-questionnaire-1/</link>
      <pubDate>Sat, 23 Jul 2016 16:01:59 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-07-23-the-validity-of-the-questionnaire-1/</guid>
      <description>&lt;p&gt;每年春晚过后，央视又要吹嘘说今年春晚收视率创新高了，但是我们总感觉央视在骗我们，因为我是越长大越不看春晚了[笑cry]，所以收视率到底是怎么统计出来的，央视的说法是否靠谱呢？&lt;/p&gt;
&lt;p&gt;最近的美国大选真是热闹，很多机构都会发放一些调查问卷，然后统计出希拉里或者唐纳德的民众支持率是多少，但是我并没有收到调查问卷，凭什么就得出了民众支持率了，意思是把我排除在民众之外咯？所以引出这样一个问题，调查问卷是否可信，即调查问卷的有效性。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/www.carp.ca/wp-content/uploads/2012/08/questionnaire1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;其实，央视统计收视率并不要问全中国14亿人口有多少人看了春晚，他只需要从14亿人口里面随机抽\(n\)个人，问一下这\(n\)个人里有多少人看了春晚，然后把看的人数除以总数就大概估计出全国的收视率了。同理调查民众支持率也是一样，只需要随机调查\(n\)个人的意向，把支持希拉里的人数除以总数就大概得到了希拉里的支持率。&lt;/p&gt;
&lt;p&gt;但是你要问了，通过抽样调查出来的收视率和支持率靠谱吗，需要随机抽样多少人才能得到一个比较好的全局近似解呢？今天我们就来解决这个问题。&lt;/p&gt;
&lt;p&gt;假设我们随机抽样了\(n\)个人，分别是\(x_1,x_2,…,x_n\)。如果第\(i\)个人看了春晚，则\(x_i=1\)，否则\(x_i=0\)。那么通过这\(n\)个人的收视情况，我们可以估计出一个收视率&lt;/p&gt;
$$\begin{equation}\hat{p}=\frac{x_1+x_2+…+x_n}{n}\end{equation}$$&lt;p&gt;假设全国的真实收视率是\(p\)，那么平均到每一个人，他看了春晚的概率就是\(p\)，也即\(Pr(x_i=1)=p\)，所以有&lt;/p&gt;
$$\begin{equation}E(x_i)=p\quad E(x_i^2)=p\quad Var(x_i)=p(1-p)\end{equation}$$&lt;p&gt;我们的目的就是希望通过\(n\)个人估计出来的\(\hat{p}\)和\(p\)越接近越好。换句话说，我们希望\(\hat{p}\)和\(p\)相差大于5%的概率要小于5%。再换句话说就是有至少95%的概率，\(\hat{p}\)和\(p\)相差在5%以内，即\(\hat{p}\)和\(p\)很接近。注意这里的两个5%都是可以换成任意你想要的精度。用数学语言表示就是，\(n\)至少为多少时，以下不等式可以被满足。&lt;/p&gt;
$$\begin{equation}Pr(|\hat{p}-p|\geq 5\%)\leq 5\%\end{equation}$$&lt;p&gt;把(1)式代入(3)式，用\(\frac{1}{20}\)代替5%，得到等价形式：&lt;/p&gt;
$$\begin{equation}Pr(|(\frac{x_1+x_2+…+x_n}{n})-p|\geq\frac{1}{20})\\ \Longleftrightarrow~Pr(|X-np|\geq\frac{n}{20})\end{equation}$$&lt;p&gt;其中\(X=x_1+x_2+…+x_n\)。根据期望的线性可加性，有&lt;/p&gt;
$$\begin{equation}E(X)=E(x_1+x_2+…+x_n)=E(x_1)+E(x_2)+…+E(x_n)=np\end{equation}$$&lt;p&gt;所以(4)又等价于&lt;/p&gt;
$$\begin{equation}Pr(|X-E(X)|\geq\frac{n}{20})\end{equation}$$&lt;p&gt;我们需要利用著名的&lt;a href=&#34;https://en.wikipedia.org/wiki/Chebyshev%27s_inequality&#34;&gt;切比雪夫不等式&lt;/a&gt;来求解上式，切比雪夫不等式如下：&lt;/p&gt;
$$\begin{equation}Pr(|X-E(X)|\geq~c)\leq\frac{Var(X)}{c^2}\end{equation}$$&lt;p&gt;切比雪夫不等式可以直接由&lt;a href=&#34;https://en.wikipedia.org/wiki/Markov%27s_inequality&#34;&gt;马尔可夫不等式&lt;/a&gt;得到，马尔可夫不等式的证明也不难，略过。&lt;/p&gt;
&lt;p&gt;利用切比雪夫不等式求解(6)式&lt;/p&gt;
$$\begin{equation}Pr(|X-E(X)|\geq\frac{n}{20})\leq\frac{Var(X)}{n^2}*400\\ =\frac{n*Var(x_i)}{n^2}*400\\ =\frac{p(1-p)}{n}*400\\ \leq\frac{1/4}{n}*400=\frac{100}{n} \end{equation}$$&lt;p&gt;第一个等号是因为\(n\)个变量是独立同分布的，所以方差也有类似于(5)式的线性性质。最后一个不等号是因为\(p(1-p)\)是一个开口向下的抛物线，在\(p=1/2\)时取到极值\(1/4\)。&lt;/p&gt;
&lt;p&gt;回到最初的不等式(3)，则(8)式要满足\(\frac{100}{n}\leq 5\%\)，解得\(n\geq 2000\)。注意到求出的\(n\)和总体人数是无关的，也就是说，虽然全中国有十几亿人口，但是央视只要随机抽样调查2000个人的收视情况，就能以比较高的概率准确估计出全国的收视率。&lt;/p&gt;
&lt;p&gt;这个结论还是很漂亮的，但是这种方法有两个限制条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;采样满足独立同分布，即这\(n\)个人是独立同分布的，不能针对某一特定人群调查&lt;/li&gt;
&lt;li&gt;(3)式的5%是一个绝对误差，当\(p\)本身很小的时候，容易被5%淹没&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第1个问题，稍微好处理一点，抽样的时候尽量随机一点。对于第2个问题，比较好的解决办法是引入相对误差，即把(3)式转换为如下的不等式&lt;/p&gt;
$$\begin{equation}Pr(|\hat{p}-p|\geq\delta p)\leq\epsilon\end{equation}$$&lt;p&gt;(9)式的求解就比较复杂了，得出的结论也没有上面那么简单，具体的求解方法请听下回分解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>有趣的交互式证明</title>
      <link>http://localhost:1313/posts/2016-07-14-the-interesting-interactive-proofs/</link>
      <pubDate>Thu, 14 Jul 2016 20:56:37 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-07-14-the-interesting-interactive-proofs/</guid>
      <description>&lt;p&gt;你是否想过如下问题：怎样向色盲证明两只袜子的颜色是不一样的？怎样证明两个图是不同构的？怎样证明一个数是二次非剩余的？&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/writtenbyrel.com/wp-content/uploads/2014/06/socks.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;咋听起来觉得很有意思吧，色盲是区分不了颜色的，怎么能让他相信两只袜子的颜色不一样呢。图同构问题目前既没有被证明属于P，也没有被证明属于NP-Complete。二次非剩余问题也没有被证明属于NP。&lt;/p&gt;
&lt;p&gt;这些听起来很“难”的问题，却可以通过交互式证明进行证明，下面先通过“向色盲证明两只袜子的颜色不同”这个有趣的例子一窥交互式证明的强大。&lt;/p&gt;
&lt;h1 id=&#34;向色盲证明两只袜子的颜色不同&#34;&gt;向色盲证明两只袜子的颜色不同&lt;/h1&gt;
&lt;p&gt;P有一只红袜子和黄袜子，她的一个色盲朋友V不相信P的袜子颜色不同，P如何才能让V相信这是真的呢？一个简单的办法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;P把两只袜子给V，V每只手拿了一只袜子&lt;/li&gt;
&lt;li&gt;P转过身背对V&lt;/li&gt;
&lt;li&gt;V抛一枚硬币，如果头面朝上，则保持两只袜子不动，否则交换左右手的袜子&lt;/li&gt;
&lt;li&gt;P转过身，V问P是否交换过袜子&lt;/li&gt;
&lt;li&gt;如果P回答错误，则V不相信；否则，重复100次实验，如果P都回答正确，则V相信这两只袜子是不同颜色的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果两只袜子的颜色确实不一样，则P通过区分两只袜子的颜色能正确回答V有没有交换过袜子。但是如果两只袜子颜色一样，则不管V有没有交换过，P都无法分辨这两只袜子，所以只好猜V有没有交换，而猜对的概率只有1/2，重复100次，都猜对的概率只有\((1/2)^{100}\)，这是一个非常小的数，可以认为几乎不会发生，即出错的概率极低。&lt;/p&gt;
&lt;p&gt;这就是交互式证明的一个例子，上述证明有三个特点：1）交互过程，整个证明需要P和V进行交互才能完成；2）具有随机性，即V需要抛一枚硬币，来决定是否交换袜子；3）零知识，虽然V最终相信了这两只袜子是不同颜色的，但V还是不知道这两只袜子是什么颜色的。&lt;/p&gt;
&lt;p&gt;下面我们给出交互式证明的形式化定义。&lt;/p&gt;
&lt;h1 id=&#34;交互式证明interactive-proofs-ip&#34;&gt;交互式证明（Interactive Proofs, IP）&lt;/h1&gt;
&lt;p&gt;令\(k\)是\(N\rightarrow N\)的一个函数，我们称语言\(L\)属于\(IP[k]\)，如果存在一个\(k(|x|)\)多项式时间概率图灵机TM \(V\)，使得：&lt;/p&gt;
$$
\begin{equation}
\begin{cases}
x\in L \Longrightarrow\exists P\quad Pr[V \text{ accepts }x, V(x)=1]\geq 2/3 \\
x\notin L \Longrightarrow\forall P\quad Pr[V \text{ accepts }x, V(x)=1]\leq 1/3
\end{cases}
\end{equation}
$$&lt;p&gt;定义&lt;/p&gt;
$$IP=\underset{c}{\bigcup} IP[n^c]$$&lt;p&gt;上述定义的第一条称为“完备性”（Completeness）：如果\(x\in L\)，则存在一个证明者P（prover），使得验证者V（verfier）能以多项式时间接受\(x\)，且接受的概率大于2/3；第二条称为“可靠性”（Soundness），如果\(x\notin L\)，则对于所有证明者P，V接受\(x\)的概率都不会超过1/3。&lt;/p&gt;
&lt;p&gt;对应到上面的例子，完备性：当两只袜子的颜色确实不同时，V接受的概率为1&amp;gt;2/3；可靠性：当两只袜子的颜色相同时，重复100次实验，V接受的概率只有\((1/2)^{100}&lt;1/3\)。&lt;/p&gt;
&lt;p&gt;IP这个复杂性类就是所有IP[k]的并集。在IP中，P的能力是无穷的，但它不一定是诚实的；V能力较弱，只能进行多项式时间的计算。&lt;/p&gt;
&lt;p&gt;下面我们给出另外两个交互式证明的协议。&lt;/p&gt;
&lt;h1 id=&#34;图不同构graph-non-isomorphism-gni的交互式证明&#34;&gt;图不同构（Graph Non-isomorphism, GNI）的交互式证明&lt;/h1&gt;
&lt;p&gt;如果图\(G_1\)和\(G_2\)可以通过对顶点进行恰当标记来将它们转换为同一个图，则称\(G_1\)和\(G_2\)同构，记为\(G_1\cong G_2\)。换句话说，如果\(G_1\)和\(G_2\)同构，则在\(G_1\)的所有顶点标签上存在一个置换\(\pi\)使得\(\pi (G_1)=G_2\)，其中\(\pi (G_1)\)是将\(\pi\)作用到\(G_1\)的各个顶点上之后得到的图。下图就是两个同构图，右边给出了置换\(\pi\)。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;isomorphism graph&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-07-14-the-interesting-interactive-proofs/isomorphism-graph.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;图同构的补集为图不同构（Graph Non-isomorphism, GNI），即判定给定的两个图是否不同构。下面是GNI的一个交互式证明过程。&lt;/p&gt;
&lt;p&gt;给定两个图\(G_1\)和\(G_2\)，证明者P想要向验证者V证明\(G_1\ncong G_2\)。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;V：随机选一个\(i\in \{1,2\}\)，对\(G_i\)做一个随机的置换，得到新图\(H\)，则有\(H\cong G_i\)，将\(H\)发送给P&lt;/li&gt;
&lt;li&gt;P：发送\(j\)给V&lt;/li&gt;
&lt;li&gt;V：如果\(i\neq j\)，则拒绝；否则重复100次实验，都有\(i==j\)，则相信\(G_1\ncong G_2\)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;完备性：如果\(G_1\ncong G_2\)，则\(H\)只和\(G_1, G_2\)中的一个图同构，P因为能力无穷，一定能找出和\(H\)同构的图\(G_j\)，且满足\(j==i\)。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LaTeX写作完美解决方案</title>
      <link>http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/</link>
      <pubDate>Mon, 16 May 2016 20:14:50 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://www.ctan.org/lion/ctan_lion_350x350.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;\(\LaTeX\)的强大我就不赘述了，这里简单介绍一下怎样在Windows快速配置一个完美好用的\(\LaTeX\)环境。&lt;/p&gt;
&lt;p&gt;我大学刚接触\(\LaTeX\)的时候，使用的是&lt;a href=&#34;http://www.ctex.org/HomePage&#34;&gt;CTeX&lt;/a&gt;，CTeX是一个大礼包，整合了编译器编辑器等，但是由于久不更新，很多宏包和语法都变了，而且CTeX附带的WinEdt是商业软件，30天之后需要收费，我又不想用盗版，所以就打算自己配置\(\LaTeX\)环境。&lt;/p&gt;
&lt;p&gt;目前使用的是&lt;a href=&#34;http://miktex.org/&#34;&gt;MiKTeX&lt;/a&gt;+&lt;a href=&#34;http://www.xm1math.net/texmaker/&#34;&gt;Texmaker&lt;/a&gt;的完美组合！MiKTeX是\(\LaTeX\)编译器，Texmaker是\(\LaTeX\)编辑器。两者都是开源软件。&lt;/p&gt;
&lt;p&gt;MiKTeX非常棒的地方在于“MiKTeX has the ability to install needed packages automatically (on-the-fly)”，就是说，你用MiKTeX时，不需要担心某个宏包是否存在，你只管用就是了，MiKTeX会在你第一次用到某个宏包时，自动从网上下载，非常方便。正因为这样，MiKTeX的安装包很小，只有175MB。当然，因为是on-the-fly的，所以必须联网使用，而且MiKTeX只有Windows版本。&lt;/p&gt;
&lt;p&gt;MiKTeX自带了一个&lt;a href=&#34;https://www.tug.org/texworks/&#34;&gt;TeXworks&lt;/a&gt;编辑器的，但是这软件用户体验并不好。我以前一直都用WinEdt，很好用，但是它是商业软件，我又不想盗版（说到底是没钱…），所以换了Texmaker。Texmaker可以媲美WinEdt，软件布局合理，各种快捷键用起来也很方便。不过在上手之前要简单配置一下。&lt;/p&gt;
&lt;p&gt;如果是写英文文章，点击“快速构建”左边的箭头（或者F1快捷键），就能一键编译并刷新pdf视图。但是默认的快速构建使用的引擎是PdfLaTeX，如果你是中文用户，使用了xeCJK宏包，则必须使用XeLaTeX引擎编译，所以依次点击“选项-&amp;gt;配置Texmaker-&amp;gt;（左边）快速构建”，选择快速构建命令为”XeLaTeX + View PDF”。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Texmaker-1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/Texmaker-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;构建好的PDF默认是以弹窗的形式展现的，我们可以设置让代码和PDF并排显示，这样方便在PDF和源代码之间切换，配置如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Texmaker-2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/Texmaker-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Texmaker自带了一个PDF阅读器，当然你也可以使用外部阅读器，比如非常棒的&lt;a href=&#34;http://www.sumatrapdfreader.org/free-pdf-reader.html&#34;&gt;Sumatra PDF&lt;/a&gt;，只需填入Sumatra PDF的路径跟上%.pdf，并选中External Viewer。&lt;/p&gt;
&lt;p&gt;Texmaker还有一个很好用的功能是“正向/反向搜索”。反向搜索是点击PDF某个位置，会跳到tex源代码对应位置，快捷方式是ctrl+click。正向搜索是点击tex源代码某个位置，会跳到PDF对应的位置，默认快捷方式ctrl+space，但是这个快捷方式好像用不了，可以自行配置成其他快捷方式，比如ctrl+1，我当时是打开下图的快捷方式窗口才发现这个问题的。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Texmaker-3&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/Texmaker-3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;正反向搜索都可以通过鼠标右键菜单实现，但是快捷键还是更方便的。最重要的一点是，源文件*.tex所在路径不能有中文！！！要不然正反向搜索不能用，这点很重要，我当时郁闷了好久。&lt;/p&gt;
&lt;p&gt;另外还可以配置一下编辑器的字体，勾选”Backup documents every 10 min”之类的。&lt;/p&gt;
&lt;p&gt;OK，大功告成，这种三段式的界面、F1快速构建以及正向/反向搜索，用起来真是太顺手了，Just Enjoy \(\LaTeX\)~&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/www.xm1math.net/texmaker/texmakertop_big.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面是我常用的\(\LaTeX\)中文模板：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/LaTeXDemo.pdf&#34;&gt;LaTeXDemo.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-05-16-an-easy-to-use-latex-toolkit/LaTeXDemo.tex&#34;&gt;LaTeXDemo.tex&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SVM之序列最小最优化算法（SMO算法）</title>
      <link>http://localhost:1313/posts/2016-05-02-svm-smo-algorithm/</link>
      <pubDate>Mon, 02 May 2016 15:12:39 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-05-02-svm-smo-algorithm/</guid>
      <description>&lt;h1 id=&#34;svm回顾&#34;&gt;SVM回顾&lt;/h1&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/20/SVM_Example_of_Hyperplanes.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;支持向量机（SVM）的一大特点是最大化间距（max margin）。对于如上图的二分类问题，虽然有很多线可以将左右两部分分开，但是只有中间的红线效果是最好的，因为它的可活动范围（margin）是最大的，从直观上来说很好理解。&lt;/p&gt;
&lt;p&gt;对于线性二分类问题，假设分类面为&lt;/p&gt;
$$\begin{equation} u=\vec w \cdot \vec x-b \end{equation}$$&lt;p&gt;则margin为&lt;/p&gt;
$$\begin{equation} m=\frac{1}{||w||_2} \end{equation}$$&lt;p&gt;根据max margin规则和约束条件，得到如下优化问题，我们要求的就是参数\(\vec w\)和\(b\)：&lt;/p&gt;
$$\begin{equation} \min\limits_{\vec w,b}\frac{1}{2}||\vec w||^2 \quad\text{subject to}\quad y_i(\vec w\cdot \vec x_i-b) \geq 1, \forall i,\end{equation}$$&lt;p&gt;对于正样本，类标号\(y_i\)为+1，反之则为-1。根据拉格朗日对偶，(3)可以转换为如下的二次规划（QP）问题，其中\(\alpha_i\)为拉格朗日乘子。&lt;/p&gt;
$$\begin{equation} \min\limits_{\vec \alpha}\Psi(\vec\alpha)=\min\limits_{\vec \alpha}\frac{1}{2}\sum_{i=1}^N\sum_{j=1}^Ny_iy_j(\vec x_i\cdot\vec x_j)\alpha_i\alpha_j-\sum_{i=1}^N\alpha_i,\end{equation}$$&lt;p&gt;其中N为样本数量。上式还需满足如下两个约束条件：&lt;/p&gt;
$$\begin{equation} \alpha_i\geq 0, \forall i,\end{equation}$$$$\begin{equation} \sum_{i=1}^Ny_i\alpha_i=0.\end{equation}$$&lt;p&gt;一旦求解出所有的拉格朗日乘子，则我们可以通过如下的公式得到分类面参数\(\vec w\)和\(b\)。&lt;/p&gt;
$$\begin{equation}\vec w=\sum_{i=1}^Ny_i\alpha_i\vec x_i,\quad b=\vec w\cdot\vec x_k-y_k\quad\text{for some}\quad\alpha_k&gt;0.\end{equation}$$&lt;p&gt;当然并不是所有的数据都可以完美的线性划分，可能有少量数据就是混在对方阵营，这时可以通过引入松弛变量\(\xi_i\)得到软间隔形式的SVM：&lt;/p&gt;
$$\begin{equation} \min\limits_{\vec w,b,\vec\xi}\frac{1}{2}||\vec w||^2+C\sum_{i=1}^N\xi_i \quad\text{subject to}\quad y_i(\vec w\cdot \vec x_i-b) \geq 1-\xi_i, \forall i,\end{equation}$$&lt;p&gt;其中的\(\xi_i\)为松弛变量，能假装把错的样本分对，\(C\)对max margin和margin failures的trades off。对于这个新的优化问题，约束变成了一个box constraint：&lt;/p&gt;
$$\begin{equation}0\leq\alpha_i \leq C,\forall i.\end{equation}$$&lt;p&gt;而松弛变量\(\xi_i\)不再出现在对偶公式中了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>和GRE纠缠的岁月</title>
      <link>http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/</link>
      <pubDate>Wed, 16 Mar 2016 11:44:37 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;GRE3000&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/GRE3000.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;yn说最近在备考GMAT和托福，把手机都清理了只为专心学习。xx说TCP/IP大作业要用Qt做一个网络监控的软件，问我Qt好不好学。&lt;/p&gt;
&lt;p&gt;GRE遇见Qt，会擦出怎样的火花呢~没错，我用Qt写了一个强化背诵GRE单词的软件——Cracking 3000&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Cracking-3000-1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/Cracking-3000-1.png&#34;&gt; &lt;img alt=&#34;Cracking-3000-2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/Cracking-3000-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;当时的一本GRE单词书有3000个单词，用杨鹏17天刷过之后，很多都记不住，于是想有没有办法把记不住的单词筛选出来，集中力量强化记忆。网上已经有3000的Excel表，所以我很自然的想到了把表格导入软件，用软件快速测试，并把不认识的单词筛选到新的Excel表格中。这样就可以把不认识的单词表打印出来，记完之后再导入软件进行新一轮的测试筛选，直到不认识的单词数为零。&lt;/p&gt;
&lt;p&gt;有了软件需求，代码实现起来就很快了。由于当时用Qt库比较多，所以直接拿来用了。软件实现这一块，主要是Excel表格的导入和导出，需要查一些文档，其他的就很简单了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;GRE3000-2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/GRE3000-2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然和GRE纠缠了一个多月，最终却没有考，但是想起当初早上6点爬起来背单词，晚上回宿舍抹黑写代码的情景，心情还是有一点小小的激动！以后类似的体验估计不会太多吧。&lt;/p&gt;
&lt;p&gt;最后祝yn GT考试顺利，xx大作业圆满完成！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-03-16-hello-gre-do-you-like-me/Cracking_3000.zip&#34;&gt;Cracking_3000软件安装包及说明&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>爸妈老了</title>
      <link>http://localhost:1313/posts/2016-02-26-leave-home-again/</link>
      <pubDate>Fri, 26 Feb 2016 11:30:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-02-26-leave-home-again/</guid>
      <description>&lt;p&gt;刚坐上去北京的列车，就收到了妈妈的微信语音：霖，早上收拾东西怎么忘了带上我给你洗好的鞋呀。我这才想起早上妈妈把洗好的鞋和叠好的衣服放在我房间，我却忘了带鞋。&lt;/p&gt;
&lt;p&gt;后来和爸妈在群里聊了起来。当我问爸爸什么时候返回学校时，他却说前天突然请假回家惹老板不高兴了，可能要被炒鱿鱼。是，老爸在那个学校当老师十几年了，我平时老数落他当老师工资那么低，为什么不改行，可突然听到这个消息，心里却不是滋味。&lt;/p&gt;
&lt;p&gt;其实老爸没必要请假回来的。前几天我发脾气，老爸好像真的决定转行搞种植业了，托我在淘宝买了好多枸杞树，自己带回了五十棵脐橙树苗，还准备去某个地方考察什么药材。&lt;/p&gt;
&lt;p&gt;离家前一天，妈妈特地跑到县城买了好多排骨回来，还煮了十个土鸡蛋要我带着路上吃。老爸买了好多苹果、香蕉、猕猴桃要我带着路上吃。今天早上收拾行李的时候，从来不动手的爸爸，也抢着往我包里塞各种牛奶和水果。&lt;/p&gt;
&lt;p&gt;二十多年了，经历了多少次的离家，从来没有像今天这样的不舍。二十多年了，我突然发现爸爸妈妈变矮了，爸爸的额头黑得发亮，妈妈的眼角也长出了好多鱼尾纹。&lt;/p&gt;
&lt;p&gt;今年难得有一个月的寒假，但我整天忙着看论文、书和电视剧，和爸妈的交流反而少了。有天吃过晚饭，发现妈妈独自坐在客厅戳着她的手机。我问过才发现原来妈妈想看哥哥和他女朋友的照片，但是怎么都弄不出来，我帮妈妈找出来之后，还教她怎么用微信和qq，妈妈说wifi图标像降落伞，我说你什么时候想上网就把降落伞打开，我说你如果想和哥哥聊天，就按住底部的按钮，等到出现小喇叭之后就可以说话了，说完放开手，听到“嗖“”的一声，说的话就发过去了，但是妈妈经常忘记打开降落伞，经常忘记按小喇叭。。。&lt;/p&gt;
&lt;p&gt;刚刷QQ空间的时候，看到一个同学的说说“马上又要去坐火车回武汉了，在家的时间越来越少了，没能好好陪陪父母，我不是称职的儿子。”&lt;/p&gt;
&lt;p&gt;坐在火车上，看着窗外闪过的霓虹灯，突然觉得这个世界好陌生好无情，每个人在时间面前是多么的渺小。&lt;/p&gt;
&lt;p&gt;2016年2月26日于z68列车上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>国科大半年体验报告</title>
      <link>http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/</link>
      <pubDate>Thu, 04 Feb 2016 00:42:30 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/</guid>
      <description>&lt;p&gt;现在是2016年2月4日，距离农历新年不到4天，结束了半年的国科大研一生活，躺在被窝里，松了一口气……&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ucas-2015-1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;来国科大之前，在贴吧上了解到国科大雁栖湖校区地处偏远农村，周边几乎没有娱乐场所；但同时学校的软硬件设施非常的棒：豪华单人间，研究员甚至院士亲自授课等等。所以对国科大雁栖湖校区满是憧憬。至今还清楚的记得坐校车从玉泉路过来时，沿途看到APEC主会场的鸟蛋、国科大桥、钟楼以及国科大正门几个大字时的激动心情~&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ucas-2015-7&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-7.jpg&#34;&gt; &lt;img alt=&#34;ucas-2015-3&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;入住国科大，着实被UCAS的蓝天白云、青山绿水给迷住了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ucas-2015-2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-2.jpg&#34;&gt; &lt;img alt=&#34;ucas-2015-4&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-4.jpg&#34;&gt; &lt;img alt=&#34;ucas-2015-5&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-5.jpg&#34;&gt; &lt;img alt=&#34;ucas-2015-6&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-2015-6.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;当然，凡事有利必有弊，因为这里远离市区，环境好，但正因为远离市区，几乎没有年轻人的娱乐活动，想要看个电影唱个歌少说也得跑城里，再要想感受下帝都奢靡的生活，必须各种倒车近2个小时到市里。&lt;/p&gt;
&lt;p&gt;研一这上学期，半年只进市里两次，一次是买山地车，一次是回所里开会。购物主要靠天猫超市。&lt;/p&gt;
&lt;p&gt;九十月份，大家都和大一新生似的，各种疯玩，野长城、雁栖湖、慕田峪、青龙峡、密云水库。进入十一月，新鲜劲过去了，又开始各种赶大小作业，复习考试。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;ucas-schedule-2015-fall&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-02-04-half-year-experience-report-in-ucas/ucas-schedule-2015-fall.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是我这学期的课表，看着课好像不多，每天都有半天休息，但是真的感觉回到了大三呀！尤其数据挖掘、信息检索、矩阵论一周上两次课，当天上完的课如果没有及时复习，隔一天再学新内容完全跟不上啊，而且矩阵论每次课都有好多作业啊，这数学课不做练习完全消化不了呀。更神的课还要数周五的卜神算法，君不见，每到周四晚上，西A、西B两栋宿舍，灯火通明，大家都在熬夜赶算法作业啊，不熬个两三点都不好意思和别人说你熬夜了呀。&lt;a href=&#34;https://bitjoy.net/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/&#34;&gt;大家可以感受一下我整理的卜神算法作业~~&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;正是因为这奇葩的课程安排，这半年几乎没有12点前睡过觉，估计平均是1:30才睡觉，早上8点多才起，中午也没午休。想想大学的时候按时作息，真是惭愧。期间有一次听说搜狐一同届华科毕业生猝死，朋友圈传得沸沸扬扬，大伙都吓得要命，纷纷表示绝不熬夜，早睡早起，我那天也是吓坏了，决定早睡，11:30就爬床上了，但是不知道是因为紧张还是熬夜习惯了，辗转反侧，到12点多才睡着的。&lt;/p&gt;
&lt;p&gt;我们研一在国科大上课是有补助的，但是在帝都完全不够用啊，而且CS相关的几个所补助都比ICT高，so当时还公车上书，各种写联名信、起义，经过半年之久的持久战，所里终于答应从2016年开始给我们涨500块钱的工资。涨了之后差不多够吃饭了。&lt;/p&gt;
&lt;p&gt;虽然这半年课业繁重，但是也抽空锻炼了身体，天气不是很冷的时候，隔一天就会去夜跑；而且选了乒乓球课，从直拍转为了横拍，并且在课上结识了路路，打球好厉害的一个女生，每次老师来指导的时候，都叫路路温柔点 O__O “…&lt;/p&gt;
&lt;p&gt;另外花了一千多块钱买了一辆二手山地车，骑着到处转悠了一下。很有缘的是，认识了一位才女。本来我们骑行社一块去美利达准备买车，但是由于种种原因我和小欣都没买，然后我们一块坐小黑车回村，在车上聊着聊着就认识，没想到后来还成为了好朋友，小欣的台球和乒乓球都打得不错，琴棋书画样样精通。突然发现身边的学霸才子佳人好多，更加深刻感受到有些东西不是你努力就能够弥补的，天赋、眼界、才艺、品味、性格……&lt;/p&gt;
&lt;p&gt;来国科大的这半年，自我感觉变化最大的是自己变得爱说话了，而且带着一种zhuang bi气息，不知道是不是受某几个我一直崇拜的人的影响。有时候静下心来想想都不敢相信之前的话是我说的，和大学时的我完全判若两人。当然这种事情有利也有弊，还在慢慢找平衡点，可能正如CL说的“话怎么说是一回事，内心要知道自己想要的”。&lt;/p&gt;
&lt;p&gt;这半年突然害怕一个人上学，一个人吃饭，一个人自习了，更喜欢face-to-face的交谈，少了对网络的依赖，不知道是不是因为性格的变化、环境的变化、抑或是认识的人多了，有了念想。&lt;/p&gt;
&lt;p&gt;半年时光，认识了不多不少几个好朋友：良辰、发文章、牛牛、欣儿、路路，有你们真好，谢谢你们~&lt;/p&gt;
&lt;p&gt;2016猴赛雷，即将从研一的上课转入课题组工作，很关键的一年，加油！&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/image.thepaper.cn/www/image/4/753/520.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>卜神算法作业整理</title>
      <link>http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/</link>
      <pubDate>Fri, 29 Jan 2016 17:07:11 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/</guid>
      <description>&lt;p&gt;这学期选修了&lt;a href=&#34;http://bioinfo.ict.ac.cn/~dbu/AlgorithmCourses/CS711008Z/CS711008Z_2015.html&#34;&gt;卜老师的算法课&lt;/a&gt;，都说这课是神课，上过之后果然是神课。同样是算法课，别人12月底就考完了，我们要1月底才考试。&lt;/p&gt;
&lt;p&gt;本课程主要讲了以下几个专题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Divide-and-conquer&lt;/li&gt;
&lt;li&gt;Dynamic programming&lt;/li&gt;
&lt;li&gt;Greedy&lt;/li&gt;
&lt;li&gt;Linear programming&lt;/li&gt;
&lt;li&gt;Linear programming: duality&lt;/li&gt;
&lt;li&gt;Network flow&lt;/li&gt;
&lt;li&gt;Problem hardness: Polynomial-time reduction&lt;/li&gt;
&lt;li&gt;NP-Completeness&lt;/li&gt;
&lt;li&gt;Approximation algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前三个专题的算法大多数本科时学过的，但是经卜老师讲一遍还会有新的收获。后六个专题接触较少，学到了很多新算法。&lt;/p&gt;
&lt;p&gt;下图是卜老师每节课必讲的问题求解思路图：&lt;/p&gt;
&lt;p&gt;（待我回家把图画出来…）&lt;/p&gt;
&lt;p&gt;本课程最神的要数课后作业了，一般deadline是周五，每到周四晚上，大家都做好熬通宵赶作业的准备，没熬到两三点都不好意思睡觉，我同学有一次甚至熬到了第二天六点！&lt;/p&gt;
&lt;p&gt;每次作业大概有10题，前7题是算法设计，后3题是算法实现，每题都不是省油的灯，不过如果把每道题都理解消化，算法及编程能力会有很大的提高。&lt;/p&gt;
&lt;p&gt;下面是我整理出来的算法题目和个人解答，大家感受一下。（&lt;strong&gt;仅供完成作业之后交流使用，拒绝抄袭！&lt;/strong&gt;）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment1_DandC.zip&#34;&gt;Assignment1_DandC.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A1sol.pdf&#34;&gt;A1sol.pdf&lt;/a&gt;   |  &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A1sol.tex&#34;&gt;A1sol.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A1sol_supplement.pdf&#34;&gt;A1sol_supplement.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A1sol_supplement.tex_.zip&#34;&gt;A1sol_supplement.tex_.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment2_DP.zip&#34;&gt;Assignment2_DP.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A2sol.pdf&#34;&gt;A2sol.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A2sol.tex_.zip&#34;&gt;A2sol.tex_.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A2sol_supplement.pdf&#34;&gt;A2sol_supplement.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A2sol_supplement.tex&#34;&gt;A2sol_supplement.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment3_Greedy.zip&#34;&gt;Assignment3_Greedy.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A3sol.pdf&#34;&gt;A3sol.pdf&lt;/a&gt;  |  &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A3sol.tex_.zip&#34;&gt;A3sol.tex_.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A3sol_supplement.pdf&#34;&gt;A3sol_supplement.pdf&lt;/a&gt;  |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A3sol_supplement.tex&#34;&gt;A3sol_supplement.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment4_LP.zip&#34;&gt;Assignment4_LP.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A4sol.pdf&#34;&gt;A4sol.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A4sol.tex&#34;&gt;A4sol.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A4sol_supplement.pdf&#34;&gt;A4sol_supplement.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A4sol_supplement.tex&#34;&gt;A4sol_supplement.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment5_NF.zip&#34;&gt;Assignment5_NF.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A5sol.pdf&#34;&gt;A5sol.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A5sol.tex&#34;&gt;A5sol.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A5sol_supplement.pdf&#34;&gt;A5sol_supplement.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A5sol_supplement.tex&#34;&gt;A5sol_supplement.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment6_NP.pdf&#34;&gt;Assignment6_NP.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A6sol.pdf&#34;&gt;A6sol.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A6sol.tex&#34;&gt;A6sol.tex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/Assignment7_App.pdf&#34;&gt;Assignment7_App.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A7sol.pdf&#34;&gt;A7sol.pdf&lt;/a&gt;   |   &lt;a href=&#34;http://localhost:1313/posts/2016-01-29-algorithm-design-and-analysis-by-dbu/A7sol.tex&#34;&gt;A7sol.tex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（七）总结展望</title>
      <link>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-7/</link>
      <pubDate>Sat, 09 Jan 2016 23:52:13 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-7/</guid>
      <description>&lt;p&gt;至此，整个新闻搜索引擎构建完毕，总体效果令人满意，不过还是有很多可以改进的地方。下面总结一下本系统的优点和不足。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;倒排索引存储方式。因为不同词项的倒排记录表长度一般不同，所以没办法以常规的方式存入关系型数据库。通过将一个词项的倒排记录表序列化成一个字符串再存入数据库，读取的时候通过反序列化获得相关数据，整个结构类似于邻接表的形式。&lt;/p&gt;
&lt;p&gt;推荐阅读实现方式。利用特征提取的方法，用25个关键词表示一篇新闻，大大减小了文档词项矩阵规模，提高计算效率的同时不影响推荐新闻相关性。&lt;/p&gt;
&lt;p&gt;借用了Reddit的热度公式，融合了时间因素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不足&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构建索引时，为了降低索引规模，提高算法速度，我们将纯数字词项过滤了，同时忽略了词项大小写。虽然索引规模下降了，但是牺牲了搜索引擎的正确率。&lt;/p&gt;
&lt;p&gt;构建索引时，采用了jieba的精确分词模式，比如句子“我来到北京清华大学”的分词结果为“我/ 来到/ 北京/ 清华大学”，“清华大学”作为一个整体被当作一个词项，如果搜索关键词是“清华”，则该句子不能匹配，但显然这个句子和“清华”相关。所以后续可以采用结巴的搜索引擎分词模式，虽然索引规模增加了，但能提升搜索引擎的召回率。&lt;/p&gt;
&lt;p&gt;在推荐阅读模块，虽然进行了维度约减，但是当数据量较大时（数十万条新闻），得到的文档词项矩阵也是巨大的，会远远超过现有PC的内存大小。所以可以先对新闻进行粗略的聚类，再在类内计算两两cosine相似度，得到值得推荐的新闻。&lt;/p&gt;
&lt;p&gt;在热度公式中，虽然借用了Reddit的公式，大的方向是正确的，但是引入了参数\(k_1\)和\(k_2\)，而且将其简单的设置为1。如果能够由专家给出或者经过机器学习训练得到，则热度公式的效果会更好。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;完整可运行的新闻搜索引擎Demo请看我的Github项目&lt;a href=&#34;https://github.com/01joy/news_search_engine&#34;&gt;news_search_engine&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以下是系列博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-1/&#34;&gt;和我一起构建搜索引擎（一）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-2/&#34;&gt;和我一起构建搜索引擎（二）网络爬虫&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-3/&#34;&gt;和我一起构建搜索引擎（三）构建索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-4/&#34;&gt;和我一起构建搜索引擎（四）检索模型&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-5/&#34;&gt;和我一起构建搜索引擎（五）推荐阅读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-6/&#34;&gt;和我一起构建搜索引擎（六）系统展示&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-7/&#34;&gt;和我一起构建搜索引擎（七）总结展望&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（六）系统展示</title>
      <link>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-6/</link>
      <pubDate>Sat, 09 Jan 2016 23:32:10 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-6/</guid>
      <description>&lt;p&gt;前几个博客已经介绍完搜索引擎的所有功能，为了实现更好的用户体验，需要一个web界面。这一部分是另一个队员做的，我这里借用他的代码。&lt;/p&gt;
&lt;p&gt;我们利用开源的&lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask Web框架&lt;/a&gt;搭建了展示系统，搜索引擎只需要两个界面，一个是搜索界面，另一个是展示详细新闻的页面（实际搜索引擎没有这个页面）。编写好这两个模板页面并调用前面给出的接口，得到数据，展示出来就可以。&lt;/p&gt;
&lt;p&gt;这一部分没有太多需要讲解的算法，直接上效果图（点击图片可以查看大图）。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图1. 搜索页面&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-6/News-Search-Engine1.webp&#34;&gt;
图1. 搜索页面&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图2. 新闻详情页面&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-6/News-Search-Engine2.webp&#34;&gt;
图2. 新闻详情页面&lt;/p&gt;
&lt;p&gt;由于数据量不大，只有1000条新闻，所以第一页中后面几个结果相关度就不是很高了。但是经过测试，在大数据量的情况下，不论是搜索的速度、准确率、召回率以及推荐阅读的相关度，都达到了不错的效果。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;完整可运行的新闻搜索引擎Demo请看我的Github项目&lt;a href=&#34;https://github.com/01joy/news_search_engine&#34;&gt;news_search_engine&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以下是系列博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-1/&#34;&gt;和我一起构建搜索引擎（一）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-2/&#34;&gt;和我一起构建搜索引擎（二）网络爬虫&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-3/&#34;&gt;和我一起构建搜索引擎（三）构建索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-4/&#34;&gt;和我一起构建搜索引擎（四）检索模型&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-5/&#34;&gt;和我一起构建搜索引擎（五）推荐阅读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-6/&#34;&gt;和我一起构建搜索引擎（六）系统展示&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-7/&#34;&gt;和我一起构建搜索引擎（七）总结展望&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（五）推荐阅读</title>
      <link>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-5/</link>
      <pubDate>Sat, 09 Jan 2016 22:34:56 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-5/</guid>
      <description>&lt;p&gt;虽然主要的检索功能实现了，但是我们还需要一个“推荐阅读”的功能。当用户浏览某条具体新闻时，我们在页面底端给出5条和该新闻相关的新闻，也就是一个最简单的推荐系统。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;搜狐新闻“相关新闻”模块&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-09-introduction-to-building-a-search-engine-5/sohu-news3.webp&#34;&gt;
搜狐新闻“相关新闻”模块&lt;/p&gt;
&lt;p&gt;推荐模块的思路是度量两两新闻之间的相似度，取相似度最高的前5篇新闻作为推荐阅读的新闻。&lt;/p&gt;
&lt;p&gt;我们前面讲过，一篇文档可以用一个向量表示，向量中的每个值是不同词项t在该文档d中的词频tf。但是一篇较短的文档（如新闻）的关键词并不多，所以我们可以提取每篇新闻的关键词，用这些关键词的tfidf值构成文档的向量表示，这样能够大大减少相似度计算量，同时保持较好的推荐效果。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fxsjy/jieba#3-%E5%85%B3%E9%94%AE%E8%AF%8D%E6%8F%90%E5%8F%96&#34;&gt;jieba分词组件自带关键词提取功能&lt;/a&gt;，并能返回关键词的tfidf值。所以对每篇新闻，我们先提取tfidf得分最高的前25个关键词，用这25个关键词的tfidf值作为文档的向量表示。由此能够得到一个1000*m的文档词项矩阵M，矩阵每行表示一个文档，每列表示一个词项，m为1000个文档的所有互异的关键词（大概10000个）。矩阵M当然也是稀疏矩阵。&lt;/p&gt;
&lt;p&gt;得到文档词项矩阵M之后，我们利用&lt;a href=&#34;http://sklearn.metrics.pairwise.pairwise_distances/&#34;&gt;sklearn的pairwise_distances函数&lt;/a&gt;计算M中行向量之间的cosine相似度，对每个文档，得到与其最相似的前5篇新闻id，并把结果写入数据库。&lt;/p&gt;
&lt;p&gt;推荐阅读模块的代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 24
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 25
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 26
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 27
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 28
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 29
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 30
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 31
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 32
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 33
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 34
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 35
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 36
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 37
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 38
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 39
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 40
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 41
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 42
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 43
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 44
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 45
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 46
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 47
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 48
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 49
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 50
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 51
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 52
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 53
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 54
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 55
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 56
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 57
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 58
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 59
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 60
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 61
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 62
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 63
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 64
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 65
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 66
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 67
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 68
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 69
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 70
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 71
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 72
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 73
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 74
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 75
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 76
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 77
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 78
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 79
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 80
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 81
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 82
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 83
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 84
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 85
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 86
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 87
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 88
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 89
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 90
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 91
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 92
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 93
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 94
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 95
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 96
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 97
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 98
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 99
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;100
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;101
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;102
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;103
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;104
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;105
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;106
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;107
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;108
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;109
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;110
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;111
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;112
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;113
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;114
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;115
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;116
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;117
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;118
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;119
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;120
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;121
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;122
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;123
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;124
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;125
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;126
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;127
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;128
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;129
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;130
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;131
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;132
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;133
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;134
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;135
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;136
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;137
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;138
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;139
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;140
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;141
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;142
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;143
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;144
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;145
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;146
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;147
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;148
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;149
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;150
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;151
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;152
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;153
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;154
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;155
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;156
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;157
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;158
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Created on Wed Dec 23 14:06:10 2015
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;@author: bitjoy.net
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; listdir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; jieba
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; jieba.analyse
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; configparser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; math
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; sklearn.metrics &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pairwise_distances
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RecommendationModule&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stop_words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_nearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    doc_dir_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    doc_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stop_words_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stop_words_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    idf_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    db_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, config_path, config_encoding):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config_path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config_encoding
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; configparser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConfigParser()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(config_path, config_encoding)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_dir_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_dir_path&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_encoding&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stop_words_path&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stop_words_encoding&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idf_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;idf_path&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;db_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;db_path&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words_path, encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words_encoding)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set(words&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;write_k_nearest_matrix_to_db&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;db_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cursor()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;DROP TABLE IF EXISTS knearest&amp;#39;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;CREATE TABLE knearest(id INTEGER PRIMARY KEY, first INTEGER, second INTEGER, third INTEGER, fourth INTEGER, fifth INTEGER)&amp;#39;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; docid, doclist &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;k_nearest:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO knearest VALUES (?, ?, ?, ?, ?, ?)&amp;#34;&lt;/span&gt;, tuple([docid] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; doclist))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_number&lt;/span&gt;(self, s):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            float(s)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ValueError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;construct_dt_matrix&lt;/span&gt;(self, files, topK &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;analyse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_stop_words(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;analyse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_idf_path(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idf_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(files)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        terms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_dir_path &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            docid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;analyse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;extract_tags(title &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;。&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; body, topK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;topK, withWeight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;#tags = jieba.analyse.extract_tags(title, topK=topK, withWeight=True)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cleaned_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word, tfidf &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tags:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                word &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_number(word):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                cleaned_dict[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tfidf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    terms[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; N
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    N &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    dt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([docid, cleaned_dict])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    dt_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(N)] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(M)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; docid, t_tfidf &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; dt:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            dt_matrix[i][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; docid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; term, tfidf &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; t_tfidf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                dt_matrix[i][terms[term]] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tfidf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dt_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(dt_matrix)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dt_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dt_matrix[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dt_matrix shape:(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(dt_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; dt_matrix
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;construct_k_nearest_matrix&lt;/span&gt;(self, dt_matrix, k):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;–&lt;/span&gt; pairwise_distances(dt_matrix[dt_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]], metric &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cosine&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        similarity_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(tmp, index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dt_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tolist(), columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dt_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tolist())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; similarity_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [int(i),[]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; k:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                max_col &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; similarity_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idxmax(axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                similarity_matrix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[i][max_col] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; max_col &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; i:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    tmp[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(int(max_col)) &lt;span style=&#34;color:#75715e&#34;&gt;#max column name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    j &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;k_nearest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(tmp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gen_idf_file&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; listdir(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_dir_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(len(files))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        idf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_dir_path &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            seg_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lcut(title &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;。&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; body, cut_all&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            seg_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set(seg_list) &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;–&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; seg_list:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                word &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_number(word):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; idf:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    idf[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    idf[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; idf[word] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                idf_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;idf_path, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;, encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word, df &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; idf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    idf_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%.9f&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(word, math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;log(n &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; df)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                idf_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;find_k_nearest&lt;/span&gt;(self, k, topK):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gen_idf_file()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; listdir(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;doc_dir_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dt_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;construct_dt_matrix(files, topK)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;construct_k_nearest_matrix(dt_matrix, k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_k_nearest_matrix_to_db()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;—–start time: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;—–&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;today()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; RecommendationModule(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../config.ini&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_k_nearest(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;—–finish time: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;—–&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;today()))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这个模块的代码量最多，主要原因是需要构建文档词项矩阵，并且计算k邻居矩阵。矩阵数据结构的设计需要特别注意，否则会严重影响系统的效率。我刚开始把任务都扔给了pandas.DataFrame，后来发现当两个文档向量合并时，需要join连接操作，当数据量很大时，非常耗时，所以改成了先用python原始的list存储，最后一次性构造一个完整的pandas.DataFrame，速度比之前快了不少。&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（四）检索模型</title>
      <link>http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-4/</link>
      <pubDate>Thu, 07 Jan 2016 19:31:25 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-4/</guid>
      <description>&lt;p&gt;构建好倒排索引之后，就可以开始检索了。&lt;/p&gt;
&lt;p&gt;检索模型有很多，比如向量空间模型、概率模型、语言模型等。其中最有名的、检索效果最好的是基于概率的BM25模型。&lt;/p&gt;
&lt;p&gt;给定一个查询Q和一篇文档d，d对Q的BM25得分公式为&lt;/p&gt;
$$BM25_{score}(Q,d)=\sum_{t\in Q}w(t,d)$$$$w(t,d)=\frac{qtf}{k_3+qtf}\times \frac{k_1\times tf}{tf+k_1(1-b+b\times l_d/avg\_l)}\times log_2\frac{N-df+0.5}{df+0.5}$$&lt;p&gt;公式中变量含义如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\(qtf\)：查询中的词频&lt;/li&gt;
&lt;li&gt;\(tf\)：文档中的词频&lt;/li&gt;
&lt;li&gt;\(l_d\)：文档长度&lt;/li&gt;
&lt;li&gt;\(avg\_l\)：平均文档长度&lt;/li&gt;
&lt;li&gt;\(N\)：文档数量&lt;/li&gt;
&lt;li&gt;\(df\)：文档频率&lt;/li&gt;
&lt;li&gt;\(b,k_1,k_3\)：可调参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个公式看起来很复杂，我们把它分解一下，其实很容易理解。第一个公式是外部公式，一个查询Q可能包含多个词项，比如“苹果手机”就包含“苹果”和“手机”两个词项，我们需要分别计算“苹果”和“手机”对某个文档d的贡献分数w(t,d)，然后将他们加起来就是整个文档d相对于查询Q的得分。&lt;/p&gt;
&lt;p&gt;第二个公式就是计算某个词项t在文档d中的得分，它包括三个部分。第一个部分是词项t在查询Q中的得分，比如查询“中国人说中国话”中“中国”出现了两次，此时qtf=2，说明这个查询希望找到的文档和“中国”&lt;strong&gt;更&lt;/strong&gt;相关，“中国”的权重应该更大，但是通常情况下，查询Q都很短，而且不太可能包含相同的词项，所以这个因子是一个常数，我们在实现的时候可以忽略。&lt;/p&gt;
&lt;p&gt;第二部分类似于&lt;a href=&#34;https://en.wikipedia.org/wiki/Tf%E2%80%93idf&#34;&gt;TFIDF模型&lt;/a&gt;中的TF项。也就是说某个词项t在文档d中出现次数越多，则t越重要，但是文档长度越长，tf也倾向于变大，所以使用文档长度除以平均长度\(l_d/avg\_l\)起到某种归一化的效果，\(k_1\)和\(b\)是可调参数。&lt;/p&gt;
&lt;p&gt;第三部分类似于&lt;a href=&#34;https://en.wikipedia.org/wiki/Tf%E2%80%93idf&#34;&gt;TFIDF模型&lt;/a&gt;中的IDF项。也就是说虽然“的”、“地”、“得”等停用词在某文档d中出现的次数很多，但是他们在很多文档中都出现过，所以这些词对d的贡献分并不高，接近于0；反而那些很稀有的词如”糖尿病“能够很好的区分不同文档，这些词对文档的贡献分应该较高。&lt;/p&gt;
&lt;p&gt;所以根据BM25公式，我们可以很快计算出不同文档t对查询Q的得分情况，然后按得分高低排序给出结果。&lt;/p&gt;
&lt;p&gt;下面是给定一个查询句子sentence，根据BM25公式给出文档排名的函数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result_by_BM25&lt;/span&gt;(self, sentence):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	seg_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lcut(sentence, cut_all&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	n, cleaned_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clean_list(seg_list)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	BM25_scores &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; term &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cleaned_dict&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fetch_from_db(term)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; r &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;log2((self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; df &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (df &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		docs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; doc &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; docs:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			docid, date_time, tf, ld &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; doc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			docid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(docid)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			tf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(tf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			ld &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(ld)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;K1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; tf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; w) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (tf &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;K1 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;B &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;B &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ld &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AVG_L))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; docid &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; BM25_scores:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				BM25_scores[docid] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BM25_scores[docid] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				BM25_scores[docid] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	BM25_scores &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sorted(BM25_scores&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items(), key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; operator&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;itemgetter(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	BM25_scores&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(BM25_scores) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, BM25_scores
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;首先将句子分词得到所有查询词项，然后从数据库中取出词项对应的倒排记录表，对记录表中的所有文档，计算其BM25得分，最后按得分高低排序作为查询结果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（三）构建索引</title>
      <link>http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-3/</link>
      <pubDate>Thu, 07 Jan 2016 19:07:17 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-3/</guid>
      <description>&lt;p&gt;目前正是所谓的“大数据”时代，数据量多到难以计数，怎样结构化的存储以便于分析计算，是当前的一大难题。上一篇博客我们简单抓取了1000个搜狐新闻数据，搜索的过程就是从这1000个新闻中找出和关键词相关的新闻来，那么怎样快速搜索呢，总不可能依次打开xml文件一个字一个字的找吧，这时就需要借助倒排索引这个强大的数据结构。&lt;/p&gt;
&lt;p&gt;在讲倒排索引之前，我们先介绍一下布尔检索。布尔检索只是简单返回包含某个关键词的文档，比如查询“苹果手机”，则返回所有包含“苹果”和“手机”关键词的文档，布尔检索并不对返回结果排序，所以有可能返回的第一个文档是“某个男孩边吃苹果边玩手机…“。&lt;/p&gt;
&lt;p&gt;实现布尔检索并不难，我们需要构建一个如下图的词项文档矩阵：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图1. 布尔检索中的词项文档矩阵&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-3/td_matrix.png&#34;&gt;
图1. 布尔检索中的词项文档矩阵&lt;/p&gt;
&lt;p&gt;每行对应一个词项，每列对应一个文档，如果该值为1，表示该行词项出现在该列文档中。比如词项”苹果“出现在doc1和doc3文档中，如果我们要找同时出现”苹果“和”手机“的文档，只需把他们对应的向量取出来进行”与“操作，此为101&amp;amp;011=001，所以doc3同时出现了”苹果“和”手机“两个关键词，我们将其返回。&lt;/p&gt;
&lt;p&gt;布尔检索虽然很快，但是它也有很多缺陷，比如不能对结果排序，词项只有出现和不出现两种状态，但是一篇文档中出现10次“苹果“和只出现1次”苹果“，他们的相关度肯定是不相同的。所以需要对布尔检索进行改进。&lt;/p&gt;
&lt;p&gt;在扫描文档时，不但记录某词项出现与否，还记录该词项出现的次数，即词项频率(tf)；同时我们记录该文档的长度(ld)，以及某词项在不同文档中出现的次数，即文档频率(df)。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图2. 倒排索引结构图&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-3/inverted-index.png&#34;&gt;
图2. 倒排索引结构图&lt;/p&gt;
&lt;p&gt;这样我们就得到了如上图的倒排索引。左边部分被称为词典，存储的是1000个新闻中所有不同的词项；右边部分被称为倒排记录表，存储的是出现Term_i的那些文档信息。倒排索引中存储的变量都是为了给后续检索模型使用。&lt;/p&gt;
&lt;p&gt;讲到这里，我们需要解决如下几个问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;怎样得到一篇文档中的所有词项。给我们一篇新闻稿子，人类很容易分辨出”苹果“和”手机“是两个不同的词项，但是计算机怎么知道是这两个词呢？为什么不是”苹”、”国手“和”机“呢？这就需要进行中文分词，我们可以借助开源的&lt;a href=&#34;https://github.com/fxsjy/jieba&#34;&gt;jieba中文分词组件&lt;/a&gt;来完成，jieba分词能够将一个中文句子切成一个个词项，这样我们就可以统计tf, df了。&lt;/li&gt;
&lt;li&gt;有些词，如”的“、”地“、”得“、”如果“等，几乎每篇文档都会出现，他们起不到很好的区分文档的效果，这类词被称为”停用词“，我们需要把他们去掉。去停词的步骤可以在jieba分词之后完成。&lt;/li&gt;
&lt;li&gt;怎样存储倒排记录表。假设1000个文档共有20000个不同的词项，如果用类似图1的矩阵形式存储，需要耗费1000&lt;em&gt;20000=2&lt;/em&gt;10^7个存储单元，但是图1往往是一个稀疏矩阵，因为一个文档中可能只出现了200个不同的词项，剩余的19800个词项都是空的。用矩阵方式存储时空效率都不高。所以我们可以采用图2的方式，词典用B-树或hash存储，倒排记录表用邻接链表存储方式，这样能大大减少存储空间。如果我们要将图2保存到数据库，可以对倒排记录表序列化成一个长的字符串，写入到一个单元格，读取的时候再反序列化。比如每个Doc内部用’\t’连接，Doc之间用’\n’连接，读取的时候split即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;倒排索引构建算法使用内存式单遍扫描索引构建方法（SPIMI），其实就是依次对每篇新闻进行分词，如果出现新的词项则插入到词典中，否则将该文档的信息追加到词项对应的倒排记录表中。SPIMI的伪代码如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图3. SPIMI算法伪代码&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-07-introduction-to-building-a-search-engine-3/SPIMI-algo.png&#34;&gt;
图3. SPIMI算法伪代码&lt;/p&gt;
&lt;p&gt;下面是构建索引的所有代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;  9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 24
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 25
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 26
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 27
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 28
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 29
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 30
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 31
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 32
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 33
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 34
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 35
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 36
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 37
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 38
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 39
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 40
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 41
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 42
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 43
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 44
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 45
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 46
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 47
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 48
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 49
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 50
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 51
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 52
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 53
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 54
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 55
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 56
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 57
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 58
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 59
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 60
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 61
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 62
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 63
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 64
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 65
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 66
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 67
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 68
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 69
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 70
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 71
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 72
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 73
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 74
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 75
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 76
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 77
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 78
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 79
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 80
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 81
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 82
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 83
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 84
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 85
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 86
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 87
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 88
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 89
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 90
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 91
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 92
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 93
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 94
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 95
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 96
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 97
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 98
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 99
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;100
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;101
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;102
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;103
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;104
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;105
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;106
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;107
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;108
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;109
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;110
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;111
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;112
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;113
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;114
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Created on Sat Dec 5 23:31:22 2015
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;@author: bitjoy.net
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; listdir
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; jieba
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; configparser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Doc&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    docid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ld &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, docid, date_time, tf, ld):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;docid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; docid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date_time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ld &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ld
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__repr__&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;docid) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_time &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tf) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ld))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__str__&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;docid) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_time &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tf) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ld))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;IndexModule&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stop_words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    postings_lists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, config_path, config_encoding):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config_path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config_encoding
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; configparser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConfigParser()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(config_path, config_encoding)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stop_words_path&amp;#39;&lt;/span&gt;], encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stop_words_encoding&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set(words&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_number&lt;/span&gt;(self, s):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            float(s)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ValueError&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clean_list&lt;/span&gt;(self, seg_list):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cleaned_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; seg_list:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_number(i) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stop_words:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cleaned_dict:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                cleaned_dict[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cleaned_dict[i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                cleaned_dict[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; n, cleaned_dict
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;write_postings_to_db&lt;/span&gt;(self, db_path):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqlite3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(db_path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cursor()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;DROP TABLE IF EXISTS postings&amp;#39;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;CREATE TABLE postings(term TEXT PRIMARY KEY, df INTEGER, docs TEXT)&amp;#39;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key, value &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            doc_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(map(str,value[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (key, value[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], doc_list)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO postings VALUES (?, ?, ?)&amp;#34;&lt;/span&gt;, t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;commit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;construct_postings_lists&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; configparser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConfigParser()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_path, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_encoding)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; listdir(config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_dir_path&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        AVG_L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; files:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_dir_path&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            docid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            seg_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; jieba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lcut(title &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;。&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; body, cut_all&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ld, cleaned_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clean_list(seg_list)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            AVG_L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AVG_L &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ld
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key, value &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cleaned_dict&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Doc(docid, date_time, value, ld)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists[key][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists[key][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# df++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists[key][&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(d)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;postings_lists[key] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, [d]] &lt;span style=&#34;color:#75715e&#34;&gt;# [df, [Doc]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    AVG_L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AVG_L &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; len(files)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N&amp;#39;&lt;/span&gt;, str(len(files)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_l&amp;#39;&lt;/span&gt;, str(AVG_L))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_path, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;w&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;’&lt;/span&gt;, encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;config_encoding) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; configfile:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(configfile)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_postings_to_db(config[&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;DEFAULT&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;’&lt;/span&gt;][&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;db_path&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;’&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    im &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IndexModule(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../config.ini&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    im&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;construct_postings_lists()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行之后会在./data/下生成一个ir.db数据库文件，这就是构建好的索引数据库。&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（二）网络爬虫</title>
      <link>http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/</link>
      <pubDate>Mon, 04 Jan 2016 16:23:19 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/</guid>
      <description>&lt;p&gt;网络爬虫又称网络蜘蛛、Web采集器等，它是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。&lt;/p&gt;
&lt;p&gt;我们在设计网络爬虫的时候需要注意两点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;鲁棒性&lt;/strong&gt;。Web中有些服务器会制造采集器陷阱（spider traps），这些陷阱服务器实际上是Web页面的生成器，它能在某个域下生成无数网页，从而使采集器陷入到一个无限的采集循环中去。采集器必须能从这些陷阱中跳出来。当然，这些陷阱倒不一定都是恶意的，有时可能是网站设计疏忽所导致的结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;礼貌性&lt;/strong&gt;。Web服务器具有一些隐式或显式的政策来控制采集器访问它们的频率。设计采集器时必须要遵守这些代表礼貌性的访问政策。&lt;/p&gt;
&lt;p&gt;采集器的基本架构如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;the basic crawler architecture&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/the-basic-crawler-architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本上是“抓取→分析→得到新的URL→再抓取→再分析”这样一个死循环过程。&lt;/p&gt;
&lt;p&gt;以上内容摘自王斌老师翻译的《信息检索导论》课本。&lt;/p&gt;
&lt;p&gt;由于我们要做的是一个新闻搜索引擎，所以抓取的是新闻数据，对于爬虫，网上也有很多的开源程序，如nutch等，Github上还有人专门开发了抓取新闻的组件&lt;a href=&#34;https://github.com/codelucas/newspaper&#34;&gt;newspaper&lt;/a&gt;，可以很方便的提取新闻标题、正文、时间等信息。不过用python写爬虫也是分分钟的事情，下面我们一起来试一试。&lt;/p&gt;
&lt;p&gt;首先找一个新闻网站，为简单起见，要找那种结构清晰、html代码便于解析的门户网站，比如&lt;a href=&#34;http://news.sohu.com/1/0903/61/subject212846158.shtml&#34;&gt;搜狐新闻&lt;/a&gt;、&lt;a href=&#34;http://www.cankaoxiaoxi.com/china/szyw/&#34;&gt;参考消息&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;搜狐新闻的国内要闻列表如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;sohu news1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/sohu-news1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;结构非常清楚，左边是带URL的标题，右边括号里有新闻时间。这一页列表就有200条新闻，如果我们要获取1000条，只要不断模拟点击下一页即可。下一页的URL也只是在首页的基础上加上_xxx.shtml，xxx就是不同的页码。&lt;/p&gt;
&lt;p&gt;查看列表的html源码，得知列表都在类名为newsblue1的td中，所以只需要解析html源码就可以得到新闻标题、URL和时间，python解析html可以用BeautifulSoup包，非常方便。&lt;/p&gt;
&lt;p&gt;进入到新闻详细页面，正文部分如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;sohu news2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/sohu-news2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看html源码，正文位于类名为text clear的div中，据此可以很方便的提取新闻正文。&lt;/p&gt;
&lt;p&gt;得到一条新闻的所有数据之后，我们需要将之结构化成xml文件，借助相应的xml包可以很方便的完成这项工作。xml格式定义如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;xml format&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-2/xml-format.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意爬虫需要访问网络，难免会出现一些异常，所以捕获异常是非常有必要的。另外，搜狐每篇新闻正文后面都会有一段’//’开始的注释，这个需要过滤掉，短于140个字的新闻我也过滤掉了。整个搜索系统的配置参数都存储在config.ini文件中。&lt;/p&gt;
&lt;p&gt;下面是完整的python 3.4+代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;73
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;74
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;75
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Created on Sat Dec 19 11:57:01 2015
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;@author: bitjoy.net
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bs4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BeautifulSoup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; urllib.request
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; configparser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_news_pool&lt;/span&gt;(root, start, end):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    news_pool &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(start,end,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        page_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; start:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            page_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.shtml&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            page_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.shtml&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlopen(page_url)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;—–&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;—–&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(type(e), page_url))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        html &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        soup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(html)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        td &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;td&amp;#39;&lt;/span&gt;, class_ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;newsblue1&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; td&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        span &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; td&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;span&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(len(a)):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            date_time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; span[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            news_info &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2016-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date_time[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date_time[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:00&amp;#39;&lt;/span&gt;,url,title]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            news_pool&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(news_info)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(news_pool)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;crawl_news&lt;/span&gt;(news_pool, min_body_len, doc_dir_path, doc_encoding):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; news &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; news_pool:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlopen(news[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;—–&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;—–&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(type(e), news[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        html &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        soup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(html)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;, class_ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text clear&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;—–&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;—–&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(type(e), news[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;//&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; body:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; body[:body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;//&amp;#39;&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; body&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(body) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; min_body_len:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        doc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Element(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SubElement(doc, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SubElement(doc, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; news[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SubElement(doc, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; news[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SubElement(doc, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datetime&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; news[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SubElement(doc, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; body
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ElementTree(doc)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(doc_dir_path &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(i), encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; doc_encoding, xml_declaration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; configparser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConfigParser()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;../config.ini&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://news.sohu.com/1/0903/61/subject212846158&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    news_pool &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_news_pool(root, &lt;span style=&#34;color:#ae81ff&#34;&gt;854&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;849&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    crawl_news(news_pool, &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;, config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_dir_path&amp;#39;&lt;/span&gt;], config[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DEFAULT&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;doc_encoding&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;done!&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;完整可运行的新闻搜索引擎Demo请看我的Github项目&lt;a href=&#34;https://github.com/01joy/news_search_engine&#34;&gt;news_search_engine&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>和我一起构建搜索引擎（一）简介</title>
      <link>http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-1/</link>
      <pubDate>Mon, 04 Jan 2016 13:56:23 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-1/</guid>
      <description>&lt;p&gt;我们上网用得最多的一项服务应该是搜索，不管大事小情，都喜欢百度一下或谷歌一下，那么百度和谷歌是怎样从浩瀚的网络世界中快速找到你想要的信息呢，这就是搜索引擎的艺术，属于信息检索的范畴。&lt;/p&gt;
&lt;p&gt;这学期学习了《现代信息检索》课程，使用的是Stanford的教材&lt;a href=&#34;http://nlp.stanford.edu/IR-book/&#34;&gt;Introduction to Information Retrieval&lt;/a&gt;，网上有电子版，大家可以参考。&lt;/p&gt;
&lt;p&gt;本课程的大作业是完成一个新闻搜索引擎，要求是这样的：定向采集3-4个新闻网站，实现这些网站信息的抽取、索引和检索。网页数目不少于10万条。能按相关度、时间和热度（需要自己定义）进行排序，能实现相似新闻的自动聚类。&lt;/p&gt;
&lt;p&gt;截止日期12月31日，我们已经在规定时间完成了该系统，自认为检索效果不错，所以在此把过程记录如下，欢迎讨论。&lt;/p&gt;
&lt;p&gt;网上有很多开源的全文搜索引擎，比如Lucene、Sphinx、Whoosh等，都提供了很好的API，开发者只需要调用相关接口就可以实现一个全功能的搜索引擎。不过既然学习了IR这门课，自然要把相关技术实践一下，所以我们打算自己实现一个搜索引擎。&lt;/p&gt;
&lt;p&gt;这是简介部分，主要介绍整个搜索引擎的思路和框架。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;search engine outline&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-introduction-to-building-a-search-engine-1/search-engine-architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;上图为本搜索引擎的框架图。首先爬虫程序从特定的几个新闻网站抓取新闻数据，然后过滤网页中的图片、视频、广告等无关元素，抽取新闻的主体内容，得到结构化的xml数据。然后一方面使用内存式单遍扫描索引构建方法（SPIMI）构建倒排索引，供检索模型使用；另一方面根据向量空间模型计算两两新闻之间的余弦相似度，供推荐模块使用。最后利用概率检索模型中的BM25公式计算给定关键词下的文档相关性评分，BM25打分结合时间因素得到热度评分，根据评分给出排序结果。&lt;/p&gt;
&lt;p&gt;在后续博文中，我会详细介绍每个部分的实现。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;完整可运行的新闻搜索引擎Demo请看我的Github项目&lt;a href=&#34;https://github.com/01joy/news_search_engine&#34;&gt;news_search_engine&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;以下是系列博客：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-1/&#34;&gt;和我一起构建搜索引擎（一）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-04-introduction-to-building-a-search-engine-2/&#34;&gt;和我一起构建搜索引擎（二）网络爬虫&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-3/&#34;&gt;和我一起构建搜索引擎（三）构建索引&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-07-introduction-to-building-a-search-engine-4/&#34;&gt;和我一起构建搜索引擎（四）检索模型&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-5/&#34;&gt;和我一起构建搜索引擎（五）推荐阅读&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-6/&#34;&gt;和我一起构建搜索引擎（六）系统展示&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitjoy.net/posts/2016-01-09-introduction-to-building-a-search-engine-7/&#34;&gt;和我一起构建搜索引擎（七）总结展望&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>认真你就赢了</title>
      <link>http://localhost:1313/posts/2016-01-04-attitude-is-everything/</link>
      <pubDate>Mon, 04 Jan 2016 12:42:21 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-04-attitude-is-everything/</guid>
      <description>&lt;p&gt;突然发现，从小到大，自己做事都做得很慢，别人一会做完的作业，我可能要花好几个小时。但拿作业一对比，明显能看出差距，自己精雕细琢的作品不是别人随随便便就能比的。&lt;/p&gt;
&lt;p&gt;最近几次和同学合作完成大作业也遇到了类似的情况，数据抓取的同学给我的数据，不是格式不对就是内容缺胳膊少腿，质量极其差，还不愿修改，曰：只是做一个演示系统，有数据就行了。他不知道他这样的数据给我，我们后面做得再好，最终的演示效果也不会好，他这样的随意，后面的人不知要多花多少时间来弥补。我也无意跟他多费口舌，自己挽起袖子重做了他的工作。&lt;/p&gt;
&lt;p&gt;类似的事情，我遇到的不在少数，和别人沟通的时间远远超过了自己完成任务的时间。所以往往一个很简单的工作，我要花比别人多两到三倍的时间。这个过程就像工匠在雕琢自己的作品，是不计时间的，直到自己认为完美为止。这大概就是老罗所说的工匠精神吧。&lt;/p&gt;
&lt;p&gt;在一个完美主义者的眼里，这是一个千疮百孔的世界。&lt;/p&gt;
&lt;p&gt;糟糕的文档排版，错别字和错误标点一堆，一群人并排走挡了后面或对面的人，开水房离宿舍十万八千里，蚊香的设计，电脑接口位置的设计，U盘接口的设计，凸出的摄像头，插队，说脏话。。。&lt;/p&gt;
&lt;p&gt;当然也有同学劝我，这些东西差不多就行了，何必花这么多时间做这么好干什么，还不如去看个电影打个球。也经常听人说Take it easy，别太认真，认真你就输了。&lt;/p&gt;
&lt;p&gt;但是我始终相信，态度决定一切。你一天认真做了，别人不一定看得到，但坚持一个月甚至一年，总会有志同道合的人发现你，而你的坚持也将一点点的改变这个行业这个世界。就像老罗做手机，虽然销量不怎么样，但他的工匠精神、他的情怀，值得每一个人尊敬。T2统一听筒和各种传感器的位置、消失的电源键、消失的SIM卡插槽、消失的金属中框断点完全是超出iPhone的美好设计。希望老罗的情怀之路能够坚持下去、越走越远。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;smartisan-T2-2015&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-04-attitude-is-everything/smartisan-T2-2015.jpg&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2016新年快乐</title>
      <link>http://localhost:1313/posts/2016-01-03-2016-happy-new-year/</link>
      <pubDate>Sun, 03 Jan 2016 12:25:50 +0800</pubDate>
      <guid>http://localhost:1313/posts/2016-01-03-2016-happy-new-year/</guid>
      <description>&lt;p&gt;2015年过得好快，梳理一下，2015年的时间线大概是这样的：&lt;/p&gt;
&lt;p&gt;3月来北京计算所做毕设→5月返回武大修改论文→5月30公开答辩→6月毕业季→7月回北京计算所→8月回家陪父母→9月国科大开学→持续高强度的学习→2016元旦还在图书馆研究NPC问题。&lt;/p&gt;
&lt;p&gt;2015年给我的总体感受是很忙，但忙的事情都很琐碎，并没有什么大的里程碑事件，不过以下三件事情我认为值得一提。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本科四年修成正果，研究生三年新的起航&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;whu_certificate&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-03-2016-happy-new-year/whu_certificate.jpg&#34;&gt;
&lt;img alt=&#34;ucas_admission&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-03-2016-happy-new-year/ucas_admission.jpg&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;买了一辆属于自己的山地车，1k2，虽然是二手的，但足够我骑着它去看世界了:-)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;bike&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-03-2016-happy-new-year/bike.jpg&#34;&gt;
&lt;img alt=&#34;2015_cycling_1&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-03-2016-happy-new-year/2015_cycling_1.jpg&#34;&gt;
&lt;img alt=&#34;2015_cycling_2&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2016-01-03-2016-happy-new-year/2015_cycling_2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;也许是在城市里待久了，我特别享受这种亲近大自然的感觉，蓝天、白云、草原、大海这些美景永远也看不够。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;在国科大认识了两个好基友，虽然都是单身汪，但至少想看电影吃火锅的时候还可以有个伴。（此处居然少了三人合照）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2015年共写了14篇博客，包含3篇技术博客，bitjoy.net 历史累计PV1039，UV520，IP502。&lt;/p&gt;
&lt;p&gt;展望2016年，大的方向基本都确定了，目标如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完成国科大下学期的课程任务&lt;/li&gt;
&lt;li&gt;接手pLink软件&lt;/li&gt;
&lt;li&gt;刷完LeetCode所有题目&lt;/li&gt;
&lt;li&gt;读10本书&lt;/li&gt;
&lt;li&gt;去电影院看10场电影（2015下半年在怀柔村里没看一部电影/(ㄒoㄒ)/~~）&lt;/li&gt;
&lt;li&gt;改正坐姿&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大家一起见证！&lt;/p&gt;</description>
    </item>
    <item>
      <title>北国的雪</title>
      <link>http://localhost:1313/posts/2015-11-22-snow-in-beijing/</link>
      <pubDate>Sun, 22 Nov 2015 12:16:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-11-22-snow-in-beijing/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/f/fd/Von_Koch_curve.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;第一次在北方过冬，今年北京11月6日就下雪了，然而我在广州的小伙伴还穿着短袖吃着冰棍呢。。。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;2015_11_06_beijing_snow&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-11-22-snow-in-beijing/2015_11_06_beijing_snow.jpg&#34;&gt;
北京2015年的第一场雪，比以往时候来的更早一些&lt;/p&gt;
&lt;p&gt;今天又下起了第二场雪，下了整整两天的大雪，然而我房间的暖气却不暖了，大叔来修了两次，无功而返，说是一楼的宿舍暖气都有问题，当初设计有缺陷(╯‵□′)╯︵┻━┻&lt;/p&gt;
&lt;p&gt;这样也好，给了自己去图书馆的理由❉&lt;/p&gt;</description>
    </item>
    <item>
      <title>解决Win10间歇性断网的问题</title>
      <link>http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/</link>
      <pubDate>Fri, 13 Nov 2015 10:55:51 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/</guid>
      <description>&lt;p&gt;安装WIN10一个月以来，校园有线网经常间歇性断网，通常是20分钟不到就断了，需要重启或者把有线连接关闭再打开才可以。在微博上问过微软客服也无果，&lt;a href=&#34;http://www.pcadvisor.co.uk/forum/windows-29/windows-10-no-internet-trough-ethernet-4540238/&#34;&gt;后来Google到某国外的解决办法&lt;/a&gt;，现记录如下。&lt;/p&gt;
&lt;p&gt;说到底WIN10断网的问题还是和驱动有关，先看一下我的有线网卡Broadcom NetLink (TM) Gigabit Ethernet，驱动信息是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;bcm-driver-before&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/bcm-driver-before.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;还是13年的驱动，版本号是15.6.0.14，于是第一想到的是更新驱动。点击驱动右键选更新-&amp;gt;自动搜索更新的驱动程序软件-&amp;gt;提示“已安装适合设备的最佳驱动程序软件”，但这明明不是最新的驱动啊！&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.broadcom.com/support/ethernet-nic-netxtreme-i-desktop-mobile&#34;&gt;于是在Broadcom的官网上找到了最新驱动win_b57_x64-17.2.0.2&lt;/a&gt;，版本号是17.2.0.2，更新日期2015-10-27，原来这才是最新的驱动。&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;2018.1.25&lt;/strong&gt;更新：上面的地址已失效，&lt;a href=&#34;https://www.broadcom.cn/products/ethernet-connectivity/controllers/bcm5720#downloads&#34;&gt;最新地址请点击此处&lt;/a&gt;，并选择DOWNLOADS→Software→NetLink®/NetXtreme® I Desktop/Mobile/Server (x64)，&lt;a href=&#34;http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/win_b57_x64-17.2.0.2.zip&#34;&gt;也可以从本站下载&lt;/a&gt;。）&lt;/p&gt;
&lt;p&gt;在安装最新驱动之前，我们需要关闭WIN10的自动更新驱动功能，因为WIN10会认为它的15.6.0.14版本是最新的，在windows update时把实际最新的17.2.0.2版本替换掉。具体做法是在Cortana中搜索“&lt;strong&gt;更改设备安装设置&lt;/strong&gt;”并打开，选择否，从不安装来自Windows更新的驱动程序软件，如下。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;change-device-installation&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/change-device-installation.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;a href=&#34;http://jingyan.baidu.com/article/fea4511a72cb38f7ba912543.html&#34;&gt;重启进入安全模式&lt;/a&gt;，再次在设备管理器中右键点击网卡驱动，选择更新-&amp;gt;浏览计算机以查找驱动程序软件-&amp;gt;从计算机的设备驱动程序列表中选取-&amp;gt;点击从磁盘安装按钮-&amp;gt;浏览找到你之前在网上下载的最新驱动（*.inf格式）-&amp;gt;选中-&amp;gt;依次确定。刷新之后再次查看驱动信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;bcm-driver-after&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-11-13-solution-to-win10s-network-problem/bcm-driver-after.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到驱动已经更新到最新的版本了。再次重启进入正常模式，目前用了两天了也没有再断过网。&lt;/p&gt;
&lt;p&gt;其他WIN10驱动问题应该也可以用类似的方法解决。&lt;/p&gt;
&lt;p&gt;（话说我的WIN10偶尔会死机，就是用着用着突然鼠标和键盘完全动不了了，只能强制重启，有谁知道这是怎么回事吗？）&lt;/p&gt;</description>
    </item>
    <item>
      <title>读施一公博客有感</title>
      <link>http://localhost:1313/posts/2015-10-31-review-about-shiyigongs-blogs/</link>
      <pubDate>Sat, 31 Oct 2015 10:23:57 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-10-31-review-about-shiyigongs-blogs/</guid>
      <description>&lt;p&gt;大家好，&lt;a href=&#34;http://blog.sciencenet.cn/home.php?mod=space&amp;amp;uid=46212&amp;amp;do=blog&amp;amp;view=me&amp;amp;from=space&#34;&gt;施一公老师的26篇博客&lt;/a&gt;大概可以分为四类：1）讲述个人生活经历2）评论社会问题3）讨论国家科技和人才引进政策4）介绍学习方法。这些博客比较全面地反应了施一公的求学经历、由学生到教授的转变过程以及回国之后为中国人才引进所做出的努力。&lt;/p&gt;
&lt;p&gt;给我感触最深的有3点：1）环境对人的影响很大2）坚持总会有所收获3）做一个有担当、有社会责任感的科研人。&lt;/p&gt;
&lt;h1 id=&#34;1环境对人的影响很大&#34;&gt;1）环境对人的影响很大&lt;/h1&gt;
&lt;p&gt;《从&amp;lt;高考1977&amp;gt;说起》这篇博客详细介绍了施一公高考前的家庭情况，施一公的父亲是哈工大毕业，母亲是北京矿业学院（今中国矿业大学）毕业，在上世纪五六十年代，父母都是名校大学毕业，可谓是少有的知识分子家庭。施一公还有两个姐姐、一个哥哥、一个表哥和一个表姐，哥哥姐姐们刻苦的学习、父亲悉心的辅导以及不错的高考成绩对施一公产生了很大的影响，争强好胜的施一公自然不甘示弱，以84年全国数学联赛省第一名的成绩保送清华。诚然，施一公的成绩和他自己的刻苦努力分不开，但是从小良好的家庭氛围也功不可没。&lt;/p&gt;
&lt;h1 id=&#34;2坚持总会有所收获&#34;&gt;2）坚持总会有所收获&lt;/h1&gt;
&lt;p&gt;这可以从施一公的两个例子中看出。&lt;/p&gt;
&lt;p&gt;《今天3000米》讲到施一公从82年跑步的“倒数第一“、“颜面尽失”之后开始坚持长跑，直到89年从未间断，在85年的清华新生运动会3000米竞走中，以16分10秒轻松获得第一名。&lt;/p&gt;
&lt;p&gt;跑步这件事我也深有体会，我高中几乎没有体育锻炼，大一刚入学的体能测试中，1000米项目跑了4’15’’，小组倒数第一，跑完全程脸都发白，当时真的担心大学因体育挂科毕不了业。后来大三下的时候，开始坚持跑步，一开始每晚跑3圈，一个月后加一圈，最后稳定在每晚跑5圈，一直坚持到毕业。在毕业体能测试中，还是1000米项目，我居然跑了3’42’’，小组顺数第一名，跑完之后虽然有点累，但并不感觉难受，连我自己都不太相信。&lt;/p&gt;
&lt;p&gt;《如何做一名优秀的博士生：（一）时间的付出》中，施一公讲到他在留学期间的时间付出。“留学的第一年，我情绪波动很大，内心浮躁而迷茫，根本无心念书。”“第二年，每周五天、每天从上午9点做实验到晚上7、8点，周末也会去两个半天。””到了第三年，晚上常常干到11点多，赶最后一班校车从霍普金斯医学院回Homewood campus（我住在附近）。””研究生阶段后期，我的刻苦在实验室是出了名的。每天晚上做实验到半夜三点左右，回到住处躺下来睡觉时常常已是四点以后；但每天早晨八点都会被窗外纽约第一大道(First Avenue)上的汽车喧闹声吵醒，九点左右又回到实验室开始了新的一天…”&lt;/p&gt;
&lt;p&gt;施一公几年如一日的坚持没有白费，他顺利毕业并获得名校终生教职席位。&lt;/p&gt;
&lt;p&gt;其实正如H老师所说“&lt;strong&gt;以大多数人努力的程度，根本还没到拼智商的时候。&lt;/strong&gt;” 坚持做一件事，点滴积累，做到极致。无论什么事情，坚持做下去，一定能有所收获，对于体力活更是如此。&lt;/p&gt;
&lt;h1 id=&#34;3做一个有担当有社会责任感的科研人&#34;&gt;3）做一个有担当、有社会责任感的科研人&lt;/h1&gt;
&lt;p&gt;在读施一公博客的时候，心潮澎湃，热血沸腾，无论是施一公自己排除万难坚持回国的行动，还是施一公回国之后号召海龟回国的倡议，亦或是施一公为人才引进，千人计划建言献策的付出，都真真切切的体现了他的强烈的爱国热情。&lt;/p&gt;
&lt;p&gt;施一公回国后的去私心、敢担当、有作为，坚持职业操守，“我申请基金的时候一定不和评委在评审前或评审后做任何形式的私下沟通；我当评委的时候一定不和申请人在评审前或评审后做任何形式的私下沟通”等都在用切身行动一点点改善国内的科研环境。&lt;/p&gt;
&lt;p&gt;在pFind组，H老师也时常教导我们要&lt;strong&gt;对学术保留一点敬畏之心&lt;/strong&gt;，做好科研，尽自己一份力改善国际社会对中国学术界的看法。&lt;/p&gt;
&lt;p&gt;总的来说，施一公老师的博客内容丰富，让我受益匪浅，也给了我很多启发，关于如何做一名合格的研究生，我还完全是门外汉，前面的师兄师姐都给出了很多方法论的解读，我也把施一公关于如何做一名优秀的博士生的几个要点罗列如下，希望用此标准来要求自己。&lt;/p&gt;
&lt;p&gt;如何一名优秀的博士生：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;时间的付出&lt;/li&gt;
&lt;li&gt;方法论的转变
&lt;ol&gt;
&lt;li&gt;正确分析负面结果&lt;/li&gt;
&lt;li&gt;耗费时间的完美主义阻碍创新进取&lt;/li&gt;
&lt;li&gt;科研文献与学术讲座的取与舍&lt;/li&gt;
&lt;li&gt;挑战传统思维&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;祝大家工作顺利！&lt;/p&gt;
&lt;p&gt;-bitJoy&lt;/p&gt;</description>
    </item>
    <item>
      <title>浮点数知识及Grisu算法介绍</title>
      <link>http://localhost:1313/posts/2015-08-30-introduction-to-floating-point-numbers-and-grisu-algorithm/</link>
      <pubDate>Sun, 30 Aug 2015 20:45:36 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-08-30-introduction-to-floating-point-numbers-and-grisu-algorithm/</guid>
      <description>&lt;p&gt;进入研究生生涯完成的第一个新生培训作业是“2.5亿个浮点数的外部排序算法”，前后折腾了将近一个月，结果是在i7处理器上，限制512MB内存，排序用时250秒左右。&lt;/p&gt;
&lt;p&gt;这个作业的常规思路大部分人都能想到，按块读取文件-&amp;gt;atof转换为double-&amp;gt;内部快速排序或基数排序-&amp;gt;dtoa转换为char*-&amp;gt;按块写入文件。这里面中间的三个过程都很耗时，特别是atof和dtoa，因为精度只要求保留9位小数，所以可以自己实现atof和dtoa来加速，也可以使用多线程加速。&lt;/p&gt;
&lt;p&gt;整个作业都是基于对IEEE754浮点数的深刻理解展开的，所以下面详细讲解浮点数的一些知识。&lt;/p&gt;
&lt;h1 id=&#34;ieee754双精度浮点数&#34;&gt;IEEE754双精度浮点数&lt;/h1&gt;
&lt;p&gt;目前大多数CPU内浮点数的表示都遵循IEEE754标准，IEEE754双精度浮点数（double）表示如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;IEEE754 double在内存中的形式[1]&#34; loading=&#34;lazy&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/a/a9/IEEE_754_Double_Floating_Point_Format.svg&#34;&gt;
IEEE754 double在内存中的形式[1]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sign bit：符号位，1位，用来表示正负号，0表示非负；1表示负&lt;/li&gt;
&lt;li&gt;exponent：指数位，11位，用来表示次方数，是一个无符号数&lt;/li&gt;
&lt;li&gt;fraction：尾数位，52位，用来表示精确度，也是一个无符号数，有些资料也叫做mantissa或significand&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种表示形式有两点需要注意。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一，既然exponent是无符号的，那么怎样表示负指数呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IEEE754规定，二进制串中算得的e需要减去一个偏移量bias，对于double，bias=1023，即e’=e-bias。因为\(e\in[0,2^{11}-1]\)，所以最终\(e’\in[-2^{10}+1,2^{10}]\)。但是如果把e本身看作有符号数e”，则\(e”\in[-2^{10},2^{10}-1]\)，既然e”和e’相差微小，为什么不直接把e看成有符号数，而非要把它看成无符号数，再减去一个偏移量bias呢？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/2612775/why-ieee-floating-point-number-calculate-exponent-using-a-biased-form&#34;&gt;这是因为如果把e看成无符号数再减偏移量，浮点数大小比较速度更快。&lt;/a&gt;引用&lt;a href=&#34;https://en.wikipedia.org/wiki/Exponent_bias&#34;&gt;维基百科&lt;/a&gt;的一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By arranging the fields so that the sign bit is in the most significant bit position, the biased exponent in the middle, then the mantissa in the least significant bits, the resulting value will be ordered properly, whether it’s interpreted as a floating point or integer value. This allows high speed comparisons of floating point numbers using fixed point hardware.&lt;/p&gt;</description>
    </item>
    <item>
      <title>百度图片批量下载器（python3 &#43; pyqt5 &#43; eric6 &#43; cx_Freeze4）</title>
      <link>http://localhost:1313/posts/2015-08-13-baidu-image-downloader-python3-pyqt5-eric6-cx_freeze4/</link>
      <pubDate>Thu, 13 Aug 2015 17:27:15 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-08-13-baidu-image-downloader-python3-pyqt5-eric6-cx_freeze4/</guid>
      <description>&lt;p&gt;去年暑假在北大计算所实习的时候，任务之一就是批量下载百度图片。当时没学python，用c#实现了一个简易版本的批量下载器，如下图。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;C#版本百度图片批量下载器（抓的是百度的wap站点，现在好像不能用了）&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-08-13-baidu-image-downloader-python3-pyqt5-eric6-cx_freeze4/BaiduImageDownloader1.png&#34;&gt;
C#版本百度图片批量下载器（抓的是百度的wap站点，现在好像不能用了）&lt;/p&gt;
&lt;p&gt;当时“时间紧，任务重“，既没仔细研究百度图片API，也没处理好界面线程阻塞的问题。这个问题其实很有意思，趁着暑假在家，实现了一个比较完美的python版本，先上效果图。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;python3版本百度图片批量下载器&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-08-13-baidu-image-downloader-python3-pyqt5-eric6-cx_freeze4/BaiduImageDownloader2.png&#34;&gt;
python3版本百度图片批量下载器&lt;/p&gt;
&lt;p&gt;新版使用了&lt;a href=&#34;https://www.python.org/ftp/python/3.4.3/python-3.4.3.amd64.msi&#34;&gt;python-3.4.3.amd64.msi&lt;/a&gt; + &lt;a href=&#34;http://sourceforge.net/projects/pyqt/files/PyQt5/PyQt-5.5/PyQt5-5.5-gpl-Py3.4-Qt5.5.0-x64.exe&#34;&gt;PyQt5-5.5-gpl-Py3.4-Qt5.5.0-x64.exe&lt;/a&gt; + &lt;a href=&#34;http://downloads.sourceforge.net/project/eric-ide/eric6/stable/6.0.8/eric6-6.0.8.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Feric-ide%2Ffiles%2Feric6%2Fstable%2F&amp;amp;ts=1439435222&amp;amp;use_mirror=nchc&#34;&gt;eric6-6.0.8.zip&lt;/a&gt; + &lt;a href=&#34;http://www.lfd.uci.edu/~gohlke/pythonlibs/3i673h27/cx_Freeze-4.3.4-cp34-none-win_amd64.whl&#34;&gt;cx_Freeze-4.3.4-cp34-none-win_amd64.whl&lt;/a&gt;，完整项目在&lt;a href=&#34;https://github.com/01joy/BaiduImageDownloader&#34;&gt;我的GitHub上&lt;/a&gt;。大致有如下几点工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;研究百度图片API，获取原始图片URL列表&lt;/li&gt;
&lt;li&gt;使用python3进行多线程下载&lt;/li&gt;
&lt;li&gt;利用pyqt5实现界面&lt;/li&gt;
&lt;li&gt;利用cx_Freeze4打包整个程序&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面记录每个步骤的要点，供后人参考。&lt;/p&gt;
&lt;h1 id=&#34;百度图片api&#34;&gt;百度图片API&lt;/h1&gt;
&lt;p&gt;正常使用百度图片搜索的时候，URL是这样的：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://image.baidu.com/search/index?ct=201326592&amp;amp;z=0&amp;amp;tn=baiduimage&amp;amp;ipn=r&amp;amp;word=%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6&amp;amp;pn=0&amp;amp;istype=2&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;cl=2&amp;amp;lm=-1&amp;amp;st=-1&amp;amp;fr=&amp;amp;fmq=1439374041843_R&amp;amp;ic=0&amp;amp;se=&amp;amp;sme=&amp;amp;width=0&amp;amp;height=0&amp;amp;face=0&#34;&gt;http://image.baidu.com/search/index?ct=201326592&amp;z=0&amp;tn=baiduimage&amp;ipn=r&amp;word=%E6%AD%A6%E6%B1%89%E5%A4%A7%E5%AD%A6&amp;pn=0&amp;istype=2&amp;ie=utf-8&amp;oe=utf-8&amp;cl=2&amp;lm=-1&amp;st=-1&amp;fr=&amp;fmq=1439374041843_R&amp;ic=0&amp;se=&amp;sme=&amp;width=0&amp;height=0&amp;face=0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;里面有很多参数，有些我们并不需要，精简之后大概是这样的：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://image.baidu.com/i?tn=baiduimage&amp;amp;ie=utf-8&amp;amp;word=%E7%BE%8E%E5%A5%B3&amp;amp;pn=&amp;amp;rn=&amp;amp;z=&#34;&gt;http://image.baidu.com/i?tn=baiduimage&amp;ie=utf-8&amp;word=%E7%BE%8E%E5%A5%B3&amp;pn=&amp;rn=&amp;z=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;word为搜索关键词；pn为page number&lt;del&gt;当前是第几页，&lt;/del&gt;&lt;strong&gt;实际含义是image id&lt;/strong&gt;，表示第几张图片，从0开始；rn为每一页的图片数量，最大为60；z表示图片尺寸，z=9特大尺寸，z=3大尺寸，z=2中等尺寸，z=1小尺寸，z=0所有尺寸。&lt;/p&gt;
&lt;p&gt;但是这个URL是给”人“看的，下一页的图片是动态加载的，其html代码的图片URL数量固定。一番查询之后发现，将tn=baiduimage换成tn=resultjson_com能获取到所有图片URL的json，json当然是给”猴“看的，这样就能轻松获取到所有图片的URL。&lt;/p&gt;
&lt;p&gt;慢着，仔细看看json中的objURL，是一串连”猴“都看不懂的字符串，原来百度把图片真实URL加密了，好在加密方法是简单的字符映射，参考&lt;a href=&#34;http://blog.csdn.net/hbuxiaoshe/article/details/44780653&#34;&gt;这篇博客&lt;/a&gt;成功解密。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新：tn=resultjson_com的objURL是加密了，但是tn=resultjson的objURL并没有加密，所以采用tn=resultjson最佳。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过控制pn和rn就能获取指定数量的图片URL，但是我发现rn最大只能为60，并且不同的pn可能会有相同的图片url（比如&lt;a href=&#34;http://image.baidu.com/i?tn=resultjson_com&amp;amp;ie=utf-8&amp;amp;word=mit&amp;amp;pn=0&amp;amp;rn=60&amp;amp;z=9&#34;&gt;pn=0&lt;/a&gt;和&lt;a href=&#34;http://image.baidu.com/i?tn=resultjson_com&amp;amp;ie=utf-8&amp;amp;word=mit&amp;amp;pn=1&amp;amp;rn=60&amp;amp;z=9&#34;&gt;pn=1&lt;/a&gt;都有ippr_z2C$qAzdH3FAzdH3Fooo_z&amp;amp;e3Bd8vs7k_z&amp;amp;e3Bv54_z&amp;amp;e3BvgAzdH3F7rs5w1utsjAzdH3Fda8nAzdH3Fa080AzdH3Fda8na080aldm9bb8m_z&amp;amp;e3B3r2这个objURL），所以使用python的集合（set）去重。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新：pn实际上指图片的id，pn=0、rn=60能获取到从0~59这60个URL列表，pn=1、rn=60能获取到从1~60这60个URL列表，所以pn=0和pn=1的列表中当然有59个是重复的。正确的做法是pn=0、rn=60获取0~59这60个URL列表，然后pn=60、rn=60获取60~119这60个列表，以此类推，这样获取到的URL就不会有重复的了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;获取图片URL列表的简要代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ParseJSON&lt;/span&gt;(self, pn, rn, st):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://image.baidu.com/i?tn=resultjson_com&amp;amp;amp;amp;ie=utf-8&amp;amp;amp;amp;word=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;amp;amp;pn=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;amp;amp;rn=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;amp;amp;amp;z=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;word, pn, rn, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#print(url)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Request(url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; url, headers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; my_header)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    html &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlopen(request)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hjson &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loads(html&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gbk&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, len(hjson[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&lt;span style=&#34;color:#75715e&#34;&gt;#最后一个数据为空&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        img_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DecodeURL(hjson[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][i][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;objURL&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; img_url &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; st:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            st&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(img_url)&lt;span style=&#34;color:#75715e&#34;&gt;#去重&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;progressBar_updated_signal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;emit()&lt;span style=&#34;color:#75715e&#34;&gt;#更新进度条&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;DecodeURL是解密函数。很奇怪，json最后一个数据是空的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>再见武大</title>
      <link>http://localhost:1313/posts/2015-06-28-farewell-to-whu/</link>
      <pubDate>Sun, 28 Jun 2015 11:32:18 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-06-28-farewell-to-whu/</guid>
      <description>&lt;p&gt;2015年6月27日，武汉大学在梅园操场举办了2015年毕业典礼。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;武汉大学2015年毕业典礼，正在发言的是雷军学长[1]&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/ww1.sinaimg.cn/large/634fd979jw1etiecww24cj20hs0dctbj.jpg&#34;&gt;
武汉大学2015年毕业典礼，正在发言的是雷军学长[1]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;武汉大学2015年毕业典礼[2]&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/news.whu.edu.cn/_mediafile/whu_news/2015/06/27/29kc177qza.jpg&#34;&gt;
武汉大学2015年毕业典礼[2]&lt;/p&gt;
&lt;p&gt;坐在台下，顿感恍惚，四年前同样在梅操，同样是这些人，我们举办开学典礼。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;武汉大学2011年开学典礼[3]&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/ww3.sinaimg.cn/large/005Muw7zjw1etjl1cs943j30j60bpgpm.jpg&#34;&gt;
武汉大学2011年开学典礼[3]&lt;/p&gt;
&lt;p&gt;原来梅操到梅操的距离只有四年。&lt;/p&gt;
&lt;p&gt;毕业典礼结束，下午集体收拾行李，大家都默默无语。晚上去红牛—-大一第一次聚餐的地方—-吃最后的晚餐，这次聚餐喝了两箱啤酒，6瓶白酒！白酒下肚，前一口酒落地又向上翻滚，和后一口酒相互撞击，四年的往事喷涌而出。离别之际，每个人都把自己的心声说出来了，说出了自己的家境、对某某的感情、一个宿舍的兄弟情，说出了自己的抱负、未来的理想，再互相拥抱、道一声珍重。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;whu_bbs_graduation_2015&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-06-28-farewell-to-whu/whu_bbs_graduation_2015.jpg&#34;&gt;
山水一程，三生有幸[4]&lt;/p&gt;
&lt;p&gt;回到宿舍，所有人吐得一塌糊涂，昏睡过去。也许这就是离别的滋味，折磨着你，让你难受，只有把它吐出来，离开了，平静了，一切就好了。&lt;/p&gt;
&lt;p&gt;第二天醒来，发现隔壁宿舍的几个哥们已经走了，宿舍冷清了许多。去小卖部买了一些非必需品，只为把卡里的几十块钱用掉。打包行李，准备出发。&lt;/p&gt;
&lt;p&gt;毕业了，离开了，那些大一的迷茫、兼职，大二的信息安全竞赛，大三繁重的课业、为保研奋斗的数学建模竞赛，大四悠闲的生活也将躲藏在记忆的某个角落，不再被轻易的发现。武大的樱花、牌坊、樱顶、新图、青楼、梅操电影、珞珈之声、每天晚上在奥场穿着17号球衣跑步的女生、一起练笛的同学、在梅园食堂吃饭的一对情侣、幽默装逼的室友，这一幅幅画面，也将随着时间的车轮，慢慢消散。&lt;/p&gt;
&lt;p&gt;天下没有不散的筵席，我们来到这个世上，就注定要历经悲欢离合。在中国最美丽的大学，度过了我人生中最美好的年华，山水一程，三生有幸，感谢有你。&lt;/p&gt;
&lt;p&gt;别怕，梦的方向叫做闯，青春还没散场！&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. 武汉大学官方微博&lt;/p&gt;
&lt;p&gt;[2]. 武大新闻网：&lt;a href=&#34;http://news.whu.edu.cn/info/1002/43788.htm&#34;&gt;http://news.whu.edu.cn/info/1002/43788.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3]. 守望珞珈的新浪博客：&lt;a href=&#34;http://blog.sina.com.cn/s/blog_4da93d1f0100t6v9.html&#34;&gt;http://blog.sina.com.cn/s/blog_4da93d1f0100t6v9.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4]. 珞珈山水bbs毕业封面：&lt;a href=&#34;http://bbs.whu.edu.cn/&#34;&gt;http://bbs.whu.edu.cn/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>交流的乐趣</title>
      <link>http://localhost:1313/posts/2015-06-12-the-joy-of-communication/</link>
      <pubDate>Fri, 12 Jun 2015 11:07:04 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-06-12-the-joy-of-communication/</guid>
      <description>&lt;p&gt;今天参加了&lt;a href=&#34;http://www.lib.whu.edu.cn/news/view.asp?id=3354&#34;&gt;【珞珈阅读广场第89期】《礼物》（影像阅读）&lt;/a&gt;，感触很多，收获也很多，其中最大的收获就是体会到了交流的乐趣。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;【珞珈阅读广场第89期】《礼物》（影像阅读）[1]&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/www.lib.whu.edu.cn/news/tc/readSqua89.jpg&#34;&gt;
【珞珈阅读广场第89期】《礼物》（影像阅读）[1]&lt;/p&gt;
&lt;p&gt;影片&lt;a href=&#34;http://movie.douban.com/subject/25878911/&#34;&gt;《礼物》&lt;/a&gt;讲述了一位功成名就的大叔和身为小偷的女生相互救赎的故事。大叔白手起家，一路打拼，最后坐拥万贯家财，却抛弃了妻子和女儿，导致妻子自杀；女生的父亲早逝，母亲生活又不检点，女生曾差点一刀把母亲捅死，为了偿还男朋友的债务，女生甚至当起了小偷。在一次行窃过程中被大叔抓住，大叔要求女生当他的司机和搬运工，带他去东京，给女儿送一个礼物。在去东京的路上，大叔走访了自己曾经到过的很多地方，但大多数都是激情满怀而去，失望而归。到达东京，当女生知道大叔要送给女儿的礼物是自己的心脏，自己的生命的时候，女生陷入了两难的境地。但是女生最终答应的大叔的请求，帮其送出了礼物，大叔得到了救赎，女生也因为大叔的一句“要好好活着”而坚强乐观的面对生活。&lt;/p&gt;
&lt;p&gt;90分钟的观影结束之后，主持人抛出了如下几个问题。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;关于《礼物》这部电影，主持人提出的若干问题&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-06-12-the-joy-of-communication/questions-about-gift.jpg&#34;&gt;
关于《礼物》这部电影，主持人提出的若干问题&lt;/p&gt;
&lt;p&gt;因为上学期我也参加过珞珈阅读广场的观影活动，当时也体会到了与他人交流的乐趣，现在马上要毕业了，所以跃跃欲试，想和同学们交流一下。正好第一个问题主持人点名叫我谈一谈。我当时谈了一下我对大叔这种献出自己生命拯救外孙女的行为表示了理解，并表示自己也会做出类似的事情。在场的另外一个老师就表达了他的观点，他对日本这种“野蛮粗暴”的拯救方式不太理解，也不太赞同，大叔最后的死亡过程类似于日本武士的剖腹自尽。&lt;/p&gt;
&lt;p&gt;关于第三个问题，大家也畅所欲言，从很多个方面谈了自己的想法，大部分还是认为大叔想要给外孙女抽一个好彩头的观点。其实这个观点要到最后大叔把这个“大吉”签绑到外孙女的病床上才能感觉得到，在对后面内容不知道的情况下，我认为最合理的解释应该是这一行为体现了大叔好强甚至“蛮横”的性格，因为他抽签的时候说自己从白手起家到现在亿万富翁，就像中了头彩一样，那么我现在抽签，也要像我经商一样，取得最好的结果。有的同学甚至解读出了大叔“执念”这一层含义。&lt;/p&gt;
&lt;p&gt;对于第四个问题，好几个同学分享了自己的经历或者想法。我当时表达了“虽然你现在面临不幸，请不要过多的抱怨，珍惜当下，因为你现在所遭遇的，正是你将来所怀念的；当你再故地重游的时候，也许像这位大叔一样，再也找不到当初那种美好的感觉了。“，并顺带告诉学弟学妹们，珍惜在武大的美好时光，自己马上要毕业了，对武大的一花一木都非常的不舍。&lt;/p&gt;
&lt;p&gt;最后一个问题，主持人给出了很好的解答，并且阐明了要拯救一个身处绝望的人的困难性，很精彩。&lt;/p&gt;
&lt;p&gt;交流过程中很有意思的一件事情是，主持人给出了这样一个观点”婚姻或家庭不幸的人，其子女的性格往往也会偏离常态，并且子女的婚姻或家庭也很可能会不幸。”，对于这个观点，大家的反应比较激烈，特别是在场的那位老师，表达了他的反对意见。我因为自己的家庭环境原因，反而表示了积极的一面，就是父母婚姻不幸的人，其孩子有可能反而更加珍惜婚姻，珍惜家庭，所以家庭有可能比一般家庭更加幸福。当然也有同学表示对爱的人抓得太紧，有可能适得其反，导致婚姻的破裂。主持人讲了这样一段话，很好的表达了这个观点：&lt;/p&gt;
&lt;p&gt;让爱恰到好处－不让疯长的孤独烧毁世界，也不让泛滥的博爱窒息自由。&lt;/p&gt;
&lt;p&gt;电影从晚上7:00到8:30，讨论从8:30到10:00。讨论结束的时候，主持人把本期两本书分别赠送给了我和另一位硕士毕业生，我的赠书是&lt;a href=&#34;http://book.douban.com/subject/25904481/&#34;&gt;《那一天》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;赠书《那一天》[2]&#34; loading=&#34;lazy&#34; src=&#34;https://img1.doubanio.com/lpic/s27950209.jpg&#34;&gt;
赠书《那一天》[2]&lt;/p&gt;
&lt;p&gt;讨论结束，临走的时候大家还意犹未尽，主持人对大家的讨论表示感谢，此时有一位同学表示主持人的发言也很不错。确实，整个讨论环节，主持人很好的带动起了大家发言的兴趣和积极性，包括问题的设置，主持人的点名提问以及主持人自身精彩的解说，都非常好的带动了现场的气氛，打开了观众的话匣子。不久前我刚好参加过这位主持人主持的”周末艺苑·外院专场“演出，当时主持人随机应变的能力和绝妙的口才给我留下了深刻的印象，学弟不错，加油！&lt;/p&gt;
&lt;p&gt;这次观影交流达到了真正交流的目的，观众中有大一大二的新生，有即将毕业的本科生和研究生，也有已经成家的中年老师，大家基于各自的背景，表达自己的想法，聆听他人的观点，达到了很好的思维发散、观点碰撞的目的。此时我想到了高中背的萧伯纳讲过的一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;两个人各有一个苹果，交换之后，每个人还是只有一个苹果；然而，当两个人各有一种思想，交换之后，每个人却拥有了两种思想。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;前几天观看了踪点剧社的两部毕业大戏《理想》和《禁闭》，两部很有深意的话剧，话剧结束的时候，也有一个短暂的交流会，也很精彩。&lt;/p&gt;
&lt;p&gt;人很多时候会沉浸在自我的世界中，产生很多偏见，此时不妨听一听他人的观点，也许会豁然开朗或眼前一亮，觉得世界真奇妙。最后用H老师的一句话结束：&lt;strong&gt;技术上要多钻研，技术外要多沟通，生存两个法则。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;希望每个人都能发现并享受交流的乐趣。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. 珞珈阅读广场第89期公告：&lt;a href=&#34;http://www.lib.whu.edu.cn/news/view.asp?id=3354&#34;&gt;http://www.lib.whu.edu.cn/news/view.asp?id=3354&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]. 豆瓣读书《那一天》：&lt;a href=&#34;http://book.douban.com/subject/25904481/&#34;&gt;http://book.douban.com/subject/25904481/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的高中生活</title>
      <link>http://localhost:1313/posts/2015-06-08-my-high-school-life/</link>
      <pubDate>Mon, 08 Jun 2015 20:49:07 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-06-08-my-high-school-life/</guid>
      <description>&lt;p&gt;前几天给毕设指导老师发邮件，麻烦老师写申优推荐理由，老师回复我说她的儿子这几天高考，她不在学院，最晚要9号才能帮我写。我才意识到又是一年高考时，距离自己参加高考已经过去了四个春秋，但高中生活的场景在脑海中却依稀可见，想来是要写一篇文章追忆那平凡或不平凡的高中生活。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;classroom&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-06-08-my-high-school-life/classroom.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;在我读初中的时候，县里只有一所高中－县一中，每年中考之前，县一中都会组织一次提前批考试，如果提前批考试被录取了，正式中考的时候只要过线就能上，和现在的大学自主招生有点类似。我当时考试成绩不错，大概是全县十名左右，被分到所谓的奥赛班了。正式中考完之后，县五中开始正式招生，五中是抚州市一个老板办的私立学校，据说办学模式借鉴临川一中。当时县五中为了抢占优质生源，承诺只要去五中读书，除了3年学费全免之外，还额外奖励3000块钱，而且如果高考考上清华北大，奖励10万，考上其他十大名牌大学，奖励3万。当时考虑到五中刚开始办学，又借鉴临川一中的办学模式，老师大多是抚州的“名师”，教学质量应该不错，而且去五中读书能省不少钱，爸爸建议我去五中。我当时其实是不太情愿的，毕竟一中奥赛班聚集了全县最优秀的老师和同学，不论是环境还是各项措施，都比刚办学的五中要好。不过我还是以“只要自己认真读，在哪个学校都能取得好成绩”的理由安慰自己，去了五中。&lt;/p&gt;
&lt;p&gt;说实话，五中学生的层次确实要比一中学生差。不过好在学校把几十个成绩比较好的安排在了一个班里，配备了更好的老师，实行特殊管理。&lt;/p&gt;
&lt;p&gt;在我的印象中，高中的三年过得都一样，高三并没有比高一高二累多少，或者说高一高二并没有比高三轻松多少。每天早上6点准时起床，洗漱完之后6:20做早操，高三的时候不用做早操，改早自习了。大概6:50吃早餐，7:10开始早读。因为是理科，早读的内容不外乎英语单词、英语作文、语文背诵诗词、语文作文。8:05开始正式上课，上午四节课一直上到11:40。下课之后回家吃饭，因为妈妈在校内陪读，所以午餐能在15分钟之内解决，然后马上回到教室做几道题或者看一两个作文素材。下午1点准时午休半个小时，2:05正式上课，下午三节课一直上到4:40，好像高三的时候改成了四节课，记不清了。和中午一样，快速解决晚餐，马上回到教室，首先复习或学习语文字词，包括拼音和常考成语，当时基本把《现代汉语词典》翻熟了；然后正式晚自习，一直到晚上11点才回家洗漱睡觉。当时学校规定其他班学生10点之后就必须离开教室，但是我们班特殊规定可以自习到11点。回家洗漱完之后大概11:30了，高三的时候，我还经常在睡之前打着小电筒复习一下白天学习的内容。&lt;/p&gt;
&lt;p&gt;学校每两个星期放1天假，再过两个星期放2天半假，大多数同学只有在2天半假的时候才回家一趟。放假期间，除了做一两套卷子，大多数时间是在看电视，另外会去书店逛一次，不过买的大多数是高考复习资料，仅有的算得上是课外读物的就是《疯狂阅读》或者《读者》之类的了，小县城的书店也没有其他的“闲书”。高考要求阅读的几篇经典名著，几乎没有完整阅读过纸质版，高三的时候为了应付高考，时间紧，任务重，直接从机房下载了《巴黎圣母院》、《堂吉诃德》等改编电影，这才稍微了解了一下主要内容。学校也没有像样的图书馆，在石城那个小县城，不可能买到这些“高大上”的书。我相信大城市的很多高中生肯定看过很多这类世界名著，周末或者放假的时候也是在忙着学琴棋书画。这可能就是所谓的城乡教育差别吧，虽然这种差别在高考的时候体现得并不明显，农村的孩子在高中稍微刻苦一下，也能上不错的大学；但是一旦到了大学，大城市的孩子和我这种从农村走出来的孩子的差别一下就能看出来。大城市的孩子不论是在交际、口才、学识、才艺等方面都能轻松碾压农村的孩子，农村孩子虽然你很刻苦，卷面成绩不错，但是知识面不够宽广，格局比较小，几乎没有才艺；并不是城里人歧视你，不和你玩，但是和你聊美术，你懂吗，和你聊莎士比亚剧作，你看过吗，和你排练音乐舞蹈，你会吗。来到武大之后，我对这种城乡读书孩子之间的差别真的深有体会，无论我多么努力，好像总达不到他们的高度，总是无法融入他们的生活。&lt;/p&gt;
&lt;p&gt;高中不像大学，每个班有固定的教师，每个人有固定的座位，有自己的“左邻右舍”，坐在座位上，真的感觉很温暖。每到下课的时候，班上都闹哄哄的，同班同学之间的交流也很多，班集体的荣誉感以及个人的归属感也很强。每次打扫卫生的时候，几乎要经过每个同学的座位，问一问有没有垃圾要处理的；每次发考卷的时候，也会左顾右盼，相互逗个乐。一年中要数元旦晚会最为热闹，犹记得高三那年元旦，我为了演唱“海阔天空”，每天回家吃饭的时候就听mp3，走在路上也会小声哼唱，当然对于五音不全的我，演唱效果并不是很好:-) 晚会当天下午开始布置场地，所有人把书搬回宿舍，清空教室，在玻璃窗上贴上气球，圣诞树贴纸，或者某个小画家直接在上面画一幅画，电风扇和墙上都会挂上彩带；在教室四周摆上课桌，课桌上摆上事先买好的瓜子、花生、糖果、饮料等；同学们借来音响话筒，老师也把自己的笔记本搬到教室，一场简朴晚会现场就布置好了。晚会的所有工作人员、演员、主持人都是自己班上的同学，大家欢聚一堂，过着小集体的节日，有时候在同学和主持人的怂恿下，老师们也会激情献唱一首。现在回想起来，这种小集体归属感真的很美好，高中毕业之后，我大概再也没有过这种感觉了。&lt;/p&gt;
&lt;p&gt;春节过后，就是高考的紧要关头了，每周一的班会课上，老师都会给我们加油鼓劲，告诉我们大学有多轻松美好。百日会战那天，班主任甚至亲自泼墨，写下“辛苦数日，幸福一生”的对联，贴在教室的后墙上。高三，每天就是不停的做卷子、刷题，日考、周考、月考，不断的考试，往往上一张考卷还没有讲评，下一次考试又到了。考得多了，对成绩也不那么看重了，不过也基本稳定在前三。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;图片来自[1]&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/a3.att.hudong.com/66/83/300000908235130708833431958_950.jpg&#34;&gt;
图片来自[1]&lt;/p&gt;
&lt;p&gt;距离高考只剩一个星期的时候，题量开始下降，老师也变得温柔起来，开始提醒我们注意饮食，调整生物钟，保持充足睡眠等。考前3天，学校放假，让我们回家吃好喝好，放松心情。考前1天，看考场，当时坐我前面的一个同学找到我，叫我给他抄，并威胁我如果不给他抄，则影响我考试，碰到这样一个人渣，对我的心情还是有一定影响的，我也没敢把这件事告诉我妈。当天晚上英语老师找我谈话，宽慰我，跟我说考试的时候不要遮住试卷，他能不能抄到是他的事了，况且他最多只能抄到选择填空题，主观题还得靠真才实学。高考那两天，全校其他年级放假，为的是给所有考生创造一个安静舒适的校园环境，这一点给学校点赞。高考第一天和第二天上午还算顺利，正常发挥，第二天午休没有睡着，下午考英语的时候，听力几乎没有进入状态，哈欠连连，英语是我考得最差的一科了，当然英语本来就不是我的强项。&lt;/p&gt;
&lt;p&gt;考完之后，回到家中，妈妈给我和哥哥洗了两个甜瓜吃，寓意我们苦尽甘来:-) 高考完的那个暑假，妈妈说让我们好好在家待着休养生息，所以基本过着猪一样的生活。6月底高考成绩出来了，六百多吧，和估分差不多，纠结的是填志愿。当时也不像现在，互联网这么发达，基本上是通过《全国普通高等学校报考指南》了解每个学校，对提前批的情况也不甚了解。后来根据往年分数线以及自己的兴趣，报了武大、吉大、川大这几个学校，很幸运，录取了第一志愿第一专业WHUCS。说实话，在填志愿之前，我只知道清华北大这两个学校，对武大这所“全国最美丽的大学”一无所知，我不是狂妄自大，而是孤陋寡闻。&lt;/p&gt;
&lt;p&gt;高中真的很累、很辛苦，要想坚持下去，一定要找一个可靠的精神支柱，不论是做什么事都是这样，一直以来，支持我勇往直前的都是我的亲人和我想要改变命运的决心！要说高中3年的收获，那就是它磨砺了我的意志，增强了我忍受孤独的能力，当然高中并不是我最孤独的时候，至少有我前面提到的小集体归属感；高中三年，也认识了很要好的同学兼老乡WQ、WS和MZ。&lt;/p&gt;
&lt;p&gt;对了，高中那会每个人都会有一个座右铭，我也不例外，很大众化，汪国真的“既然选择了远方，便只顾风雨兼程”。惊闻汪老师于2015年4月26日逝世，令人嘘唏。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. &lt;a href=&#34;http://tupian.baike.com/84178/2.html&#34;&gt;永不过时的高考记忆&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>家乡遭受几十年一遇的洪灾</title>
      <link>http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/</link>
      <pubDate>Thu, 21 May 2015 20:32:19 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/</guid>
      <description>&lt;p&gt;5月19号的中午吃完饭后随手刷了一下朋友圈，发现MS表哥分享了一个&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwNDUzMjg5OA==&amp;amp;mid=208222165&amp;amp;idx=1&amp;amp;sn=8586e0f5d9830cfb4cf51921bfe1269a&amp;amp;scene=2&amp;amp;from=timeline&amp;amp;isappinstalled=0#rd&#34;&gt;链接&lt;/a&gt;，说家乡发生了十多年未遇洪灾。仔细看了一下，发现这次洪灾真的很严重，然后就给妈妈打了个电话，妈妈说从昨天下午开始下大雨，到晚上下暴雨，我家后院有一座小山，也出现了滑坡；附近的一座桥也淹了，家门口的一片农田（不是我家的）也全被淹了。妈妈说她也是头一回看到这么大而持久的暴雨。&lt;/p&gt;
&lt;p&gt;后来看QQ空间，全是关于家乡灾情的状态，很多新闻媒体也报道了。县的下游地区受灾比较严重，隔壁有个叫横江的村镇，这个镇因为坐落在横江水旁边，受灾最严重，听说整个镇断水断电，都快成孤岛了。我有一个亲戚在横江，他们家一层楼就被淹了，很多人家养的鸡鸭鱼猪等都被冲走了，几乎所有的农田被淹，损失真的很严重。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;横江镇政府被淹情形[1]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-1.jpg&#34;&gt;
横江镇政府被淹情形[1]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;这是通往横江镇的公路，下坡后就是横江镇，可以看到整个村镇已经被淹[2]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-2.jpg&#34;&gt;
这是通往横江镇的公路，下坡后就是横江镇，可以看到整个村镇已经被淹[2]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;停在路边的小汽车都被冲走了！[2]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-3.jpg&#34;&gt;
停在路边的小汽车都被冲走了！[2]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;整个村子一片汪洋[2]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-4.jpg&#34;&gt;
整个村子一片汪洋[2]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;特写[2]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-5.jpg&#34;&gt;
特写[2]&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;估计我家后山的滑坡比这严重很多[1]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/flood201505-6.jpg&#34;&gt;
估计我家后山的滑坡比这严重很多[1]&lt;/p&gt;
&lt;p&gt;我记得我小的时候（大概五六岁？），可能是1998年吧，也发生过一次特大洪水，当时也是晚上，爷爷把我和哥哥叫起来，爬到后山上去避难了。当时虽然洪水也大，但也就一晚上，第二天很快就退了，不像这次持续的特大暴雨。&lt;/p&gt;
&lt;p&gt;晚些时候我又打电话给妈妈，听妈妈说因为怕山体滑坡，已经去半山腰上的烤烟房里过夜了。那个烤烟房是我还没出生（或者我很小）的时候盖的土坯房，专门用来烤烟的。 后来一家人常年在外，也没怎么管它，很多瓦都碎了。前几年我爸回家补漏，现在是不会漏水了。但是毕竟年代久远了，而且是土坯房，又下那么大雨，还是不放心。想到妈妈一个人在家，晚上要住在一个没有水没有电的土坯房里，心里真不是滋味。以后有钱了应该把烤烟房改建成砖房，万一出现什么灾害，也有个落脚的地方。&lt;/p&gt;
&lt;p&gt;刚看了下天气预报，现在还在下雨，周六周一还有雷阵雨，希望不要再滑坡了。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;石城5月份历史天气，从15号开始连下了6天的大雨，以18,19,20为最[4]&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-21-severe-flooding-hits-my-hometown/shicheng_history_weather.png&#34;&gt;
石城5月份历史天气，从15号开始连下了6天的大雨，以18,19,20为最[4]&lt;/p&gt;
&lt;p&gt;在这次灾害中，也要感谢当今发达的互联网，让全国各地的人实时了解家乡的情况，很多救援队也纷纷赶赴家乡展开救援。希望洪水快快退去，还家乡人民安宁的生活。&lt;/p&gt;
&lt;p&gt;此次特大灾害直播：&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MjM5MzEzODgyMA==&amp;amp;mid=206189476&amp;amp;idx=1&amp;amp;sn=3e2cc4f01b7ff42f933420063f4e5a74#rd&#34;&gt;http://mp.weixin.qq.com/s?__biz=MjM5MzEzODgyMA==&amp;amp;mid=206189476&amp;amp;idx=1&amp;amp;sn=3e2cc4f01b7ff42f933420063f4e5a74#rd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;520，对石城说“我爱你”：&lt;a href=&#34;http://v.qq.com/boke/page/z/0/2/z0154dvf6d2.html&#34;&gt;http://v.qq.com/boke/page/z/0/2/z0154dvf6d2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;灾后场景：&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzAwNDUzMjg5OA==&amp;amp;mid=208435542&amp;amp;idx=1&amp;amp;sn=346f8e17448bf3a976c55591636b6e02&amp;amp;scene=1&amp;amp;from=singlemessage&amp;amp;isappinstalled=0#rd&#34;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNDUzMjg5OA==&amp;amp;mid=208435542&amp;amp;idx=1&amp;amp;sn=346f8e17448bf3a976c55591636b6e02&amp;amp;scene=1&amp;amp;from=singlemessage&amp;amp;isappinstalled=0#rd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2015年5月21号石城新闻：&lt;a href=&#34;http://v.qq.com/boke/page/w/0/4/w015442vnu4.html&#34;&gt;http://v.qq.com/boke/page/w/0/4/w015442vnu4.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相关媒体报道：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://pic.people.com.cn/n/2015/0520/c1016-27031534.html?k=1&#34;&gt;http://pic.people.com.cn/n/2015/0520/c1016-27031534.html?k=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://news.163.com/15/0521/05/AQ48GSQU00014Q4P.html&#34;&gt;http://news.163.com/15/0521/05/AQ48GSQU00014Q4P.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://news.163.com/15/0521/06/AQ4CVUIF00014AEE.html&#34;&gt;http://news.163.com/15/0521/06/AQ4CVUIF00014AEE.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. 赣江源头微信公众号文章&lt;/p&gt;
&lt;p&gt;[2]. 石城热线微信公众号文章&lt;/p&gt;
&lt;p&gt;[3]. 百度搜索“石城天气”，数据来源中国天气网&lt;/p&gt;
&lt;p&gt;[4]. 数据来源：&lt;a href=&#34;http://15tianqi.cn/shicheng5yuetianqi/&#34;&gt;http://15tianqi.cn/shicheng5yuetianqi/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>“刺猬困境”与人际交往距离</title>
      <link>http://localhost:1313/posts/2015-05-02-hedgehogs-dilemma-and-interpersonal-distance/</link>
      <pubDate>Sat, 02 May 2015 09:44:52 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-05-02-hedgehogs-dilemma-and-interpersonal-distance/</guid>
      <description>&lt;p&gt;其实在中学的时候就遇到过“刺猬困境”，只是那时候不知道这个名词，直接促使我了解这方面内容的原因是和XN的一次不愉快的交谈。&lt;/p&gt;
&lt;p&gt;那是半个多月以前的事情了，有一天中午我们一起吃完午饭回来，我们身后突然有一辆小车要启动，XN就一个劲叫我靠边走；但与此同时我边上迎面来了一辆电动车，于是我就和XN说我这边也有车，但是XN回我一句“叫你靠边走你不靠边走”，当时我听了很不舒服，还是告诉她我这边也有车，但是语气稍微重了点，我以为XN会到此为止，没想到她还是回了一句“你那么大声干嘛呀”……因为那天心情就不太好，还被她这么一说，那天我就没理她了。&lt;/p&gt;
&lt;p&gt;本来以为以XN的性格，这件事会很快过去，没想到XN一气之下不和我一起上下班了，也不和我一起打球吃饭了。我觉得事情还是有那么一点“严重”，这都还没正式入组，就和最熟悉的组员闹僵了，以后三年该怎么办呀，所以第二天晚上我还是诚恳的向XN道歉了。&lt;/p&gt;
&lt;p&gt;后来回想起这件事，确实是我的错。XN当时叫我靠边是一番好意，她多说了几句，我一个男生反倒先急了，确实是气度不够大。&lt;/p&gt;
&lt;p&gt;不过说实话，XN也并不是完全没有错，在我和她解释之后，她还不依不饶，似乎有点过了。她之前也跟我讲过自己有一次在班群里开某同学的玩笑，导致那个同学和她理论的事情。&lt;/p&gt;
&lt;p&gt;写到这的时候又让我想起了有一次教XN打乒乓球的时候，在公共场合批评她打球不够认真，哪里哪里打得不好之类的，当时我自己觉得不以为然，教她打球，当然要指出她的不对之处，但是后来XN告诉我她很生气，哪有我这样一直批评学生的老师啊。我仔细一想，对呀，我为什么在公共场合批评她打得不好呢，我是她的教练吗，我和她熟到能无话不谈吗，好像没有，所以这就是我没有把握好人际交往的一个度。我和XN只是同届同门师弟妹，我们之间应该保持一定的距离，距离太近了，说话做事无所顾忌，迟早会对某一方产生伤害，导致矛盾。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;hedgehogs dilemma&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-05-02-hedgehogs-dilemma-and-interpersonal-distance/hedgehogs-dilemma.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;刺猬困境是由叔本华提出的一个概念。寒冷的冬天，刺猬本想拥作一团、互相取暖，但一靠近便被彼此刺伤了；想分开避免扎伤，又觉得寒冷而想再彼此靠近。几个反复后，刺猬发现它们最好保持一点距离。&lt;/p&gt;
&lt;p&gt;与人交往也是这样，当两个人关系逐渐亲密起来，成为所谓的好基友、好闺蜜的时候，往往容易忽视对方的感受，说出一些伤人的话。&lt;/p&gt;
&lt;p&gt;高中的时候因为成绩还可以，班上的LL同学经常向我请教问题，我每次都会很耐心很热情的帮他解答，慢慢的关系比较好，他就经常和我一起上下课，课间跑到我的位置上和我聊天开玩笑，甚至左拍一下我右捏一下我。这让我感到很不舒服，感觉个人空间被入侵，后来我就慢慢的和他疏远，保持一个合理的距离。&lt;/p&gt;
&lt;p&gt;我和XN的那次不愉快交谈，就相当于刺猬间相互取暖导致彼此受伤的过程，不过我相信，经过几个回合，我们能慢慢的找到合适的距离，既相互取暖，又不至于受伤。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/3/35/Personal_Space.svg/640px-Personal_Space.svg.png&#34;&gt;
Edward T. Hall’s personal reaction bubbles, showing radius in feet and meters[1]&lt;/p&gt;
&lt;p&gt;上图是爱德华·霍尔提出的人际交往的四个距离，从内到外依次是亲密距离-&amp;gt;个人距离-&amp;gt;社交距离-&amp;gt;公共距离。和朋友同事之间的距离应该保持在个人距离0.45米。&lt;/p&gt;
&lt;p&gt;P.S.希望能够找到那个和我共享亲密距离的人-:)&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. 维基百科“Personal space”条目：&lt;a href=&#34;http://en.wikipedia.org/wiki/Personal_space&#34;&gt;http://en.wikipedia.org/wiki/Personal_space&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我学繁体字</title>
      <link>http://localhost:1313/posts/2015-04-21-learning-traditional-chinese-characters/</link>
      <pubDate>Tue, 21 Apr 2015 09:30:34 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-04-21-learning-traditional-chinese-characters/</guid>
      <description>&lt;p&gt;其实很早之前就打算学习繁体字了，但是直接驱动我开始行动的还是上周末的一件事。&lt;/p&gt;
&lt;p&gt;上周末组内一起去天津蓟县盘山景区游玩，进入景区看到的第一个“景点”就是下面的乾隆御笔&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;乾隆《游盘山记》&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-04-21-learning-traditional-chinese-characters/panshan.jpg&#34;&gt;
乾隆《游盘山记》&lt;/p&gt;
&lt;p&gt;当时JL师姐念了一遍，有几个繁体字不认识，在场的其他人也都模棱两可。我当时就后悔为什么不早点把繁体字学了呢。所以回所之后马上买了下面的这本《繁简字对照字典》，决定每天看一两页。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://img3.doubanio.com/lpic/s2988301.jpg&#34;&gt;
《繁简字对照字典》[1]&lt;/p&gt;
&lt;p&gt;网上也有《游盘山记》的简体版，如下&lt;/p&gt;
&lt;p&gt;连太行，拱神京，放碣石，距沧溟，走蓟野，枕长城，盖蓟州之天作，俯临重壑，如众星拱北而莫敢与争者也。—-乾隆御笔&lt;/p&gt;
&lt;p&gt;对照图片中的繁体字，学习一下。&lt;/p&gt;
&lt;p&gt;有些繁体字和简体字不是一一对应的，比如同样是“汇”字，“汇聚”对应的繁体字为“匯聚”，而“词汇”对应的繁体字为“詞彙”，这一点需要注意，网上有开源的繁简字转换工具，可以看&lt;a href=&#34;http://opencc.byvoid.com/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.zhihu.com/question/25389359&#34;&gt;关于繁简字的争论，网上已经很多了&lt;/a&gt;，我也不想评论，我只想说，学习繁体字完全是个人兴趣，我觉得繁体字很美，很有意思，一个字可以研究半天，外出游玩的时候也能顺带“和古人交流交流”，所以就学了-:)&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;[1]. 豆瓣读书《繁简字对照字典》：&lt;a href=&#34;http://book.douban.com/subject/2234412/&#34;&gt;http://book.douban.com/subject/2234412/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>不求助的人</title>
      <link>http://localhost:1313/posts/2015-04-18-someone-who-doesnt-ask-for-help/</link>
      <pubDate>Sat, 18 Apr 2015 22:58:38 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-04-18-someone-who-doesnt-ask-for-help/</guid>
      <description>&lt;p&gt;师姐推荐了最新一期《人物周刊》上的一篇文章–&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MTY0MzI5NDcwMQ==&amp;amp;mid=206411797&amp;amp;idx=1&amp;amp;sn=c0da9db2ed5a6a5bdedbfb871e45c8e6#rd&#34;&gt;“不求助的人”&lt;/a&gt;。这篇文章讲到，在上月末德国空难事件中，副驾驶卢比茨选择了坠毁飞机。调查人员随后了解到，他可能患有抑郁症，同时，他的弱视或许在持续恶化。视力和心理问题给卢比茨的职业前景笼上阴影，&lt;strong&gt;而他没有选择求助&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;“求助”似乎从来不是首选项。遇到难题自己解决，不行就上网搜搜方法，还不行，则“咬紧牙关熬过去”。不求助的表面理由是不麻烦别人，但更真实的担忧大概是“如果开口求助，别人会认为我能力低下，我会因此丧失各种机会”。本质原因在于，给自己定的目标是“在他人面前表现出众”。&lt;/p&gt;
&lt;p&gt;目标可细分为两种，“精熟型目标（mastery goal）”和“绩效型目标（performancegoal）”。精熟型目标更重视过程而非结果，认为目的是自我提升，不是获得肯定。哪怕现在还“做不到”，但通过不断努力也能有所进步。既然目标是“成为更好的自己”，那么遇到困难时，自然会寻求帮助。而绩效型目标只看最终结果，你要么“能做到”，要么“不能做到”，要么力压众人表现出色，要么挑战失败沦为笑柄。既然目的是“从他人那里获得肯定”，感觉上像是“示弱”的求助就不会被列入选项。&lt;/p&gt;
&lt;p&gt;“不求助之人”并不少见。不过，“绩效型目标”者不知道的是，求助他人时，其实会提升此人对你的评价。每个人都觉得自己智慧过人，可以为别人授业解惑，而“懂得向聪明的我询问智慧建言的人，一定也是聪明人”。沃顿商学院的研究者发现，脑力竞赛中接到“搭档”求助的人，赛后给搭档打了更高的能力分。2010年，美国西北大学研究发现，老板其实更喜欢那些遇到困境会主动求援的下属，某种意义上，“求指点迷津”可能是对老板最好的恭维。&lt;/p&gt;
&lt;p&gt;说到底，不管目标是获得成长还是赞赏，求助都是帮助达成目标的大道。越早寻求帮助，越有机会让自己成长，也越有可能掌握技能、成功解决问题，周遭人对你的评价也会因此上升。反倒是不求助的人，万一拖到事情无法收拾，自己的自信和风评都会落到极低。&lt;/p&gt;
&lt;p&gt;这篇文章讲得很有道理，我发现身边就有很多不求助的人。他们从小到大很少向别人求助，自己能做的事尽量自己做，遇到难题也尽量自己扛，给人一种能力很强、很自信的印象；同时他们也很鄙视那些经常向别人求助的人，认为这些人“就知道问别人，这么简单的都不会”。你可以称赞“不求助的人”独立自主、坚韧刻苦，但是从某种程度上这恰恰反映了他们内心的不自信，他们害怕自己的求助暴露了自己的智商，显得自己水平不够。他们属于绩效型人群，只看重结果，不看重过程，如果当上领导，下属的压力肯定不小，久而久之，就会产生类似上面的案例，宁愿选择坠毁，也不愿向他人求助。&lt;/p&gt;
&lt;p&gt;不求助的人因为很少向他人求助，他们的交际圈也很窄，他们经常把自己封锁起来，甚至把主动伸出援手的人拒之门外。长期的封闭往往导致一些心理和精神疾病，以至于做出一些病态的选择。&lt;/p&gt;
&lt;p&gt;其实，和”不求助的人“的想法相反，文中沃顿商学院的研究结果很有道理，遇到问题喜欢求助的人，反而会受到别人较高的评价，因为被求助者会潜意识的认为“懂得向聪明的我询问智慧建言的人，一定也是聪明人”，说不定双方还能由此发展出一段不错的关系；而且越早求助，就能越早解决问题。这一箭多雕的事情，恐怕是不求助的人没有想到的吧。&lt;/p&gt;
&lt;p&gt;从某种程度上来说，我自己也是一个“不求助的人”，H老师估计早就猜透了，我希望能够在读研期间&lt;a href=&#34;http://pfind.net/people/hesimin/Chinese/Favorite%20Books.htm&#34;&gt;“收获一点成就感、一点自信心”&lt;/a&gt;，从绩效型人群转移到精熟型人群。&lt;/p&gt;</description>
    </item>
    <item>
      <title>人生，平凡之路</title>
      <link>http://localhost:1313/posts/2015-04-12-my-ordinary-life/</link>
      <pubDate>Sun, 12 Apr 2015 22:31:02 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-04-12-my-ordinary-life/</guid>
      <description>&lt;p&gt;趁着周末，看了韩寒导演的处女作《后会无期》，说来奇怪，看的过程中没有丝毫感觉，情节松散，直到听到了片尾曲”平凡之路“，内心为之一颤，想来应该写点什么纪念一下。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;The-Continent1.jpg&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-04-12-my-ordinary-life/The-Continent1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;影片中三个年轻人离开家乡小岛，一路向西，横穿中国大陆，路上落下了胡生，错过了假装”小姐“的”骗子“，告别了一直”恋爱“着的笔友，遇到了善恶莫测的奇怪旅人，送走了最好的朋友，只有流浪的小狗留在了身边。几番告白，几番告别，勾勒出几段截然不同的平凡人生之路。&lt;/p&gt;
&lt;p&gt;突然间，我从影片中看到了萧瑟冷漠的世界，看到了饱经沧桑的老人挣扎着，反抗着，但最终离开了。&lt;/p&gt;
&lt;p&gt;影片给我影响最深的两句话是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;你连世界都没观过，你哪来的世界观。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果要告别，一定要用力一点,因为任何多看一眼,都有可能成为最后一眼,多说一句,都可能是最后一句。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经常有人惊讶于我小小年纪就表现得如此成熟，不知道是不是因为从小跟着父母外出闯荡，经历得多了，世界观不一样了。&lt;/p&gt;
&lt;p&gt;很小的时候就跟着父母去了广东JY，当时父亲帮别人挖煤，后来当过老师，开过早餐店，开过出租车。挖煤的时候每天都要在臭气熏天的河里挖半天煤，然后用船运回去，又要顶着炎炎夏日做半天的煤。每天完事之后脚乌漆墨黑，老茧长得跟树皮一样。开早餐店的时候，每天凌晨三四点就要起床开始和面，做包子，熬豆浆，炸油条。忙完了早餐还要去学校上班。&lt;/p&gt;
&lt;p&gt;那一年有天晚上，爸爸妈妈正在收拾店铺，准备第二天早晨的面料，YT睡到半夜突然KTBM，脚一直在发抖，我被吵醒之后马上告诉了爸爸妈妈。当时都已经很晚了，地段也比较偏僻，路上少有行人，幸好隔壁开茶叶店的老板还没有走，他用摩托车把YT送到了医院。那一天晚上格外的冷，我只记得妈妈站在医院门口不停的祈祷着什么。后来几经折腾，转院到汕头的大医院，病床好像在走廊里，医院的快餐比家里的还好吃。&lt;/p&gt;
&lt;p&gt;一家人出门在外，父母的工资很低，在外读书，一学期的学费要几百块钱，再加上YT的那场大病，家里的经济压力着实不小。父母经常为一些事大吵大闹，有几次还大打出手，作为小孩子的我只能哭着求着他们不要再吵不要再打了，过往的事件历历在目，那都是血和泪的记忆。&lt;/p&gt;
&lt;p&gt;在外漂泊的日子过得很辛苦，对于大人如此，对于我们这些青少年也一样。走在路上经常会被一些本地的小混混打，晚自习回家一定要结伴而行，不要走人少的路。我记得有一次我和表哥一起走在街上，一个骑自行车的小混混从我们背后踢了我们两脚，当时表哥正要反击，我把他拉住了，因为我知道，外地人在这势单力薄，根本不是这些人的对手，自己吃点亏，能不惹麻烦尽量不惹麻烦。但是这个小事给我的印象很深。&lt;/p&gt;
&lt;p&gt;也许是在外打拼的日子太苦，初一下学期，我、YT和妈妈回老家了，爸爸继续在JY打拼着。回到家之后，去了一个稍微好一点的初中，妈妈在我们身边陪读。&lt;/p&gt;
&lt;p&gt;因为在JY的时候，家里很穷，但是过年的时候，父母总还是会给我们买新衣服，所以每年就给我们买便宜又得体的西装。回到老家之后，城里的同学看我们经常穿西装，索性给我们取了一个外号”西装“，这导致我后来对西装厌恶至极。&lt;/p&gt;
&lt;p&gt;有一天晚上，晚自习回家，我和YT刚走出校门的时候，有一群小混混和我们逆行，他们跑的时候不小心把水溅到我们身上了，我想想也就算了，但是YT不服，故意把水溅到他们身上。我当时暗想坏了，他们会不会回来找我们算账啊，果不其然，没过多久，一帮人就追着我们打，幸好当时有一个老师路过，我向她”求救“才得以脱险回家。&lt;/p&gt;
&lt;p&gt;这些小事反应到我的性格上来就是忍气吞声，处世中庸，”吃亏是福“。这种性格在某种程度上也是一件好事，高中三年给我省了很多麻烦，也能让我沉下心来，埋头苦干，高考的时候考了全县第十一名，考取WHU也算是对我那几年的一个回报。其实农村孩子这种”两耳不闻窗外事，一心只读圣贤书“的单一发展，也给我视野狭窄、其他技能缺失埋下了伏笔，这里暂时按下不表。&lt;/p&gt;
&lt;p&gt;我还在JY的时候，有一天妈妈说我们要马上回家看外公，外公病了。回到老家之后，我和YT在院子里玩耍，后来妈妈拉我去见了外公最后一面。那大概是我记忆中第一次亲人离别。后来妈妈告诉我，外公当时还怪我到家之后为什么没有马上去看他呢，对呀，我当时为什么没有马上去看外公而是在院子里玩耍呢，也许那时候还不知道什么是离别吧。&lt;/p&gt;
&lt;p&gt;后来又经历了曾祖母的离别。记忆最深的是爷爷的离别。那大概是一年前吧，我当时正在图书馆准备保研的事情，突然爷爷给我打了一个电话，爷爷很少给我打电话的，而且那时候我们好像还不知道对方的手机号码，爷爷说是从YT那知道我的号码的。他问了我一些近况，叫我要好好照顾自己的身体，不要担心他；他还说他给YT也打了电话，给CY打电话但是没有打通；末了，他说这个电话没别的意思，就这样吧，挂了。我可以明显的感受到电话那头爷爷凄凉孤独的心，这通电话听起来很怪，我马上给爸爸打了个电话，告诉了他情况，爸爸说爷爷一个人在家，也许是太孤单了，或者是犯了老年痴呆症，爸爸还说爷爷也经常打类似的电话给他。是啊，奶奶在我很小的时候就去世了，爷爷一个人孤苦伶仃生活了将近二十年，纵然有三个儿子一个女儿，但是几个儿子儿媳之间为了老人的赡养问题竟成陌路，小儿子老大不小了也还没有成家，是孤独的在这个世界苟活着，给儿子儿媳带来更多的麻烦还是默默的离开，给年轻人省去一个包袱，爷爷心里恐怕早已有了答案。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;The-Continent2.jpg&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-04-12-my-ordinary-life/The-Continent2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;几天之后，噩耗传来，没想到那竟成了我和爷爷最后的通话。&lt;/p&gt;
&lt;p&gt;给爷爷办后事的时候，几个叔叔姑姑都回来了，这竟是我记忆中唯一一次看到大家坐在一张桌子上吃饭。&lt;/p&gt;
&lt;p&gt;很多人都说我冷漠、沉默寡言，其实我小时候不是这样的，可能是这些年经历的事太多了，我对很多事情漠不关心，很多不必要的、无意义的话也不讲了，很多点头之交的朋友也不联系了，也变得不喜欢和人争辩了；我开始喜欢独处，喜欢一个人走在路上，看过往匆匆行人，喜欢看《文化苦旅》、《一九八四》、《百年孤独》、《活着》……&lt;/p&gt;
&lt;p&gt;身边很多同学喜欢三五成群出门，经常见他们和各种各样的朋友打招呼。有一次我和一个夏令营认识的同学打招呼，XN居然诧异的告诉我这是她第一次在ICT发现我也有认识的人。为什么要有那么多朋友呢，可能你会告诉我你的QQ好友都上千了，但是真正在你社交圈里的朋友，能够和你交心的朋友，超过10个吗？逢年过节，为了维系那990个你都不记得他/她的模样的朋友，群发着各种短信，朋友圈、QQ空间、微博里不停的给别人点赞，有必要吗？我已经厌倦了这些虚情假意。&lt;/p&gt;
&lt;p&gt;令我很感动的是，前几天，我正在实验室敲代码的时候，接到了WQ的一个电话，我跟他抱怨了一下在北京的各种不顺，他跟我说一个人出门在外，要好好照顾自己；同时另一个好友WS也经常跟我说想和我聊聊。这让我感到非常温暖，虽然我现在一无所有，但是有一两个至交，足以。&lt;/p&gt;
&lt;p&gt;我已经走过了二十多年，是时候走出去看看世界，说不准世界观就形成了呢。&lt;/p&gt;</description>
    </item>
    <item>
      <title>One month in Beijing</title>
      <link>http://localhost:1313/posts/2015-03-30-one-month-in-beijing/</link>
      <pubDate>Mon, 30 Mar 2015 19:23:42 +0800</pubDate>
      <guid>http://localhost:1313/posts/2015-03-30-one-month-in-beijing/</guid>
      <description>&lt;p&gt;2015年2月28日到达北京，到现在一月有余，是时候月度总结了。&lt;/p&gt;
&lt;h1 id=&#34;这是我第三次来北京&#34;&gt;这是我第三次来北京&lt;/h1&gt;
&lt;p&gt;2014年的6月份第一次来北京，去北大计算所实习十天。感受了一下北大计算所p老师及其博士生z的冷漠。我还记得刚到的那天晚上一个人孤零零的走在北京的大街上寻找北大方正员工宿舍的场景。每天重复着朝九晚十的固定模式，每个人都像机器一样的工作，实验室只有敲击键盘的声音，偶尔看到p的时候他也是阴沉着脸，临走的时候还被z批评了。虽然p承诺说只要我通过夏令营面试就会要我，但是这明显就是废话呀；而且这段不算愉快的实习经历让我对p的实验室产生了厌恶。&lt;/p&gt;
&lt;p&gt;回学校之后开始准备期末考试和7月份的夏令营，并于2014年7月9日到达北京，这次的行程包括北大计算所和中科院计算所的夏令营。北大计算所因为机试和综合排名不占优势，败下阵来，不过现在想想当初幸好没有进p的实验室，要不然天天对着p的臭脸，估计要疯。&lt;/p&gt;
&lt;p&gt;中科院计算所的风格完全不像北大，中科院真正做到了海纳百川，一视同仁，不像北大看不起校外学生。来北京之前和ict的h老师沟通过很多次，发现我和h老师的性格很相似，我非常崇拜h老师严谨的处事风格，经过认真的准备，我也顺利通过了ict的夏令营，然后跑去深圳siat玩耍了。&lt;/p&gt;
&lt;h1 id=&#34;北京的物价真是贵&#34;&gt;北京的物价真是贵&lt;/h1&gt;
&lt;p&gt;这次是来ict完成我的本科毕业设计的，大概要待到5月初。一来从家里不方便带太多东西，二来想想要在北京待三年，所以准备在北京重新置办生活用品。&lt;/p&gt;
&lt;p&gt;2月28刚到北京，去了师兄推荐的家乐福大超市。超市很大，有两层，不过里面的东西真是贵。也就买了被子、三件套、桶、盆，花了四五百，很可恨的是，很薄的春秋单人被子，居然要169，这还是最便宜的，床垫比被子还贵，要199。&lt;/p&gt;
&lt;p&gt;没必要的用品可以不买，但是饭不能不吃。以前在学校一天也就十几块，到北京后发现，一顿饭就十多块了。早餐一个鸡蛋要2块，一个小包子要1.5块，哎，想想以前自己家做早餐的时候1块钱4个大肉包子啊，当初怎么不多吃几个呢。&lt;/p&gt;
&lt;p&gt;餐厅里的饭菜确实贵，不过国科大食堂的饭菜既便宜又好吃，赞一个。&lt;/p&gt;
&lt;h1 id=&#34;北京的雾霾&#34;&gt;北京的雾霾&lt;/h1&gt;
&lt;p&gt;来北京之前对北京的雾霾也略有耳闻，觉得那是北京人的小题大做，武汉也是扬尘满天飞，我也活得好好的啊；不过真来北京之后，确实受不了，放眼望去，街道上灰蒙蒙的一片，路上的特大广告牌都看不清。也许是雾霾加干燥的原因，刚来北京那一个星期，嗓子特别不舒服，每天早晨刷牙的时候都恶心干呕，不过后来慢慢好了。&lt;/p&gt;
&lt;p&gt;3月28那天，北京还遭遇了沙尘暴，那场景真像外星人袭击地球。所以来北京，口罩是必需品。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;3月28日北京的沙尘暴&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/y0.ifengimg.com/cmpp/2015/03/28/14/1120a1ac-4317-49ca-8114-5962823270e1_size48_w600_h400.jpg&#34;&gt;
3月28日北京的沙尘暴[1]&lt;/p&gt;
&lt;h1 id=&#34;北京的风景&#34;&gt;北京的风景&lt;/h1&gt;
&lt;p&gt;来北京的前3个星期，忙于组内布置的任务，也是过着朝九晚十的生活，后来想想也不能天天这样，我应该出去透透气，于是选择了颐和园，3月份属于颐和园景区的淡季，加上学生证，门票不贵。颐和园不愧是皇家园林，里面的景色确实很漂亮，有万寿山、昆明湖，湖水还算干净。&lt;/p&gt;
&lt;p&gt;我去的那天天气很好，空气质量也不错；人虽多，但不算拥挤，部分原因是颐和园真是太大了。我在游玩的过程中看到了很多外国旅游团，听到过英语、法语、日语、韩语、粤语、中文，让我默默联想起了八国联军侵略中国的场景。&lt;/p&gt;
&lt;p&gt;在游玩的过程中遇到了一个很温馨的“外国小家庭”，妈妈是外国人，爸爸应该也是外国人，爸爸和妈妈聊天的时候是用英语，但是爸爸和儿子却是用中文，他们还有一个坐在婴儿车里的小女儿，儿子坐在湖边玩ipad，小女儿在车里哭个不停…&lt;/p&gt;
&lt;p&gt;虽然颐和园的风景很好，但是里面居然有很多蚊子（小虫子）！期间有一个虫子撞到我的嘴巴，还有一个钻进了我的耳朵。可能是春天到了，万物复苏，加上颐和园内潮湿，植物丰富，给虫子提供了很好的环境。&lt;/p&gt;
&lt;p&gt;下面放几张游玩时拍的照片。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;谁能告诉我这是什么乐器&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace1.jpg&#34;&gt;
谁能告诉我这是什么乐器&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;学太极的外国人&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace2.jpg&#34;&gt;
学太极的外国人&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;这也是迎春花？&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace3.jpg&#34;&gt;
这也是迎春花？&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;这个角度的颐和园很美&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace4.jpg&#34;&gt;
这个角度的颐和园很美&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;长廊&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace5.jpg&#34;&gt;
长廊&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;准备回去的时候看到的，各种长枪大炮，据说是在抓拍一种珍稀鸟类。。。&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/Summer-Palace6.jpg&#34;&gt;
准备回去的时候看到的，各种长枪大炮，据说是在抓拍一种珍稀鸟类。。。&lt;/p&gt;
&lt;p&gt;颐和园的风景虽好，但就自然风光来说，比不上南方早已复苏的大自然。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;家乡的油菜花，比颐和园的迎春花漂亮多了-:)&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2015-03-30-one-month-in-beijing/rape-flowers.jpg&#34;&gt;
家乡的油菜花，比颐和园的迎春花漂亮多了-:)&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;武大樱花已经争奇斗艳了，北方还是萧瑟一片&#34; loading=&#34;lazy&#34; src=&#34;https://i0.wp.com/i2.chinanews.com/simg/hd/2015/03/21/7e9527ca232f4253bfb86eef15cee517.jpg&#34;&gt;
武大樱花已经争奇斗艳了，北方还是萧瑟一片[2]&lt;/p&gt;
&lt;h1 id=&#34;后记&#34;&gt;后记&lt;/h1&gt;
&lt;p&gt;没来北京之前，我想着以后一定要在北京工作，还要争取在北京安家落户。虽然北京生活压力很大，但是机会和挑战也多，这不就是我要的生活吗；而且北京是全国的政治、经济和文化中心，可以很方便的去感受中国几千年的文化和历史。在北京生活一个月之后，我的想法变了，很重要的原因是北京的雾霾和气候。雾霾不是一个人一天两天能够解决的，你必须尽量减少不必要的出行，跑步健身什么的就更别提了；北京属于北温带季风气候，冬天很干燥，而且放眼望去看不到绿色，ict旁边种的树，光秃秃的只有树干。这种钢筋混凝土构筑起来的城市，我真的不喜欢。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;和南方的一些城市相比，北京真的不适宜居住，尤其对于南方人！&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;p&gt;[1]. 新京报网：&lt;a href=&#34;http://www.bjnews.com.cn/news/2015/03/28/358122.html&#34;&gt;http://www.bjnews.com.cn/news/2015/03/28/358122.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]. 中新网：&lt;a href=&#34;http://www.chinanews.com/tp/hd2011/2015/03-21/496005.shtml&#34;&gt;http://www.chinanews.com/tp/hd2011/2015/03-21/496005.shtml&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>从一个数字序列中取若干个数字使得和为某个数，问共有多少种取数方案？</title>
      <link>http://localhost:1313/posts/2014-11-15-subset-sum-problem/</link>
      <pubDate>Sat, 15 Nov 2014 00:11:32 +0800</pubDate>
      <guid>http://localhost:1313/posts/2014-11-15-subset-sum-problem/</guid>
      <description>&lt;p&gt;在上一题POJ Problem 1837: Balance中，我们曾讲到，如果只有两个挂钩，问题会好办得多，就拿题目给的样例数据来说：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Sample Input
2 4
-2 3
3 4 5 8

Sample Output
2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img alt=&#34;number-balance.png&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2014-11-15-subset-sum-problem/number-balance.png&#34;&gt;
如上图所示，给定重量为3,4,5,8的砝码，放在一个左右臂长分别为2和3的天平上，要使天平平衡，问有多少种方法。&lt;/p&gt;
&lt;p&gt;这个问题可以稍加转换，假设放在左边的重量为x，右边为y，则有如下方程组成立：&lt;/p&gt;
$$
\begin{cases}
x+y=3+4+5+8=20\\
2x=3y
\end{cases}
$$&lt;p&gt;马上解出x=12,y=8。这样就相当于把原问题转换为：&lt;strong&gt;已知序列3,4,5,8，问从中取若干个数使和为12（或8）的方案数有多少个？&lt;/strong&gt; 因为取出数字和为8，则剩余和为12，所以和为8和12的方案数是相等的。&lt;/p&gt;
&lt;p&gt;因为这里只有4个数字，一眼就能看出有(3,4,5)，(4,8)能使和为12，即只有两种方案。如果给的数字较多较大，该怎样写代码求出呢？可以使用动态规划求解。&lt;/p&gt;
&lt;p&gt;设dp[i][j]表示从前i个数中选若干个数使得和为j的方案数，则我们可以得到这样的状态转换方程：&lt;/p&gt;
$$
\begin{cases}
dp[i][j]=1\qquad\qquad\qquad\qquad\qquad\qquad\qquad\qquad\text{if}i=0\&amp;\&amp;j=0\\
dp[i][j]=dp[i-1][j]\qquad\qquad\qquad\qquad\qquad\qquad\text{if}w[i]&gt;j\\
dp[i][j]=dp[i-1][j]+dp[i-1][j-w[i]]\qquad\quad\text{if}w[i]&lt;=j
\end{cases}
$$&lt;ol&gt;
&lt;li&gt;当i=0&amp;amp;&amp;amp;j=0时，dp[i][j]=1表示从0个数中取若干个数使得和为0，当然只有1种方案，那就是什么都不取&lt;/li&gt;
&lt;li&gt;当w[i]&amp;gt;j时，第i个数用不上，因为你单个数字都超过j了，怎么使和为j呢，所以直接dp[i][j]=dp[i-1][j]&lt;/li&gt;
&lt;li&gt;当w[i]&amp;lt;=j时，第i个数可以用了，这个时候分两种情况，用或者不用第i个数，如果不用，则和w[i]&amp;gt;j时一样dp[i][j]=dp[i-1][j]，如果用的话，则要从前i-1个数中取若干个数使和为j-w[i]，也就是dp[i-1][j-w[i]]，这样总的方案数就是用和不用第i个数的方案数之和，即dp[i][j]=dp[i-1][j]+dp[i-1][j-w[i]]&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面是针对这个例子我手算的一个图：&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;20141115_170507.jpg&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/posts/2014-11-15-subset-sum-problem/20141115_170507.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上面的内容设计一个OJ题如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;描述：
给定一个正整数数字序列，从中取出若干个数字，使得这些数字之和为某一个特定的值，求所有取法的方案数。

输入：
输入包含多个测试用例，每个测试用例的第一行有两个数N,S，N表示这个数字序列共有多少个数字；S表示取出的数字之和为S。后面一行包含N个正整数。
N,S为0程序结束

输出：
每个测试用例输出一行，表示从N个数中取若干个数使得和为S的方案总数。

样例输入：
4 8
3 4 5 8
4 12
3 4 5 8
10 10
10 9 8 7 6 5 4 3 2 1
0 0

样例输出：
2
2
10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;知道了状态转换方程，我们可以很快的写出以上OJ的代码：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git相关笔记</title>
      <link>http://localhost:1313/posts/2014-11-11-git-notes/</link>
      <pubDate>Tue, 11 Nov 2014 23:12:34 +0800</pubDate>
      <guid>http://localhost:1313/posts/2014-11-11-git-notes/</guid>
      <description>&lt;h1 id=&#34;一第一次使用github的步骤&#34;&gt;一、第一次使用Github的步骤：&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;a href=&#34;https://github.com/new&#34;&gt;这个页面&lt;/a&gt;中填写Repo名称&lt;/li&gt;
&lt;li&gt;不要勾选Initialize this repository with a README&lt;/li&gt;
&lt;li&gt;点击Create repository&lt;/li&gt;
&lt;li&gt;在本地使用Git命令行工具进入到和第1步填写Repo相同名称的文件夹中（此文件夹中已包含你要push到Github上的内容），执行以下几个命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch README.md &lt;span style=&#34;color:#75715e&#34;&gt;#optional&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your comment&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git remote add origin https://github.com/UserName/RepoName
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;如果你在第2步中勾选了Initialize this repository with a README，那么在第4步中省略touch README.md并且在git add .之前，执行第5行代码，然后git pull origin master将远端（remote）的内容pull到本地&lt;/li&gt;
&lt;li&gt;关于Git命令中的fetch和pull的区别，请看&lt;a href=&#34;https://blog.csdn.net/wfdtxz/article/details/8632811&#34;&gt;这篇博文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;关于Git bash和Github的连接，请看&lt;a href=&#34;https://www.cnblogs.com/fnng/archive/2011/08/25/2153807.html&#34;&gt;这篇博文&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;二git命令中fetch和pull的区别转载&#34;&gt;二、Git命令中fetch和pull的区别（&lt;a href=&#34;https://blog.csdn.net/wfdtxz/article/details/8632811&#34;&gt;转载&lt;/a&gt;）&lt;/h1&gt;
&lt;p&gt;Git中从远程的分支获取最新的版本到本地有这样2个命令：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
